{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";\nimport _groupBy from \"lodash/groupBy\";\nimport _map from \"lodash/map\";\nimport _filter from \"lodash/filter\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/BlockChooser/BlockChooser.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Accordion, Button } from 'semantic-ui-react';\nimport { useIntl, defineMessages } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport AnimateHeight from 'react-animate-height';\nimport config from '@plone/volto/registry';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport BlockChooserSearch from './BlockChooserSearch';\nimport { FormattedMessage } from 'react-intl';\nconst messages = defineMessages({\n  fold: {\n    \"id\": \"Fold\",\n    \"defaultMessage\": \"Fold\"\n  },\n  unfold: {\n    \"id\": \"Unfold\",\n    \"defaultMessage\": \"Unfold\"\n  }\n});\nconst BlockChooser = ({\n  currentBlock,\n  onInsertBlock,\n  onMutateBlock,\n  allowedBlocks,\n  showRestricted,\n  blocksConfig = config.blocks.blocksConfig,\n  blockChooserRef,\n  properties = {}\n}) => {\n  const intl = useIntl();\n  const useAllowedBlocks = !_isEmpty(allowedBlocks);\n  const filteredBlocksConfig = _filter(blocksConfig, item => {\n    if (showRestricted) {\n      if (useAllowedBlocks) {\n        return allowedBlocks.includes(item.id);\n      } else {\n        return true;\n      }\n    } else {\n      if (useAllowedBlocks) {\n        return allowedBlocks.includes(item.id);\n      } else {\n        // Overload restricted as a function, so we can decide the availability of a block\n        // depending on this function, given properties (current present blocks) and the\n        // block being evaluated\n        return typeof item.restricted === 'function' ? !item.restricted({\n          properties,\n          block: item\n        }) : !item.restricted;\n      }\n    }\n  });\n  let blocksAvailable = {};\n  const mostUsedBlocks = _filter(filteredBlocksConfig, item => item.mostUsed);\n  if (mostUsedBlocks) {\n    blocksAvailable.mostUsed = mostUsedBlocks;\n  }\n  const groupedBlocks = _groupBy(filteredBlocksConfig, item => item.group);\n  blocksAvailable = _objectSpread(_objectSpread({}, blocksAvailable), groupedBlocks);\n  const groupBlocksOrder = _filter(config.blocks.groupBlocksOrder, item => Object.keys(blocksAvailable).includes(item.id));\n  const [activeIndex, setActiveIndex] = React.useState(0);\n  function handleClick(e, titleProps) {\n    const {\n      index\n    } = titleProps;\n    const newIndex = activeIndex === index ? -1 : index;\n    setActiveIndex(newIndex);\n  }\n  const [filterValue, setFilterValue] = React.useState('');\n  const getFormatMessage = message => intl.formatMessage({\n    id: message,\n    defaultMessage: message\n  });\n  function blocksAvailableFilter(blocks) {\n    return blocks.filter(block => {\n      var _filterVariations;\n      return getFormatMessage(block.title).toLowerCase().includes(filterValue.toLowerCase()) || ((_filterVariations = filterVariations(block)) === null || _filterVariations === void 0 ? void 0 : _filterVariations.length);\n    });\n  }\n  function filterVariations(block) {\n    var _block$variations;\n    return (_block$variations = block.variations) === null || _block$variations === void 0 ? void 0 : _block$variations.filter(variation => getFormatMessage(variation.title).toLowerCase().includes(filterValue.toLowerCase()) && !variation.title.toLowerCase().includes('default'));\n  }\n  const ButtonGroup = ({\n    block\n  }) => {\n    var _variations$;\n    const variations = filterVariations(block);\n    return __jsx(Button.Group, {\n      key: block.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, __jsx(Button, {\n      icon: true,\n      basic: true,\n      className: block.id,\n      onClick: e => {\n        onInsertBlock ? onInsertBlock(currentBlock, {\n          '@type': block.id\n        }) : onMutateBlock(currentBlock, {\n          '@type': block.id\n        });\n        e.stopPropagation();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, __jsx(Icon, {\n      name: block.icon,\n      size: \"36px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }), getFormatMessage(block.title), filterValue && (variations === null || variations === void 0 ? void 0 : (_variations$ = variations[0]) === null || _variations$ === void 0 ? void 0 : _variations$.title) && __jsx(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, getFormatMessage(variations[0].title))));\n  };\n  return __jsx(\"div\", {\n    className: `blocks-chooser${config.experimental.addBlockButton.enabled ? ' new-add-block' : ''}`,\n    ref: blockChooserRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, __jsx(BlockChooserSearch, {\n    onChange: value => setFilterValue(value),\n    searchValue: filterValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }), filterValue ? __jsx(React.Fragment, null, _map(blocksAvailableFilter(filteredBlocksConfig), block => __jsx(ButtonGroup, {\n    block: block,\n    key: block.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  })), blocksAvailableFilter(filteredBlocksConfig).length === 0 && __jsx(\"h4\", {\n    style: {\n      textAlign: 'center',\n      lineHeight: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"No results found\",\n    defaultMessage: \"No results found\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }))) : __jsx(Accordion, {\n    fluid: true,\n    styled: true,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, _map(groupBlocksOrder, (groupName, index) => __jsx(React.Fragment, {\n    key: groupName.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, __jsx(Accordion.Title, {\n    \"aria-label\": activeIndex === index ? `${intl.formatMessage(messages.fold)} ${groupName.title} blocks` : `${intl.formatMessage(messages.unfold)} ${groupName.title} blocks`,\n    active: activeIndex === index,\n    index: index,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, intl.formatMessage({\n    id: groupName.id,\n    defaultMessage: groupName.title\n  }), __jsx(\"div\", {\n    className: \"accordion-tools\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, activeIndex === 0 ? __jsx(Icon, {\n    name: upSVG,\n    size: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }) : __jsx(Icon, {\n    name: downSVG,\n    size: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }))), __jsx(Accordion.Content, {\n    className: groupName.id,\n    active: activeIndex === index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, __jsx(AnimateHeight, {\n    animateOpacity: true,\n    duration: 500,\n    height: activeIndex === index ? 'auto' : 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, _map(blocksAvailable[groupName.id], block => __jsx(ButtonGroup, {\n    block: block,\n    key: block.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }))))))));\n};\nBlockChooser.propTypes = {\n  currentBlock: PropTypes.string.isRequired,\n  onMutateBlock: PropTypes.func,\n  onInsertBlock: PropTypes.func,\n  allowedBlocks: PropTypes.arrayOf(PropTypes.string),\n  blocksConfig: PropTypes.objectOf(PropTypes.any)\n};\nexport default /*#__PURE__*/React.forwardRef((props, ref) => __jsx(BlockChooser, _extends({}, props, {\n  blockChooserRef: ref,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 3\n  }\n})));","map":{"version":3,"names":["React","PropTypes","Accordion","Button","useIntl","defineMessages","Icon","AnimateHeight","config","upSVG","downSVG","BlockChooserSearch","FormattedMessage","messages","fold","unfold","BlockChooser","currentBlock","onInsertBlock","onMutateBlock","allowedBlocks","showRestricted","blocksConfig","blocks","blockChooserRef","properties","intl","useAllowedBlocks","filteredBlocksConfig","item","includes","id","restricted","block","blocksAvailable","mostUsedBlocks","mostUsed","groupedBlocks","group","groupBlocksOrder","Object","keys","activeIndex","setActiveIndex","useState","handleClick","e","titleProps","index","newIndex","filterValue","setFilterValue","getFormatMessage","message","formatMessage","defaultMessage","blocksAvailableFilter","filter","title","toLowerCase","filterVariations","length","variations","variation","ButtonGroup","stopPropagation","icon","experimental","addBlockButton","enabled","value","textAlign","lineHeight","groupName","propTypes","string","isRequired","func","arrayOf","objectOf","any","forwardRef","props","ref"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/BlockChooser/BlockChooser.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { filter, map, groupBy, isEmpty } from 'lodash';\nimport { Accordion, Button } from 'semantic-ui-react';\nimport { useIntl, defineMessages } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport AnimateHeight from 'react-animate-height';\nimport config from '@plone/volto/registry';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport BlockChooserSearch from './BlockChooserSearch';\nimport { FormattedMessage } from 'react-intl';\n\nconst messages = defineMessages({\n  fold: {\n    id: 'Fold',\n    defaultMessage: 'Fold',\n  },\n  unfold: {\n    id: 'Unfold',\n    defaultMessage: 'Unfold',\n  },\n});\n\nconst BlockChooser = ({\n  currentBlock,\n  onInsertBlock,\n  onMutateBlock,\n  allowedBlocks,\n  showRestricted,\n  blocksConfig = config.blocks.blocksConfig,\n  blockChooserRef,\n  properties = {},\n}) => {\n  const intl = useIntl();\n  const useAllowedBlocks = !isEmpty(allowedBlocks);\n\n  const filteredBlocksConfig = filter(blocksConfig, (item) => {\n    if (showRestricted) {\n      if (useAllowedBlocks) {\n        return allowedBlocks.includes(item.id);\n      } else {\n        return true;\n      }\n    } else {\n      if (useAllowedBlocks) {\n        return allowedBlocks.includes(item.id);\n      } else {\n        // Overload restricted as a function, so we can decide the availability of a block\n        // depending on this function, given properties (current present blocks) and the\n        // block being evaluated\n        return typeof item.restricted === 'function'\n          ? !item.restricted({ properties, block: item })\n          : !item.restricted;\n      }\n    }\n  });\n\n  let blocksAvailable = {};\n  const mostUsedBlocks = filter(filteredBlocksConfig, (item) => item.mostUsed);\n  if (mostUsedBlocks) {\n    blocksAvailable.mostUsed = mostUsedBlocks;\n  }\n  const groupedBlocks = groupBy(filteredBlocksConfig, (item) => item.group);\n  blocksAvailable = {\n    ...blocksAvailable,\n    ...groupedBlocks,\n  };\n\n  const groupBlocksOrder = filter(config.blocks.groupBlocksOrder, (item) =>\n    Object.keys(blocksAvailable).includes(item.id),\n  );\n  const [activeIndex, setActiveIndex] = React.useState(0);\n\n  function handleClick(e, titleProps) {\n    const { index } = titleProps;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    setActiveIndex(newIndex);\n  }\n  const [filterValue, setFilterValue] = React.useState('');\n\n  const getFormatMessage = (message) =>\n    intl.formatMessage({\n      id: message,\n      defaultMessage: message,\n    });\n\n  function blocksAvailableFilter(blocks) {\n    return blocks.filter(\n      (block) =>\n        getFormatMessage(block.title)\n          .toLowerCase()\n          .includes(filterValue.toLowerCase()) ||\n        filterVariations(block)?.length,\n    );\n  }\n  function filterVariations(block) {\n    return block.variations?.filter(\n      (variation) =>\n        getFormatMessage(variation.title)\n          .toLowerCase()\n          .includes(filterValue.toLowerCase()) &&\n        !variation.title.toLowerCase().includes('default'),\n    );\n  }\n\n  const ButtonGroup = ({ block }) => {\n    const variations = filterVariations(block);\n    return (\n      <Button.Group key={block.id}>\n        <Button\n          icon\n          basic\n          className={block.id}\n          onClick={(e) => {\n            onInsertBlock\n              ? onInsertBlock(currentBlock, {\n                  '@type': block.id,\n                })\n              : onMutateBlock(currentBlock, {\n                  '@type': block.id,\n                });\n            e.stopPropagation();\n          }}\n        >\n          <Icon name={block.icon} size=\"36px\" />\n          {getFormatMessage(block.title)}\n          {filterValue && variations?.[0]?.title && (\n            <small>{getFormatMessage(variations[0].title)}</small>\n          )}\n        </Button>\n      </Button.Group>\n    );\n  };\n\n  return (\n    <div\n      className={`blocks-chooser${\n        config.experimental.addBlockButton.enabled ? ' new-add-block' : ''\n      }`}\n      ref={blockChooserRef}\n    >\n      <BlockChooserSearch\n        onChange={(value) => setFilterValue(value)}\n        searchValue={filterValue}\n      />\n      {filterValue ? (\n        <>\n          {map(blocksAvailableFilter(filteredBlocksConfig), (block) => (\n            <ButtonGroup block={block} key={block.id} />\n          ))}\n          {blocksAvailableFilter(filteredBlocksConfig).length === 0 && (\n            <h4 style={{ textAlign: 'center', lineHeight: '40px' }}>\n              <FormattedMessage\n                id=\"No results found\"\n                defaultMessage=\"No results found\"\n              />\n            </h4>\n          )}\n        </>\n      ) : (\n        <Accordion fluid styled className=\"form\">\n          {map(groupBlocksOrder, (groupName, index) => (\n            <React.Fragment key={groupName.id}>\n              <Accordion.Title\n                aria-label={\n                  activeIndex === index\n                    ? `${intl.formatMessage(messages.fold)} ${\n                        groupName.title\n                      } blocks`\n                    : `${intl.formatMessage(messages.unfold)} ${\n                        groupName.title\n                      } blocks`\n                }\n                active={activeIndex === index}\n                index={index}\n                onClick={handleClick}\n              >\n                {intl.formatMessage({\n                  id: groupName.id,\n                  defaultMessage: groupName.title,\n                })}\n                <div className=\"accordion-tools\">\n                  {activeIndex === 0 ? (\n                    <Icon name={upSVG} size=\"20px\" />\n                  ) : (\n                    <Icon name={downSVG} size=\"20px\" />\n                  )}\n                </div>\n              </Accordion.Title>\n              <Accordion.Content\n                className={groupName.id}\n                active={activeIndex === index}\n              >\n                <AnimateHeight\n                  animateOpacity\n                  duration={500}\n                  height={activeIndex === index ? 'auto' : 0}\n                >\n                  {map(blocksAvailable[groupName.id], (block) => (\n                    <ButtonGroup block={block} key={block.id} />\n                  ))}\n                </AnimateHeight>\n              </Accordion.Content>\n            </React.Fragment>\n          ))}\n        </Accordion>\n      )}\n    </div>\n  );\n};\n\nBlockChooser.propTypes = {\n  currentBlock: PropTypes.string.isRequired,\n  onMutateBlock: PropTypes.func,\n  onInsertBlock: PropTypes.func,\n  allowedBlocks: PropTypes.arrayOf(PropTypes.string),\n  blocksConfig: PropTypes.objectOf(PropTypes.any),\n};\n\nexport default React.forwardRef((props, ref) => (\n  <BlockChooser {...props} blockChooserRef={ref} />\n));\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Fold","defaultMessage":"Fold"},{"id":"Unfold","defaultMessage":"Unfold"},{"id":"No results found","defaultMessage":"No results found"}]}},"sourceType":"module","externalDependencies":[]}