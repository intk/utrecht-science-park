{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/**\n * submitForm reducer.\n * @module reducers/submitForm\n */\nimport { SUBMIT_FORM_ACTION, EXPORT_CSV_FORMDATA, GET_FORM_DATA, CLEAR_FORM_DATA } from 'volto-form-block/actions';\nfunction download(filename, text) {\n  var element = document.createElement('a');\n  element.setAttribute('href', 'data:text/comma-separated-values;charset=utf-8,' + encodeURIComponent(text));\n  element.setAttribute('download', filename);\n  element.style.display = 'none';\n  document.body.appendChild(element);\n  element.click();\n  document.body.removeChild(element);\n}\nconst initialState = {\n  error: null,\n  loaded: false,\n  loading: false\n};\n\n/**\n * submitForm reducer.\n * @function submitForm\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport const submitForm = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case `${SUBMIT_FORM_ACTION}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: false,\n        loading: true\n      });\n    case `${SUBMIT_FORM_ACTION}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: true,\n        loading: false\n      });\n    case `${SUBMIT_FORM_ACTION}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        loaded: false,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\n\n/**\n * exportCsvFormData reducer.\n * @function exportCsvFormData\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport const exportCsvFormData = (state = initialState, action = {}) => {\n  var _state$content$data$i, _state$content, _state$content$data;\n  switch (action.type) {\n    case `${EXPORT_CSV_FORMDATA}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        result: null,\n        loaded: false,\n        loading: true\n      });\n    case `${EXPORT_CSV_FORMDATA}_SUCCESS`:\n      download(`export-${(_state$content$data$i = (_state$content = state.content) === null || _state$content === void 0 ? void 0 : (_state$content$data = _state$content.data) === null || _state$content$data === void 0 ? void 0 : _state$content$data.id) !== null && _state$content$data$i !== void 0 ? _state$content$data$i : 'form'}.csv`, action.result);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        result: action.result,\n        loaded: true,\n        loading: false\n      });\n    case `${EXPORT_CSV_FORMDATA}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        result: null,\n        loaded: false,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\n\n/**\n * getFormData reducer.\n * @function getFormData\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport const getFormData = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case `${GET_FORM_DATA}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: false,\n        loading: true,\n        result: null\n      });\n    case `${GET_FORM_DATA}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: true,\n        result: action.result,\n        loading: false\n      });\n    case `${GET_FORM_DATA}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        result: null,\n        loaded: true,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\n\n/**\n * clearFormData reducer.\n * @function clearFormData\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport const clearFormData = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case `${CLEAR_FORM_DATA}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: false,\n        loading: true\n      });\n    case `${CLEAR_FORM_DATA}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: true,\n        loading: false\n      });\n    case `${CLEAR_FORM_DATA}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        loaded: false,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["SUBMIT_FORM_ACTION","EXPORT_CSV_FORMDATA","GET_FORM_DATA","CLEAR_FORM_DATA","download","filename","text","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","initialState","error","loaded","loading","submitForm","state","action","type","exportCsvFormData","result","content","data","id","getFormData","clearFormData"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-form-block/src/reducers/index.js"],"sourcesContent":["/**\n * submitForm reducer.\n * @module reducers/submitForm\n */\nimport {\n  SUBMIT_FORM_ACTION,\n  EXPORT_CSV_FORMDATA,\n  GET_FORM_DATA,\n  CLEAR_FORM_DATA,\n} from 'volto-form-block/actions';\n\nfunction download(filename, text) {\n  var element = document.createElement('a');\n  element.setAttribute(\n    'href',\n    'data:text/comma-separated-values;charset=utf-8,' +\n      encodeURIComponent(text),\n  );\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nconst initialState = {\n  error: null,\n  loaded: false,\n  loading: false,\n};\n\n/**\n * submitForm reducer.\n * @function submitForm\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport const submitForm = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case `${SUBMIT_FORM_ACTION}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${SUBMIT_FORM_ACTION}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        loaded: true,\n        loading: false,\n      };\n    case `${SUBMIT_FORM_ACTION}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n\n/**\n * exportCsvFormData reducer.\n * @function exportCsvFormData\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport const exportCsvFormData = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case `${EXPORT_CSV_FORMDATA}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        result: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${EXPORT_CSV_FORMDATA}_SUCCESS`:\n      download(\n        `export-${state.content?.data?.id ?? 'form'}.csv`,\n        action.result,\n      );\n\n      return {\n        ...state,\n        error: null,\n        result: action.result,\n        loaded: true,\n        loading: false,\n      };\n    case `${EXPORT_CSV_FORMDATA}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        result: null,\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n\n/**\n * getFormData reducer.\n * @function getFormData\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport const getFormData = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case `${GET_FORM_DATA}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n        result: null,\n      };\n    case `${GET_FORM_DATA}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        loaded: true,\n        result: action.result,\n        loading: false,\n      };\n    case `${GET_FORM_DATA}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        result: null,\n        loaded: true,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n\n/**\n * clearFormData reducer.\n * @function clearFormData\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport const clearFormData = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case `${CLEAR_FORM_DATA}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${CLEAR_FORM_DATA}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        loaded: true,\n        loading: false,\n      };\n    case `${CLEAR_FORM_DATA}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}