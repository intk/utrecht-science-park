{"ast":null,"code":"import _extends from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@eeacms/volto-block-style/src/Widgets/Align.jsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\n/**\n * AlignWidget component.\n * To benefit from styling integration, use with a field named 'align'\n * @module components/manage/Widgets/AlignWidget\n */\n\nimport React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport { Icon } from '@plone/volto/components';\nimport { Button } from 'semantic-ui-react';\nimport imageLeftSVG from '@plone/volto/icons/image-left.svg';\nimport imageRightSVG from '@plone/volto/icons/image-right.svg';\nimport imageFitSVG from '@plone/volto/icons/image-fit.svg';\nimport imageNarrowSVG from '@eeacms/volto-block-style/icons/image-narrow.svg';\nimport imageWideSVG from '@plone/volto/icons/image-wide.svg';\nimport imageFullSVG from '@plone/volto/icons/image-full.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nexport const messages = defineMessages({\n  left: {\n    \"id\": \"Left\",\n    \"defaultMessage\": \"Left\"\n  },\n  right: {\n    \"id\": \"Right\",\n    \"defaultMessage\": \"Right\"\n  },\n  center: {\n    \"id\": \"Center\",\n    \"defaultMessage\": \"Center\"\n  },\n  narrow: {\n    \"id\": \"Narrow\",\n    \"defaultMessage\": \"Narrow\"\n  },\n  wide: {\n    \"id\": \"Wide\",\n    \"defaultMessage\": \"Wide\"\n  },\n  full: {\n    \"id\": \"Full\",\n    \"defaultMessage\": \"Full\"\n  },\n  '': {\n    \"id\": \"None\",\n    \"defaultMessage\": \"None\"\n  }\n});\nexport const defaultActionsInfo = {\n  left: [imageLeftSVG, messages.left],\n  right: [imageRightSVG, messages.right],\n  center: [imageFitSVG, messages.center],\n  narrow: [imageNarrowSVG, messages.narrow],\n  wide: [imageWideSVG, messages.wide],\n  full: [imageFullSVG, messages.full],\n  '': [clearSVG, messages['']]\n};\nconst AlignWidget = (props, rest) => {\n  _s();\n  const intl = useIntl();\n  const {\n    id,\n    onChange,\n    actions = rest.actions || ['left', 'right', 'center', 'full'],\n    actionsInfoMap = {},\n    defaultAction = '',\n    value\n  } = props;\n  React.useEffect(() => {\n    if (!props.value && props.default) {\n      props.onChange(props.id, props.default);\n    }\n  });\n\n  // add clear selection button to the actions mapping if it's not already present\n  if (actions[actions.length - 1] !== '') {\n    actions.push('');\n  }\n  const actionsInfo = _objectSpread(_objectSpread({}, defaultActionsInfo), actionsInfoMap);\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    className: \"align-widget\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: \"align-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, actions.map(action => {\n    const action_info_list = actionsInfo[action];\n    const title = action_info_list[1];\n    return __jsx(Button.Group, {\n      key: action,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      icon: true,\n      basic: true,\n      \"aria-label\": action,\n      onClick: () => onChange(id, action),\n      active: action === defaultAction && !value || value === action,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      name: action_info_list[0],\n      title: title ? typeof title === 'string' ? title : intl.formatMessage(title) : action,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    })));\n  })));\n};\n_s(AlignWidget, \"3KFdGxYrc/NRFY3PG8RJCzQPZuM=\", false, function () {\n  return [useIntl];\n});\n_c = AlignWidget;\nexport default AlignWidget;\nvar _c;\n$RefreshReg$(_c, \"AlignWidget\");","map":{"version":3,"names":["React","defineMessages","useIntl","FormFieldWrapper","Icon","Button","imageLeftSVG","imageRightSVG","imageFitSVG","imageNarrowSVG","imageWideSVG","imageFullSVG","clearSVG","messages","left","right","center","narrow","wide","full","defaultActionsInfo","AlignWidget","props","rest","intl","id","onChange","actions","actionsInfoMap","defaultAction","value","useEffect","default","length","push","actionsInfo","map","action","action_info_list","title","formatMessage"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@eeacms/volto-block-style/src/Widgets/Align.jsx"],"sourcesContent":["/**\n * AlignWidget component.\n * To benefit from styling integration, use with a field named 'align'\n * @module components/manage/Widgets/AlignWidget\n */\n\nimport React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport { Icon } from '@plone/volto/components';\nimport { Button } from 'semantic-ui-react';\nimport imageLeftSVG from '@plone/volto/icons/image-left.svg';\nimport imageRightSVG from '@plone/volto/icons/image-right.svg';\nimport imageFitSVG from '@plone/volto/icons/image-fit.svg';\nimport imageNarrowSVG from '@eeacms/volto-block-style/icons/image-narrow.svg';\nimport imageWideSVG from '@plone/volto/icons/image-wide.svg';\nimport imageFullSVG from '@plone/volto/icons/image-full.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nexport const messages = defineMessages({\n  left: {\n    id: 'Left',\n    defaultMessage: 'Left',\n  },\n  right: {\n    id: 'Right',\n    defaultMessage: 'Right',\n  },\n  center: {\n    id: 'Center',\n    defaultMessage: 'Center',\n  },\n  narrow: {\n    id: 'Narrow',\n    defaultMessage: 'Narrow',\n  },\n  wide: {\n    id: 'Wide',\n    defaultMessage: 'Wide',\n  },\n  full: {\n    id: 'Full',\n    defaultMessage: 'Full',\n  },\n  '': {\n    id: 'None',\n    defaultMessage: 'None',\n  },\n});\n\nexport const defaultActionsInfo = {\n  left: [imageLeftSVG, messages.left],\n  right: [imageRightSVG, messages.right],\n  center: [imageFitSVG, messages.center],\n  narrow: [imageNarrowSVG, messages.narrow],\n  wide: [imageWideSVG, messages.wide],\n  full: [imageFullSVG, messages.full],\n  '': [clearSVG, messages['']],\n};\n\nconst AlignWidget = (props, rest) => {\n  const intl = useIntl();\n\n  const {\n    id,\n    onChange,\n    actions = rest.actions || ['left', 'right', 'center', 'full'],\n    actionsInfoMap = {},\n    defaultAction = '',\n    value,\n  } = props;\n\n  React.useEffect(() => {\n    if (!props.value && props.default) {\n      props.onChange(props.id, props.default);\n    }\n  });\n\n  // add clear selection button to the actions mapping if it's not already present\n  if (actions[actions.length - 1] !== '') {\n    actions.push('');\n  }\n\n  const actionsInfo = {\n    ...defaultActionsInfo,\n    ...actionsInfoMap,\n  };\n\n  return (\n    <FormFieldWrapper {...props} className=\"align-widget\">\n      <div className=\"align-buttons\">\n        {actions.map((action) => {\n          const action_info_list = actionsInfo[action];\n          const title = action_info_list[1];\n          return (\n            <Button.Group key={action}>\n              <Button\n                icon\n                basic\n                aria-label={action}\n                onClick={() => onChange(id, action)}\n                active={\n                  (action === defaultAction && !value) || value === action\n                }\n              >\n                <Icon\n                  name={action_info_list[0]}\n                  title={\n                    title\n                      ? typeof title === 'string'\n                        ? title\n                        : intl.formatMessage(title)\n                      : action\n                  }\n                  size=\"24px\"\n                />\n              </Button>\n            </Button.Group>\n          );\n        })}\n      </div>\n    </FormFieldWrapper>\n  );\n};\n\nexport default AlignWidget;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Left","defaultMessage":"Left"},{"id":"Right","defaultMessage":"Right"},{"id":"Center","defaultMessage":"Center"},{"id":"Narrow","defaultMessage":"Narrow"},{"id":"Wide","defaultMessage":"Wide"},{"id":"Full","defaultMessage":"Full"},{"id":"None","defaultMessage":"None"}]}},"sourceType":"module","externalDependencies":[]}