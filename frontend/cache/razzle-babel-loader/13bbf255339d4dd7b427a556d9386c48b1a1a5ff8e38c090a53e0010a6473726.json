{"ast":null,"code":"var _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Contents/ContentsBreadcrumbs.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Breadcrumb } from 'semantic-ui-react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { langmap } from '@plone/volto/helpers';\nimport ContentsBreadcrumbsRootItem from '@plone/volto/components/manage/Contents/ContentsBreadcrumbsRootItem';\nimport ContentsBreadcrumbsHomeItem from '@plone/volto/components/manage/Contents/ContentsBreadcrumbsHomeItem';\nimport config from '@plone/volto/registry';\nconst messages = defineMessages({\n  home: {\n    \"id\": \"Home\",\n    \"defaultMessage\": \"Home\"\n  },\n  root: {\n    \"id\": \"Root\",\n    \"defaultMessage\": \"Root\"\n  }\n});\nconst ContentsBreadcrumbs = props => {\n  var _pathname$split, _langmap$lang$nativeN, _langmap$lang;\n  const {\n    settings\n  } = config;\n  const {\n    items\n  } = props;\n  const intl = useIntl();\n  const pathname = useLocation().pathname;\n  const lang = pathname.split('/')[1];\n  return __jsx(Breadcrumb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, settings.isMultilingual && __jsx(React.Fragment, null, __jsx(Link, {\n    to: \"/contents\",\n    className: \"section\",\n    title: intl.formatMessage(messages.root),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, __jsx(ContentsBreadcrumbsRootItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  })), __jsx(Breadcrumb.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), settings.isMultilingual && (pathname === null || pathname === void 0 ? void 0 : (_pathname$split = pathname.split('/')) === null || _pathname$split === void 0 ? void 0 : _pathname$split.length) > 2 && __jsx(Link, {\n    to: `/${lang}/contents`,\n    className: \"section\",\n    title: intl.formatMessage(messages.home),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, (_langmap$lang$nativeN = langmap === null || langmap === void 0 ? void 0 : (_langmap$lang = langmap[lang]) === null || _langmap$lang === void 0 ? void 0 : _langmap$lang.nativeName) !== null && _langmap$lang$nativeN !== void 0 ? _langmap$lang$nativeN : lang), !settings.isMultilingual && __jsx(Link, {\n    to: \"/contents\",\n    className: \"section\",\n    title: intl.formatMessage(messages.home),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(ContentsBreadcrumbsHomeItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), items.map((breadcrumb, index, breadcrumbs) => [__jsx(Breadcrumb.Divider, {\n    key: `divider-${breadcrumb.url}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), index < breadcrumbs.length - 1 ? __jsx(Link, {\n    key: breadcrumb.url,\n    to: `${breadcrumb.url}/contents`,\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, breadcrumb.nav_title || breadcrumb.title) : __jsx(Breadcrumb.Section, {\n    key: breadcrumb.url,\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, breadcrumb.nav_title || breadcrumb.title)]));\n};\nexport default ContentsBreadcrumbs;","map":{"version":3,"names":["React","Breadcrumb","Link","useLocation","defineMessages","useIntl","langmap","ContentsBreadcrumbsRootItem","ContentsBreadcrumbsHomeItem","config","messages","home","root","ContentsBreadcrumbs","props","settings","items","intl","pathname","lang","split","isMultilingual","formatMessage","length","nativeName","map","breadcrumb","index","breadcrumbs","url","nav_title","title"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Contents/ContentsBreadcrumbs.jsx"],"sourcesContent":["import React from 'react';\nimport { Breadcrumb } from 'semantic-ui-react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { langmap } from '@plone/volto/helpers';\nimport ContentsBreadcrumbsRootItem from '@plone/volto/components/manage/Contents/ContentsBreadcrumbsRootItem';\nimport ContentsBreadcrumbsHomeItem from '@plone/volto/components/manage/Contents/ContentsBreadcrumbsHomeItem';\n\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  home: {\n    id: 'Home',\n    defaultMessage: 'Home',\n  },\n  root: {\n    id: 'Root',\n    defaultMessage: 'Root',\n  },\n});\n\nconst ContentsBreadcrumbs = (props) => {\n  const { settings } = config;\n  const { items } = props;\n  const intl = useIntl();\n  const pathname = useLocation().pathname;\n  const lang = pathname.split('/')[1];\n\n  return (\n    <Breadcrumb>\n      {settings.isMultilingual && (\n        <>\n          <Link\n            to=\"/contents\"\n            className=\"section\"\n            title={intl.formatMessage(messages.root)}\n          >\n            <ContentsBreadcrumbsRootItem />\n          </Link>\n          <Breadcrumb.Divider />\n        </>\n      )}\n      {settings.isMultilingual && pathname?.split('/')?.length > 2 && (\n        <Link\n          to={`/${lang}/contents`}\n          className=\"section\"\n          title={intl.formatMessage(messages.home)}\n        >\n          {langmap?.[lang]?.nativeName ?? lang}\n        </Link>\n      )}\n      {!settings.isMultilingual && (\n        <Link\n          to=\"/contents\"\n          className=\"section\"\n          title={intl.formatMessage(messages.home)}\n        >\n          <ContentsBreadcrumbsHomeItem />\n        </Link>\n      )}\n      {items.map((breadcrumb, index, breadcrumbs) => [\n        <Breadcrumb.Divider key={`divider-${breadcrumb.url}`} />,\n        index < breadcrumbs.length - 1 ? (\n          <Link\n            key={breadcrumb.url}\n            to={`${breadcrumb.url}/contents`}\n            className=\"section\"\n          >\n            {breadcrumb.nav_title || breadcrumb.title}\n          </Link>\n        ) : (\n          <Breadcrumb.Section key={breadcrumb.url} active>\n            {breadcrumb.nav_title || breadcrumb.title}\n          </Breadcrumb.Section>\n        ),\n      ])}\n    </Breadcrumb>\n  );\n};\n\nexport default ContentsBreadcrumbs;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Home","defaultMessage":"Home"},{"id":"Root","defaultMessage":"Root"}]}},"sourceType":"module","externalDependencies":[]}