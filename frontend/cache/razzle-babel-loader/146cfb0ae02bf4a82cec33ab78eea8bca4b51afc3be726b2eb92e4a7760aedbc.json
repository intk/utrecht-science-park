{"ast":null,"code":"import config from '@plone/volto/registry';\nimport { defineMessages } from 'react-intl';\nconst messages = defineMessages({\n  // icon: {\n  //   id: 'icon',\n  //   defaultMessage: 'Icon',\n  // },\n  title: {\n    \"id\": \"title\",\n    \"defaultMessage\": \"Title\"\n  },\n  LinkTo: {\n    \"id\": \"LinkTo\",\n    \"defaultMessage\": \"Action link\"\n  },\n  Actions: {\n    \"id\": \"Actions\",\n    \"defaultMessage\": \"Actions\"\n  },\n  Action: {\n    \"id\": \"Action\",\n    \"defaultMessage\": \"Action\"\n  }\n});\nconst ActionSchema = ({\n  onChangeBlock,\n  intl,\n  data,\n  openObjectBrowser\n}) => ({\n  title: intl.formatMessage(messages.Action),\n  fieldsets: [{\n    id: 'default',\n    fields: ['title', 'href'],\n    //  'url'\n    title: 'Default'\n  }],\n  properties: {\n    title: {\n      title: intl.formatMessage(messages.title)\n    },\n    href: {\n      title: 'Link',\n      description: 'Internal page or path',\n      widget: 'url'\n    }\n  },\n  required: []\n});\nconst schema = ({\n  onChangeBlock,\n  intl,\n  data,\n  openObjectBrowser\n}) => ({\n  fieldsets: [{\n    id: 'default',\n    fields: ['globalId', 'actions'],\n    // 'title', 'linkTitle', 'linkHref', 'cards'\n    title: 'Default'\n  }],\n  properties: {\n    globalId: {\n      title: 'Global ID',\n      description: 'The global block is uniquely identifies this actions block and allows its use in the website.',\n      // TODO: filter the available ids based on existing blocks in data\n      choices: config.settings.actionBlockIds || []\n    },\n    actions: {\n      title: intl.formatMessage(messages.Actions),\n      widget: 'object_list',\n      schema: ActionSchema({\n        onChangeBlock,\n        intl,\n        data,\n        openObjectBrowser\n      })\n    }\n  },\n  required: []\n});\nexport default schema;","map":{"version":3,"names":["config","defineMessages","messages","title","LinkTo","Actions","Action","ActionSchema","onChangeBlock","intl","data","openObjectBrowser","formatMessage","fieldsets","id","fields","properties","href","description","widget","required","schema","globalId","choices","settings","actionBlockIds","actions"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/components/blocks/ActionLinks/schema.js"],"sourcesContent":["import config from '@plone/volto/registry';\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  // icon: {\n  //   id: 'icon',\n  //   defaultMessage: 'Icon',\n  // },\n  title: {\n    id: 'title',\n    defaultMessage: 'Title',\n  },\n  LinkTo: {\n    id: 'LinkTo',\n    defaultMessage: 'Action link',\n  },\n  Actions: {\n    id: 'Actions',\n    defaultMessage: 'Actions',\n  },\n  Action: {\n    id: 'Action',\n    defaultMessage: 'Action',\n  },\n});\n\nconst ActionSchema = ({ onChangeBlock, intl, data, openObjectBrowser }) => ({\n  title: intl.formatMessage(messages.Action),\n  fieldsets: [\n    {\n      id: 'default',\n      fields: ['title', 'href'], //  'url'\n      title: 'Default',\n    },\n  ],\n\n  properties: {\n    title: {\n      title: intl.formatMessage(messages.title),\n    },\n    href: {\n      title: 'Link',\n      description: 'Internal page or path',\n      widget: 'url',\n    },\n  },\n  required: [],\n});\n\nconst schema = ({ onChangeBlock, intl, data, openObjectBrowser }) => ({\n  fieldsets: [\n    {\n      id: 'default',\n      fields: ['globalId', 'actions'], // 'title', 'linkTitle', 'linkHref', 'cards'\n      title: 'Default',\n    },\n  ],\n\n  properties: {\n    globalId: {\n      title: 'Global ID',\n      description:\n        'The global block is uniquely identifies this actions block and allows its use in the website.',\n      // TODO: filter the available ids based on existing blocks in data\n      choices: config.settings.actionBlockIds || [],\n    },\n    actions: {\n      title: intl.formatMessage(messages.Actions),\n      widget: 'object_list',\n      schema: ActionSchema({ onChangeBlock, intl, data, openObjectBrowser }),\n    },\n  },\n  required: [],\n});\n\nexport default schema;\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,uBAAuB;AAC1C,SAASC,cAAc,QAAQ,YAAY;AAE3C,MAAMC,QAAQ,GAAGD,cAAc,CAAC;EAC9B;EACA;EACA;EACA;EACAE,KAAK;IAAA;IAAA;EAAA,CAGJ;EACDC,MAAM;IAAA;IAAA;EAAA,CAGL;EACDC,OAAO;IAAA;IAAA;EAAA,CAGN;EACDC,MAAM;IAAA;IAAA;EAAA;AAIR,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAG,CAAC;EAAEC,aAAa;EAAEC,IAAI;EAAEC,IAAI;EAAEC;AAAkB,CAAC,MAAM;EAC1ER,KAAK,EAAEM,IAAI,CAACG,aAAa,CAACV,QAAQ,CAACI,MAAM,CAAC;EAC1CO,SAAS,EAAE,CACT;IACEC,EAAE,EAAE,SAAS;IACbC,MAAM,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC;IAAE;IAC3BZ,KAAK,EAAE;EACT,CAAC,CACF;EAEDa,UAAU,EAAE;IACVb,KAAK,EAAE;MACLA,KAAK,EAAEM,IAAI,CAACG,aAAa,CAACV,QAAQ,CAACC,KAAK;IAC1C,CAAC;IACDc,IAAI,EAAE;MACJd,KAAK,EAAE,MAAM;MACbe,WAAW,EAAE,uBAAuB;MACpCC,MAAM,EAAE;IACV;EACF,CAAC;EACDC,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAG,CAAC;EAAEb,aAAa;EAAEC,IAAI;EAAEC,IAAI;EAAEC;AAAkB,CAAC,MAAM;EACpEE,SAAS,EAAE,CACT;IACEC,EAAE,EAAE,SAAS;IACbC,MAAM,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC;IAAE;IACjCZ,KAAK,EAAE;EACT,CAAC,CACF;EAEDa,UAAU,EAAE;IACVM,QAAQ,EAAE;MACRnB,KAAK,EAAE,WAAW;MAClBe,WAAW,EACT,+FAA+F;MACjG;MACAK,OAAO,EAAEvB,MAAM,CAACwB,QAAQ,CAACC,cAAc,IAAI;IAC7C,CAAC;IACDC,OAAO,EAAE;MACPvB,KAAK,EAAEM,IAAI,CAACG,aAAa,CAACV,QAAQ,CAACG,OAAO,CAAC;MAC3Cc,MAAM,EAAE,aAAa;MACrBE,MAAM,EAAEd,YAAY,CAAC;QAAEC,aAAa;QAAEC,IAAI;QAAEC,IAAI;QAAEC;MAAkB,CAAC;IACvE;EACF,CAAC;EACDS,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEF,eAAeC,MAAM"},"metadata":{"react-intl":{"messages":[{"id":"title","defaultMessage":"Title"},{"id":"LinkTo","defaultMessage":"Action link"},{"id":"Actions","defaultMessage":"Actions"},{"id":"Action","defaultMessage":"Action"}]}},"sourceType":"module","externalDependencies":[]}