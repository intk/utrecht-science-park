{"ast":null,"code":"import _extends from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-subblocks/src/DNDSubblocks.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nconst ItemTypes = {\n  ITEM: 'subblock'\n};\nconst itemSource = {\n  beginDrag(props) {\n    return {\n      id: props.id,\n      index: props.index\n    };\n  }\n};\nconst itemTarget = {\n  hover(props, monitor, component) {\n    const dragIndex = monitor.getItem().index;\n    const hoverIndex = props.index;\n\n    // Don't replace items with themselves\n    if (dragIndex === hoverIndex) {\n      return;\n    }\n\n    // Time to actually perform the action\n    props.onMoveSubblock(dragIndex, hoverIndex);\n\n    // Note: we're mutating the monitor item here!\n    // Generally it's better to avoid mutations,\n    // but it's good here for the sake of performance\n    // to avoid expensive index searches.\n    monitor.getItem().index = hoverIndex;\n  }\n};\nexport const injectDNDSubblocks = component => {\n  var _s = $RefreshSig$();\n  const _DNDSubblocksConnector = props => {\n    _s();\n    const {\n      DropTarget,\n      DragSource\n    } = props.reactDnd;\n    const DNDSubblocks = React.useMemo(() => DropTarget(ItemTypes.ITEM, itemTarget, (connect, monitor) => ({\n      connectDropTarget: connect.dropTarget(),\n      highlighted: monitor.canDrop(),\n      hovered: monitor.isOver()\n    }))(DragSource(ItemTypes.ITEM, itemSource, (connect, monitor) => ({\n      connectDragSource: connect.dragSource(),\n      connectDragPreview: connect.dragPreview(),\n      isDragging: monitor.isDragging()\n    }))(component)), [DragSource, DropTarget]);\n    return __jsx(DNDSubblocks, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 12\n      }\n    }));\n  };\n  _s(_DNDSubblocksConnector, \"CvivdWmdk2vcMvwDoQ1jR0SY+qg=\");\n  return injectLazyLibs('reactDnd')(_DNDSubblocksConnector);\n};","map":{"version":3,"names":["React","injectLazyLibs","ItemTypes","ITEM","itemSource","beginDrag","props","id","index","itemTarget","hover","monitor","component","dragIndex","getItem","hoverIndex","onMoveSubblock","injectDNDSubblocks","_DNDSubblocksConnector","DropTarget","DragSource","reactDnd","DNDSubblocks","useMemo","connect","connectDropTarget","dropTarget","highlighted","canDrop","hovered","isOver","connectDragSource","dragSource","connectDragPreview","dragPreview","isDragging"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-subblocks/src/DNDSubblocks.js"],"sourcesContent":["import React from 'react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nconst ItemTypes = {\n  ITEM: 'subblock',\n};\n\nconst itemSource = {\n  beginDrag(props) {\n    return {\n      id: props.id,\n      index: props.index,\n    };\n  },\n};\n\nconst itemTarget = {\n  hover(props, monitor, component) {\n    const dragIndex = monitor.getItem().index;\n    const hoverIndex = props.index;\n\n    // Don't replace items with themselves\n    if (dragIndex === hoverIndex) {\n      return;\n    }\n\n    // Time to actually perform the action\n    props.onMoveSubblock(dragIndex, hoverIndex);\n\n    // Note: we're mutating the monitor item here!\n    // Generally it's better to avoid mutations,\n    // but it's good here for the sake of performance\n    // to avoid expensive index searches.\n    monitor.getItem().index = hoverIndex;\n  },\n};\n\nexport const injectDNDSubblocks = (component) => {\n  const _DNDSubblocksConnector = (props) => {\n    const { DropTarget, DragSource } = props.reactDnd;\n\n    const DNDSubblocks = React.useMemo(\n      () =>\n        DropTarget(ItemTypes.ITEM, itemTarget, (connect, monitor) => ({\n          connectDropTarget: connect.dropTarget(),\n          highlighted: monitor.canDrop(),\n          hovered: monitor.isOver(),\n        }))(\n          DragSource(ItemTypes.ITEM, itemSource, (connect, monitor) => ({\n            connectDragSource: connect.dragSource(),\n            connectDragPreview: connect.dragPreview(),\n            isDragging: monitor.isDragging(),\n          }))(component),\n        ),\n      [DragSource, DropTarget],\n    );\n\n    return <DNDSubblocks {...props} />;\n  };\n  return injectLazyLibs('reactDnd')(_DNDSubblocksConnector);\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,wCAAwC;AAEvE,MAAMC,SAAS,GAAG;EAChBC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,UAAU,GAAG;EACjBC,SAAS,CAACC,KAAK,EAAE;IACf,OAAO;MACLC,EAAE,EAAED,KAAK,CAACC,EAAE;MACZC,KAAK,EAAEF,KAAK,CAACE;IACf,CAAC;EACH;AACF,CAAC;AAED,MAAMC,UAAU,GAAG;EACjBC,KAAK,CAACJ,KAAK,EAAEK,OAAO,EAAEC,SAAS,EAAE;IAC/B,MAAMC,SAAS,GAAGF,OAAO,CAACG,OAAO,EAAE,CAACN,KAAK;IACzC,MAAMO,UAAU,GAAGT,KAAK,CAACE,KAAK;;IAE9B;IACA,IAAIK,SAAS,KAAKE,UAAU,EAAE;MAC5B;IACF;;IAEA;IACAT,KAAK,CAACU,cAAc,CAACH,SAAS,EAAEE,UAAU,CAAC;;IAE3C;IACA;IACA;IACA;IACAJ,OAAO,CAACG,OAAO,EAAE,CAACN,KAAK,GAAGO,UAAU;EACtC;AACF,CAAC;AAED,OAAO,MAAME,kBAAkB,GAAIL,SAAS,IAAK;EAAA;EAC/C,MAAMM,sBAAsB,GAAIZ,KAAK,IAAK;IAAA;IACxC,MAAM;MAAEa,UAAU;MAAEC;IAAW,CAAC,GAAGd,KAAK,CAACe,QAAQ;IAEjD,MAAMC,YAAY,GAAGtB,KAAK,CAACuB,OAAO,CAChC,MACEJ,UAAU,CAACjB,SAAS,CAACC,IAAI,EAAEM,UAAU,EAAE,CAACe,OAAO,EAAEb,OAAO,MAAM;MAC5Dc,iBAAiB,EAAED,OAAO,CAACE,UAAU,EAAE;MACvCC,WAAW,EAAEhB,OAAO,CAACiB,OAAO,EAAE;MAC9BC,OAAO,EAAElB,OAAO,CAACmB,MAAM;IACzB,CAAC,CAAC,CAAC,CACDV,UAAU,CAAClB,SAAS,CAACC,IAAI,EAAEC,UAAU,EAAE,CAACoB,OAAO,EAAEb,OAAO,MAAM;MAC5DoB,iBAAiB,EAAEP,OAAO,CAACQ,UAAU,EAAE;MACvCC,kBAAkB,EAAET,OAAO,CAACU,WAAW,EAAE;MACzCC,UAAU,EAAExB,OAAO,CAACwB,UAAU;IAChC,CAAC,CAAC,CAAC,CAACvB,SAAS,CAAC,CACf,EACH,CAACQ,UAAU,EAAED,UAAU,CAAC,CACzB;IAED,OAAO,MAAC,YAAY,eAAKb,KAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAI;EACpC,CAAC;EAAC,GApBIY,sBAAsB;EAqB5B,OAAOjB,cAAc,CAAC,UAAU,CAAC,CAACiB,sBAAsB,CAAC;AAC3D,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}