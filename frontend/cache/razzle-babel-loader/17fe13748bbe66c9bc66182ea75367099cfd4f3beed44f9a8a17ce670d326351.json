{"ast":null,"code":"import _extends from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/theme/AppExtras/AppExtras.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { matchPath } from 'react-router';\nimport config from '@plone/volto/registry';\nconst AppExtras = props => {\n  const {\n    settings\n  } = config;\n  const {\n    appExtras = []\n  } = settings;\n  const {\n    pathname\n  } = props;\n  const active = appExtras.map(reg => {\n    const match = matchPath(pathname, reg.match);\n    return match ? {\n      reg,\n      match\n    } : null;\n  }).filter(reg => reg);\n  return active.map((_ref, i) => {\n    let {\n      reg: {\n        component,\n        props: extraProps\n      },\n      match\n    } = _ref;\n    const Insert = component;\n    return __jsx(Insert, _extends({\n      key: `appextra-${i}`,\n      match: match\n    }, props, extraProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }));\n  });\n};\n_c = AppExtras;\nexport default AppExtras;\nvar _c;\n$RefreshReg$(_c, \"AppExtras\");","map":{"version":3,"names":["React","matchPath","config","AppExtras","props","settings","appExtras","pathname","active","map","reg","match","filter","i","component","extraProps","Insert"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/theme/AppExtras/AppExtras.jsx"],"sourcesContent":["import React from 'react';\nimport { matchPath } from 'react-router';\nimport config from '@plone/volto/registry';\n\nconst AppExtras = (props) => {\n  const { settings } = config;\n  const { appExtras = [] } = settings;\n  const { pathname } = props;\n  const active = appExtras\n    .map((reg) => {\n      const match = matchPath(pathname, reg.match);\n      return match ? { reg, match } : null;\n    })\n    .filter((reg) => reg);\n\n  return active.map(({ reg: { component, props: extraProps }, match }, i) => {\n    const Insert = component;\n    return (\n      <Insert key={`appextra-${i}`} match={match} {...props} {...extraProps} />\n    );\n  });\n};\n\nexport default AppExtras;\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAC3B,MAAM;IAAEC;EAAS,CAAC,GAAGH,MAAM;EAC3B,MAAM;IAAEI,SAAS,GAAG;EAAG,CAAC,GAAGD,QAAQ;EACnC,MAAM;IAAEE;EAAS,CAAC,GAAGH,KAAK;EAC1B,MAAMI,MAAM,GAAGF,SAAS,CACrBG,GAAG,CAAEC,GAAG,IAAK;IACZ,MAAMC,KAAK,GAAGV,SAAS,CAACM,QAAQ,EAAEG,GAAG,CAACC,KAAK,CAAC;IAC5C,OAAOA,KAAK,GAAG;MAAED,GAAG;MAAEC;IAAM,CAAC,GAAG,IAAI;EACtC,CAAC,CAAC,CACDC,MAAM,CAAEF,GAAG,IAAKA,GAAG,CAAC;EAEvB,OAAOF,MAAM,CAACC,GAAG,CAAC,OAAmDI,CAAC,KAAK;IAAA,IAAxD;MAAEH,GAAG,EAAE;QAAEI,SAAS;QAAEV,KAAK,EAAEW;MAAW,CAAC;MAAEJ;IAAM,CAAC;IACjE,MAAMK,MAAM,GAAGF,SAAS;IACxB,OACE,MAAC,MAAM;MAAC,GAAG,EAAG,YAAWD,CAAE,EAAE;MAAC,KAAK,EAAEF;IAAM,GAAKP,KAAK,EAAMW,UAAU;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAI;EAE7E,CAAC,CAAC;AACJ,CAAC;AAAC,KAjBIZ,SAAS;AAmBf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}