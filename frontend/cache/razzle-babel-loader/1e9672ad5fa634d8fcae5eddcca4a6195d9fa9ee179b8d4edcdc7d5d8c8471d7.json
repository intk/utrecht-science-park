{"ast":null,"code":"var _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-form-block/src/components/Widget/Captcha.jsx\";\nvar __jsx = React.createElement;\nimport React, { createRef } from 'react';\nimport { GoogleReCaptchaWidget, HCaptchaWidget, NoRobotsCaptchaWidget, HoneypotCaptchaWidget } from 'volto-form-block/components/Widget';\nclass Captcha extends React.Component {\n  constructor(props) {\n    // TODO: https://reactjs.org/docs/legacy-context.html\n    super(props);\n    this.captchaRef = /*#__PURE__*/createRef();\n  }\n  reset() {\n    const {\n      captcha,\n      captchaToken\n    } = this.props;\n    const captchaRef = this.captchaRef;\n    if (captcha === 'recaptcha') {\n      // TODO?\n    } else if (captcha === 'hcaptcha' || captcha === 'hcaptcha_invisible') {\n      captchaRef.current && captchaRef.current.resetCaptcha();\n      captchaToken.current = null;\n    }\n  }\n  verify() {\n    const {\n      captcha,\n      captchaToken\n    } = this.props;\n    const captchaRef = this.captchaRef;\n    if (captcha === 'recaptcha') {\n      return captchaRef.current.verify();\n    } else if (captcha === 'hcaptcha') {\n      if (!captchaToken.current) return captchaRef.current.execute({\n        async: true\n      });\n    } else if (captcha === 'hcaptcha_invisible') {\n      if (!captchaToken.current) return captchaRef.current.execute({\n        async: true\n      });\n    }\n    return new Promise(resolve => {\n      resolve();\n    });\n  }\n  render() {\n    const {\n      captchaToken,\n      captcha,\n      captcha_props,\n      onChangeFormData\n    } = this.props;\n    const captchaRef = this.captchaRef;\n    if (captcha === 'recaptcha') {\n      return __jsx(GoogleReCaptchaWidget, {\n        captchaToken: captchaToken,\n        sitekey: captcha_props === null || captcha_props === void 0 ? void 0 : captcha_props.public_key,\n        captchaRef: captchaRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      });\n    } else if (captcha === 'hcaptcha') {\n      return __jsx(HCaptchaWidget, {\n        captchaToken: captchaToken,\n        sitekey: captcha_props === null || captcha_props === void 0 ? void 0 : captcha_props.public_key,\n        size: \"normal\",\n        captchaRef: captchaRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      });\n    } else if (captcha === 'hcaptcha_invisible') {\n      return __jsx(HCaptchaWidget, {\n        captchaToken: captchaToken,\n        sitekey: captcha_props === null || captcha_props === void 0 ? void 0 : captcha_props.public_key,\n        size: \"invisible\",\n        captchaRef: captchaRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      });\n    } else if (captcha === 'norobots-captcha') {\n      return __jsx(NoRobotsCaptchaWidget, {\n        id: captcha_props.id,\n        id_check: captcha_props.id_check,\n        title: captcha_props.title,\n        captchaRef: captchaRef,\n        captchaToken: captchaToken,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      });\n    } else if (captcha === 'honeypot') {\n      return __jsx(HoneypotCaptchaWidget, {\n        id: captcha_props.id,\n        title: captcha_props.id,\n        captchaRef: captchaRef,\n        captchaToken: captchaToken,\n        onChangeFormData: onChangeFormData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return null;\n    }\n  }\n}\nexport default Captcha;","map":{"version":3,"names":["React","createRef","GoogleReCaptchaWidget","HCaptchaWidget","NoRobotsCaptchaWidget","HoneypotCaptchaWidget","Captcha","Component","constructor","props","captchaRef","reset","captcha","captchaToken","current","resetCaptcha","verify","execute","async","Promise","resolve","render","captcha_props","onChangeFormData","public_key","id","id_check","title"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-form-block/src/components/Widget/Captcha.jsx"],"sourcesContent":["import React, { createRef } from 'react';\nimport {\n  GoogleReCaptchaWidget,\n  HCaptchaWidget,\n  NoRobotsCaptchaWidget,\n  HoneypotCaptchaWidget,\n} from 'volto-form-block/components/Widget';\n\nclass Captcha extends React.Component {\n  constructor(props) {\n    // TODO: https://reactjs.org/docs/legacy-context.html\n    super(props);\n    this.captchaRef = createRef();\n  }\n\n  reset() {\n    const { captcha, captchaToken } = this.props;\n    const captchaRef = this.captchaRef;\n    if (captcha === 'recaptcha') {\n      // TODO?\n    } else if (captcha === 'hcaptcha' || captcha === 'hcaptcha_invisible') {\n      captchaRef.current && captchaRef.current.resetCaptcha();\n      captchaToken.current = null;\n    }\n  }\n\n  verify() {\n    const { captcha, captchaToken } = this.props;\n    const captchaRef = this.captchaRef;\n    if (captcha === 'recaptcha') {\n      return captchaRef.current.verify();\n    } else if (captcha === 'hcaptcha') {\n      if (!captchaToken.current)\n        return captchaRef.current.execute({ async: true });\n    } else if (captcha === 'hcaptcha_invisible') {\n      if (!captchaToken.current)\n        return captchaRef.current.execute({ async: true });\n    }\n    return new Promise((resolve) => {\n      resolve();\n    });\n  }\n\n  render() {\n    const {\n      captchaToken,\n      captcha,\n      captcha_props,\n      onChangeFormData,\n    } = this.props;\n\n    const captchaRef = this.captchaRef;\n    if (captcha === 'recaptcha') {\n      return (\n        <GoogleReCaptchaWidget\n          captchaToken={captchaToken}\n          sitekey={captcha_props?.public_key}\n          captchaRef={captchaRef}\n        ></GoogleReCaptchaWidget>\n      );\n    } else if (captcha === 'hcaptcha') {\n      return (\n        <HCaptchaWidget\n          captchaToken={captchaToken}\n          sitekey={captcha_props?.public_key}\n          size=\"normal\"\n          captchaRef={captchaRef}\n        ></HCaptchaWidget>\n      );\n    } else if (captcha === 'hcaptcha_invisible') {\n      return (\n        <HCaptchaWidget\n          captchaToken={captchaToken}\n          sitekey={captcha_props?.public_key}\n          size=\"invisible\"\n          captchaRef={captchaRef}\n        ></HCaptchaWidget>\n      );\n    } else if (captcha === 'norobots-captcha') {\n      return (\n        <NoRobotsCaptchaWidget\n          id={captcha_props.id}\n          id_check={captcha_props.id_check}\n          title={captcha_props.title}\n          captchaRef={captchaRef}\n          captchaToken={captchaToken}\n        ></NoRobotsCaptchaWidget>\n      );\n    } else if (captcha === 'honeypot') {\n      return (\n        <HoneypotCaptchaWidget\n          id={captcha_props.id}\n          title={captcha_props.id}\n          captchaRef={captchaRef}\n          captchaToken={captchaToken}\n          onChangeFormData={onChangeFormData}\n        />\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Captcha;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}