{"ast":null,"code":"var _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-form-block/src/components/Widget/GoogleReCaptchaWidget.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback } from 'react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { useIntl } from 'react-intl';\nconst GoogleReCaptchaWidget = ({\n  captchaRef,\n  captchaToken,\n  sitekey,\n  GoogleReCaptcha: recaptchalib\n}) => {\n  var _intl$locale;\n  const {\n    GoogleReCaptchaProvider,\n    useGoogleReCaptcha\n  } = recaptchalib;\n  const intl = useIntl();\n  const ReCaptchaComponent = () => {\n    const {\n      executeRecaptcha\n    } = useGoogleReCaptcha();\n    const handleReCaptchaVerify = useCallback(async () => {\n      if (!executeRecaptcha) {\n        return;\n      }\n      const token = await executeRecaptcha();\n      captchaToken.current = token;\n    }, [executeRecaptcha]);\n    useEffect(() => {\n      captchaRef.current = {\n        verify: handleReCaptchaVerify\n      };\n      // handleReCaptchaVerify();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return null;\n  };\n  return __jsx(GoogleReCaptchaProvider, {\n    reCaptchaKey: sitekey,\n    language: (_intl$locale = intl.locale) !== null && _intl$locale !== void 0 ? _intl$locale : 'en',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(ReCaptchaComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};\nexport default injectLazyLibs(['GoogleReCaptcha'])(GoogleReCaptchaWidget);","map":{"version":3,"names":["React","useEffect","useCallback","injectLazyLibs","useIntl","GoogleReCaptchaWidget","captchaRef","captchaToken","sitekey","GoogleReCaptcha","recaptchalib","GoogleReCaptchaProvider","useGoogleReCaptcha","intl","ReCaptchaComponent","executeRecaptcha","handleReCaptchaVerify","token","current","verify","locale"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-form-block/src/components/Widget/GoogleReCaptchaWidget.jsx"],"sourcesContent":["import React, { useEffect, useCallback } from 'react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { useIntl } from 'react-intl';\n\nconst GoogleReCaptchaWidget = ({\n  captchaRef,\n  captchaToken,\n  sitekey,\n  GoogleReCaptcha: recaptchalib,\n}) => {\n  const { GoogleReCaptchaProvider, useGoogleReCaptcha } = recaptchalib;\n  const intl = useIntl();\n  const ReCaptchaComponent = () => {\n    const { executeRecaptcha } = useGoogleReCaptcha();\n    const handleReCaptchaVerify = useCallback(async () => {\n      if (!executeRecaptcha) {\n        return;\n      }\n      const token = await executeRecaptcha();\n      captchaToken.current = token;\n    }, [executeRecaptcha]);\n\n    useEffect(() => {\n      captchaRef.current = { verify: handleReCaptchaVerify };\n      // handleReCaptchaVerify();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return null;\n  };\n\n  return (\n    <GoogleReCaptchaProvider\n      reCaptchaKey={sitekey}\n      language={intl.locale ?? 'en'}\n    >\n      <ReCaptchaComponent />\n    </GoogleReCaptchaProvider>\n  );\n};\n\nexport default injectLazyLibs(['GoogleReCaptcha'])(GoogleReCaptchaWidget);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACrD,SAASC,cAAc,QAAQ,wCAAwC;AACvE,SAASC,OAAO,QAAQ,YAAY;AAEpC,MAAMC,qBAAqB,GAAG,CAAC;EAC7BC,UAAU;EACVC,YAAY;EACZC,OAAO;EACPC,eAAe,EAAEC;AACnB,CAAC,KAAK;EAAA;EACJ,MAAM;IAAEC,uBAAuB;IAAEC;EAAmB,CAAC,GAAGF,YAAY;EACpE,MAAMG,IAAI,GAAGT,OAAO,EAAE;EACtB,MAAMU,kBAAkB,GAAG,MAAM;IAC/B,MAAM;MAAEC;IAAiB,CAAC,GAAGH,kBAAkB,EAAE;IACjD,MAAMI,qBAAqB,GAAGd,WAAW,CAAC,YAAY;MACpD,IAAI,CAACa,gBAAgB,EAAE;QACrB;MACF;MACA,MAAME,KAAK,GAAG,MAAMF,gBAAgB,EAAE;MACtCR,YAAY,CAACW,OAAO,GAAGD,KAAK;IAC9B,CAAC,EAAE,CAACF,gBAAgB,CAAC,CAAC;IAEtBd,SAAS,CAAC,MAAM;MACdK,UAAU,CAACY,OAAO,GAAG;QAAEC,MAAM,EAAEH;MAAsB,CAAC;MACtD;MACA;IACF,CAAC,EAAE,EAAE,CAAC;IACN,OAAO,IAAI;EACb,CAAC;EAED,OACE,MAAC,uBAAuB;IACtB,YAAY,EAAER,OAAQ;IACtB,QAAQ,kBAAEK,IAAI,CAACO,MAAM,uDAAI,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAE9B,MAAC,kBAAkB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACE;AAE9B,CAAC;AAED,eAAejB,cAAc,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAACE,qBAAqB,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}