{"ast":null,"code":"var _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/components/blocks/Quote/QuoteBlockEdit.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport { SidebarPortal, BlockDataForm } from '@plone/volto/components';\nimport ColumnEdit from './ColumnEdit';\nimport QuoteBlockSchema from './schema';\nconst QuoteBlockEdit = props => {\n  const {\n    selected,\n    onChangeBlock,\n    block,\n    data\n  } = props;\n  const schema = QuoteBlockSchema();\n  return __jsx(\"div\", {\n    className: \"block-editor-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(ColumnEdit, _extends({}, props, {\n    title: \"Quote block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  })), __jsx(SidebarPortal, {\n    selected: selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(BlockDataForm, {\n    title: \"Quote\",\n    schema: schema,\n    onChangeField: (id, value) => {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        [id]: value\n      }));\n    },\n    formData: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  })));\n};\nexport default QuoteBlockEdit;","map":{"version":3,"names":["React","SidebarPortal","BlockDataForm","ColumnEdit","QuoteBlockSchema","QuoteBlockEdit","props","selected","onChangeBlock","block","data","schema","id","value"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/components/blocks/Quote/QuoteBlockEdit.jsx"],"sourcesContent":["import React from 'react';\nimport { SidebarPortal, BlockDataForm } from '@plone/volto/components';\nimport ColumnEdit from './ColumnEdit';\nimport QuoteBlockSchema from './schema';\n\nconst QuoteBlockEdit = (props) => {\n  const { selected, onChangeBlock, block, data } = props;\n  const schema = QuoteBlockSchema();\n\n  return (\n    <div className=\"block-editor-group\">\n      <ColumnEdit {...props} title=\"Quote block\" />\n\n      <SidebarPortal selected={selected}>\n        <BlockDataForm\n          title=\"Quote\"\n          schema={schema}\n          onChangeField={(id, value) => {\n            onChangeBlock(block, {\n              ...data,\n              [id]: value,\n            });\n          }}\n          formData={data}\n        />\n      </SidebarPortal>\n    </div>\n  );\n};\n\nexport default QuoteBlockEdit;\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,aAAa,QAAQ,yBAAyB;AACtE,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,gBAAgB,MAAM,UAAU;AAEvC,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAChC,MAAM;IAAEC,QAAQ;IAAEC,aAAa;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGJ,KAAK;EACtD,MAAMK,MAAM,GAAGP,gBAAgB,EAAE;EAEjC,OACE;IAAK,SAAS,EAAC,oBAAoB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjC,MAAC,UAAU,eAAKE,KAAK;IAAE,KAAK,EAAC,aAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAG,EAE7C,MAAC,aAAa;IAAC,QAAQ,EAAEC,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAChC,MAAC,aAAa;IACZ,KAAK,EAAC,OAAO;IACb,MAAM,EAAEI,MAAO;IACf,aAAa,EAAE,CAACC,EAAE,EAAEC,KAAK,KAAK;MAC5BL,aAAa,CAACC,KAAK,kCACdC,IAAI;QACP,CAACE,EAAE,GAAGC;MAAK,GACX;IACJ,CAAE;IACF,QAAQ,EAAEH,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACf,CACY,CACZ;AAEV,CAAC;AAED,eAAeL,cAAc"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}