{"ast":null,"code":"import { defineMessages } from 'react-intl';\nimport { addStyling } from '@plone/volto/helpers/Extensions/withBlockSchemaEnhancer';\nconst messages = defineMessages({\n  Target: {\n    \"id\": \"Target\",\n    \"defaultMessage\": \"Target\"\n  },\n  imageOverride: {\n    \"id\": \"Image override\",\n    \"defaultMessage\": \"Image override\"\n  },\n  openLinkInNewTab: {\n    \"id\": \"Open in a new tab\",\n    \"defaultMessage\": \"Open in a new tab\"\n  },\n  title: {\n    \"id\": \"Title\",\n    \"defaultMessage\": \"Title\"\n  },\n  description: {\n    \"id\": \"Description\",\n    \"defaultMessage\": \"Description\"\n  },\n  head_title: {\n    \"id\": \"head_title\",\n    \"defaultMessage\": \"Head title\"\n  },\n  teaser: {\n    \"id\": \"Teaser\",\n    \"defaultMessage\": \"Teaser\"\n  },\n  align: {\n    \"id\": \"Alignment\",\n    \"defaultMessage\": \"Alignment\"\n  }\n});\nexport const TeaserSchema = ({\n  intl\n}) => {\n  const schema = {\n    title: intl.formatMessage(messages.teaser),\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['href', 'title', 'head_title', 'description', 'preview_image']\n    }],\n    properties: {\n      href: {\n        title: intl.formatMessage(messages.Target),\n        widget: 'object_browser',\n        mode: 'link',\n        selectedItemAttrs: ['Title', 'head_title', 'Description', 'hasPreviewImage', 'image_field', 'image_scales', '@type'],\n        allowExternals: true\n      },\n      title: {\n        title: intl.formatMessage(messages.title)\n      },\n      head_title: {\n        title: intl.formatMessage(messages.head_title)\n      },\n      description: {\n        title: intl.formatMessage(messages.description),\n        widget: 'textarea'\n      },\n      preview_image: {\n        title: intl.formatMessage(messages.imageOverride),\n        widget: 'object_browser',\n        mode: 'image',\n        allowExternals: true,\n        selectedItemAttrs: ['image_field', 'image_scales']\n      },\n      openLinkInNewTab: {\n        title: intl.formatMessage(messages.openLinkInNewTab),\n        type: 'boolean'\n      }\n    },\n    required: []\n  };\n  addStyling({\n    schema,\n    intl\n  });\n  schema.properties.styles.schema.properties.align = {\n    widget: 'align',\n    title: intl.formatMessage(messages.align),\n    actions: ['left', 'right', 'center'],\n    default: 'left'\n  };\n  schema.properties.styles.schema.fieldsets[0].fields = ['align'];\n  return schema;\n};","map":{"version":3,"names":["defineMessages","addStyling","messages","Target","imageOverride","openLinkInNewTab","title","description","head_title","teaser","align","TeaserSchema","intl","schema","formatMessage","fieldsets","id","fields","properties","href","widget","mode","selectedItemAttrs","allowExternals","preview_image","type","required","styles","actions","default"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Blocks/Teaser/schema.js"],"sourcesContent":["import { defineMessages } from 'react-intl';\nimport { addStyling } from '@plone/volto/helpers/Extensions/withBlockSchemaEnhancer';\n\nconst messages = defineMessages({\n  Target: {\n    id: 'Target',\n    defaultMessage: 'Target',\n  },\n  imageOverride: {\n    id: 'Image override',\n    defaultMessage: 'Image override',\n  },\n  openLinkInNewTab: {\n    id: 'Open in a new tab',\n    defaultMessage: 'Open in a new tab',\n  },\n  title: {\n    id: 'Title',\n    defaultMessage: 'Title',\n  },\n  description: {\n    id: 'Description',\n    defaultMessage: 'Description',\n  },\n  head_title: {\n    id: 'head_title',\n    defaultMessage: 'Head title',\n  },\n  teaser: {\n    id: 'Teaser',\n    defaultMessage: 'Teaser',\n  },\n  align: {\n    id: 'Alignment',\n    defaultMessage: 'Alignment',\n  },\n});\n\nexport const TeaserSchema = ({ intl }) => {\n  const schema = {\n    title: intl.formatMessage(messages.teaser),\n    fieldsets: [\n      {\n        id: 'default',\n        title: 'Default',\n        fields: ['href', 'title', 'head_title', 'description', 'preview_image'],\n      },\n    ],\n\n    properties: {\n      href: {\n        title: intl.formatMessage(messages.Target),\n        widget: 'object_browser',\n        mode: 'link',\n        selectedItemAttrs: [\n          'Title',\n          'head_title',\n          'Description',\n          'hasPreviewImage',\n          'image_field',\n          'image_scales',\n          '@type',\n        ],\n        allowExternals: true,\n      },\n      title: {\n        title: intl.formatMessage(messages.title),\n      },\n      head_title: {\n        title: intl.formatMessage(messages.head_title),\n      },\n      description: {\n        title: intl.formatMessage(messages.description),\n        widget: 'textarea',\n      },\n      preview_image: {\n        title: intl.formatMessage(messages.imageOverride),\n        widget: 'object_browser',\n        mode: 'image',\n        allowExternals: true,\n        selectedItemAttrs: ['image_field', 'image_scales'],\n      },\n      openLinkInNewTab: {\n        title: intl.formatMessage(messages.openLinkInNewTab),\n        type: 'boolean',\n      },\n    },\n    required: [],\n  };\n\n  addStyling({ schema, intl });\n\n  schema.properties.styles.schema.properties.align = {\n    widget: 'align',\n    title: intl.formatMessage(messages.align),\n    actions: ['left', 'right', 'center'],\n    default: 'left',\n  };\n\n  schema.properties.styles.schema.fieldsets[0].fields = ['align'];\n\n  return schema;\n};\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,YAAY;AAC3C,SAASC,UAAU,QAAQ,yDAAyD;AAEpF,MAAMC,QAAQ,GAAGF,cAAc,CAAC;EAC9BG,MAAM;IAAA;IAAA;EAAA,CAGL;EACDC,aAAa;IAAA;IAAA;EAAA,CAGZ;EACDC,gBAAgB;IAAA;IAAA;EAAA,CAGf;EACDC,KAAK;IAAA;IAAA;EAAA,CAGJ;EACDC,WAAW;IAAA;IAAA;EAAA,CAGV;EACDC,UAAU;IAAA;IAAA;EAAA,CAGT;EACDC,MAAM;IAAA;IAAA;EAAA,CAGL;EACDC,KAAK;IAAA;IAAA;EAAA;AAIP,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAG,CAAC;EAAEC;AAAK,CAAC,KAAK;EACxC,MAAMC,MAAM,GAAG;IACbP,KAAK,EAAEM,IAAI,CAACE,aAAa,CAACZ,QAAQ,CAACO,MAAM,CAAC;IAC1CM,SAAS,EAAE,CACT;MACEC,EAAE,EAAE,SAAS;MACbV,KAAK,EAAE,SAAS;MAChBW,MAAM,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,aAAa,EAAE,eAAe;IACxE,CAAC,CACF;IAEDC,UAAU,EAAE;MACVC,IAAI,EAAE;QACJb,KAAK,EAAEM,IAAI,CAACE,aAAa,CAACZ,QAAQ,CAACC,MAAM,CAAC;QAC1CiB,MAAM,EAAE,gBAAgB;QACxBC,IAAI,EAAE,MAAM;QACZC,iBAAiB,EAAE,CACjB,OAAO,EACP,YAAY,EACZ,aAAa,EACb,iBAAiB,EACjB,aAAa,EACb,cAAc,EACd,OAAO,CACR;QACDC,cAAc,EAAE;MAClB,CAAC;MACDjB,KAAK,EAAE;QACLA,KAAK,EAAEM,IAAI,CAACE,aAAa,CAACZ,QAAQ,CAACI,KAAK;MAC1C,CAAC;MACDE,UAAU,EAAE;QACVF,KAAK,EAAEM,IAAI,CAACE,aAAa,CAACZ,QAAQ,CAACM,UAAU;MAC/C,CAAC;MACDD,WAAW,EAAE;QACXD,KAAK,EAAEM,IAAI,CAACE,aAAa,CAACZ,QAAQ,CAACK,WAAW,CAAC;QAC/Ca,MAAM,EAAE;MACV,CAAC;MACDI,aAAa,EAAE;QACblB,KAAK,EAAEM,IAAI,CAACE,aAAa,CAACZ,QAAQ,CAACE,aAAa,CAAC;QACjDgB,MAAM,EAAE,gBAAgB;QACxBC,IAAI,EAAE,OAAO;QACbE,cAAc,EAAE,IAAI;QACpBD,iBAAiB,EAAE,CAAC,aAAa,EAAE,cAAc;MACnD,CAAC;MACDjB,gBAAgB,EAAE;QAChBC,KAAK,EAAEM,IAAI,CAACE,aAAa,CAACZ,QAAQ,CAACG,gBAAgB,CAAC;QACpDoB,IAAI,EAAE;MACR;IACF,CAAC;IACDC,QAAQ,EAAE;EACZ,CAAC;EAEDzB,UAAU,CAAC;IAAEY,MAAM;IAAED;EAAK,CAAC,CAAC;EAE5BC,MAAM,CAACK,UAAU,CAACS,MAAM,CAACd,MAAM,CAACK,UAAU,CAACR,KAAK,GAAG;IACjDU,MAAM,EAAE,OAAO;IACfd,KAAK,EAAEM,IAAI,CAACE,aAAa,CAACZ,QAAQ,CAACQ,KAAK,CAAC;IACzCkB,OAAO,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC;IACpCC,OAAO,EAAE;EACX,CAAC;EAEDhB,MAAM,CAACK,UAAU,CAACS,MAAM,CAACd,MAAM,CAACE,SAAS,CAAC,CAAC,CAAC,CAACE,MAAM,GAAG,CAAC,OAAO,CAAC;EAE/D,OAAOJ,MAAM;AACf,CAAC"},"metadata":{"react-intl":{"messages":[{"id":"Target","defaultMessage":"Target"},{"id":"Image override","defaultMessage":"Image override"},{"id":"Open in a new tab","defaultMessage":"Open in a new tab"},{"id":"Title","defaultMessage":"Title"},{"id":"Description","defaultMessage":"Description"},{"id":"head_title","defaultMessage":"Head title"},{"id":"Teaser","defaultMessage":"Teaser"},{"id":"Alignment","defaultMessage":"Alignment"}]}},"sourceType":"module","externalDependencies":[]}