{"ast":null,"code":"var _s = $RefreshSig$();\nimport { defineMessages } from 'react-intl';\nimport { useIntl } from 'react-intl';\nconst messages = defineMessages({\n  form: {\n    \"id\": \"form\",\n    \"defaultMessage\": \"Form\"\n  },\n  title: {\n    \"id\": \"title\",\n    \"defaultMessage\": \"Title\"\n  },\n  description: {\n    \"id\": \"description\",\n    \"defaultMessage\": \"Description\"\n  },\n  default_to: {\n    \"id\": \"form_to\",\n    \"defaultMessage\": \"Recipients\"\n  },\n  default_from: {\n    \"id\": \"form_default_from\",\n    \"defaultMessage\": \"Default sender\"\n  },\n  default_subject: {\n    \"id\": \"form_default_subject\",\n    \"defaultMessage\": \"Mail subject\"\n  },\n  submit_label: {\n    \"id\": \"form_submit_label\",\n    \"defaultMessage\": \"Submit button label\"\n  },\n  captcha: {\n    \"id\": \"captcha\",\n    \"defaultMessage\": \"Captcha provider\"\n  },\n  store: {\n    \"id\": \"form_save_persistent_data\",\n    \"defaultMessage\": \"Store compiled data\"\n  },\n  attachmentSendEmail: {\n    \"id\": \"form_attachment_send_email_info_text\",\n    \"defaultMessage\": \"Attached file will be sent via email, but not stored\"\n  },\n  send: {\n    \"id\": \"form_send_email\",\n    \"defaultMessage\": \"Send email to recipient\"\n  }\n});\nexport default _s(() => {\n  _s();\n  var intl = useIntl();\n  return {\n    title: intl.formatMessage(messages.form),\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['title', 'description', 'default_to', 'default_from', 'default_subject', 'submit_label', 'captcha', 'store', 'send']\n    }],\n    properties: {\n      title: {\n        title: intl.formatMessage(messages.title)\n      },\n      description: {\n        title: intl.formatMessage(messages.description),\n        type: 'textarea'\n      },\n      default_to: {\n        title: intl.formatMessage(messages.default_to)\n      },\n      default_from: {\n        title: intl.formatMessage(messages.default_from)\n      },\n      default_subject: {\n        title: intl.formatMessage(messages.default_subject)\n      },\n      submit_label: {\n        title: intl.formatMessage(messages.submit_label)\n      },\n      captcha: {\n        title: intl.formatMessage(messages.captcha),\n        type: 'array',\n        vocabulary: {\n          '@id': 'collective.volto.formsupport.captcha.providers'\n        }\n      },\n      store: {\n        type: 'boolean',\n        title: intl.formatMessage(messages.store),\n        description: intl.formatMessage(messages.attachmentSendEmail)\n      },\n      send: {\n        type: 'boolean',\n        title: intl.formatMessage(messages.send)\n      }\n    },\n    required: ['default_to', 'default_from', 'default_subject']\n  };\n}, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});","map":{"version":3,"names":["defineMessages","useIntl","messages","form","title","description","default_to","default_from","default_subject","submit_label","captcha","store","attachmentSendEmail","send","intl","formatMessage","fieldsets","id","fields","properties","type","vocabulary","required"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-form-block/src/formSchema.js"],"sourcesContent":["import { defineMessages } from 'react-intl';\nimport { useIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  form: {\n    id: 'form',\n    defaultMessage: 'Form',\n  },\n  title: {\n    id: 'title',\n    defaultMessage: 'Title',\n  },\n  description: {\n    id: 'description',\n    defaultMessage: 'Description',\n  },\n  default_to: {\n    id: 'form_to',\n    defaultMessage: 'Recipients',\n  },\n  default_from: {\n    id: 'form_default_from',\n    defaultMessage: 'Default sender',\n  },\n  default_subject: {\n    id: 'form_default_subject',\n    defaultMessage: 'Mail subject',\n  },\n  submit_label: {\n    id: 'form_submit_label',\n    defaultMessage: 'Submit button label',\n  },\n  captcha: {\n    id: 'captcha',\n    defaultMessage: 'Captcha provider',\n  },\n\n  store: {\n    id: 'form_save_persistent_data',\n    defaultMessage: 'Store compiled data',\n  },\n  attachmentSendEmail: {\n    id: 'form_attachment_send_email_info_text',\n    defaultMessage: 'Attached file will be sent via email, but not stored',\n  },\n  send: {\n    id: 'form_send_email',\n    defaultMessage: 'Send email to recipient',\n  },\n});\n\nexport default () => {\n  var intl = useIntl();\n\n  return {\n    title: intl.formatMessage(messages.form),\n    fieldsets: [\n      {\n        id: 'default',\n        title: 'Default',\n        fields: [\n          'title',\n          'description',\n          'default_to',\n          'default_from',\n          'default_subject',\n          'submit_label',\n          'captcha',\n          'store',\n          'send',\n        ],\n      },\n    ],\n    properties: {\n      title: {\n        title: intl.formatMessage(messages.title),\n      },\n      description: {\n        title: intl.formatMessage(messages.description),\n        type: 'textarea',\n      },\n      default_to: {\n        title: intl.formatMessage(messages.default_to),\n      },\n      default_from: {\n        title: intl.formatMessage(messages.default_from),\n      },\n      default_subject: {\n        title: intl.formatMessage(messages.default_subject),\n      },\n      submit_label: {\n        title: intl.formatMessage(messages.submit_label),\n      },\n      captcha: {\n        title: intl.formatMessage(messages.captcha),\n        type: 'array',\n        vocabulary: {\n          '@id': 'collective.volto.formsupport.captcha.providers',\n        },\n      },\n      store: {\n        type: 'boolean',\n        title: intl.formatMessage(messages.store),\n        description: intl.formatMessage(messages.attachmentSendEmail),\n      },\n      send: {\n        type: 'boolean',\n        title: intl.formatMessage(messages.send),\n      },\n    },\n    required: ['default_to', 'default_from', 'default_subject'],\n  };\n};\n"],"mappings":";AAAA,SAASA,cAAc,QAAQ,YAAY;AAC3C,SAASC,OAAO,QAAQ,YAAY;AAEpC,MAAMC,QAAQ,GAAGF,cAAc,CAAC;EAC9BG,IAAI;IAAA;IAAA;EAAA,CAGH;EACDC,KAAK;IAAA;IAAA;EAAA,CAGJ;EACDC,WAAW;IAAA;IAAA;EAAA,CAGV;EACDC,UAAU;IAAA;IAAA;EAAA,CAGT;EACDC,YAAY;IAAA;IAAA;EAAA,CAGX;EACDC,eAAe;IAAA;IAAA;EAAA,CAGd;EACDC,YAAY;IAAA;IAAA;EAAA,CAGX;EACDC,OAAO;IAAA;IAAA;EAAA,CAGN;EAEDC,KAAK;IAAA;IAAA;EAAA,CAGJ;EACDC,mBAAmB;IAAA;IAAA;EAAA,CAGlB;EACDC,IAAI;IAAA;IAAA;EAAA;AAIN,CAAC,CAAC;AAEF,kBAAe,MAAM;EAAA;EACnB,IAAIC,IAAI,GAAGb,OAAO,EAAE;EAEpB,OAAO;IACLG,KAAK,EAAEU,IAAI,CAACC,aAAa,CAACb,QAAQ,CAACC,IAAI,CAAC;IACxCa,SAAS,EAAE,CACT;MACEC,EAAE,EAAE,SAAS;MACbb,KAAK,EAAE,SAAS;MAChBc,MAAM,EAAE,CACN,OAAO,EACP,aAAa,EACb,YAAY,EACZ,cAAc,EACd,iBAAiB,EACjB,cAAc,EACd,SAAS,EACT,OAAO,EACP,MAAM;IAEV,CAAC,CACF;IACDC,UAAU,EAAE;MACVf,KAAK,EAAE;QACLA,KAAK,EAAEU,IAAI,CAACC,aAAa,CAACb,QAAQ,CAACE,KAAK;MAC1C,CAAC;MACDC,WAAW,EAAE;QACXD,KAAK,EAAEU,IAAI,CAACC,aAAa,CAACb,QAAQ,CAACG,WAAW,CAAC;QAC/Ce,IAAI,EAAE;MACR,CAAC;MACDd,UAAU,EAAE;QACVF,KAAK,EAAEU,IAAI,CAACC,aAAa,CAACb,QAAQ,CAACI,UAAU;MAC/C,CAAC;MACDC,YAAY,EAAE;QACZH,KAAK,EAAEU,IAAI,CAACC,aAAa,CAACb,QAAQ,CAACK,YAAY;MACjD,CAAC;MACDC,eAAe,EAAE;QACfJ,KAAK,EAAEU,IAAI,CAACC,aAAa,CAACb,QAAQ,CAACM,eAAe;MACpD,CAAC;MACDC,YAAY,EAAE;QACZL,KAAK,EAAEU,IAAI,CAACC,aAAa,CAACb,QAAQ,CAACO,YAAY;MACjD,CAAC;MACDC,OAAO,EAAE;QACPN,KAAK,EAAEU,IAAI,CAACC,aAAa,CAACb,QAAQ,CAACQ,OAAO,CAAC;QAC3CU,IAAI,EAAE,OAAO;QACbC,UAAU,EAAE;UACV,KAAK,EAAE;QACT;MACF,CAAC;MACDV,KAAK,EAAE;QACLS,IAAI,EAAE,SAAS;QACfhB,KAAK,EAAEU,IAAI,CAACC,aAAa,CAACb,QAAQ,CAACS,KAAK,CAAC;QACzCN,WAAW,EAAES,IAAI,CAACC,aAAa,CAACb,QAAQ,CAACU,mBAAmB;MAC9D,CAAC;MACDC,IAAI,EAAE;QACJO,IAAI,EAAE,SAAS;QACfhB,KAAK,EAAEU,IAAI,CAACC,aAAa,CAACb,QAAQ,CAACW,IAAI;MACzC;IACF,CAAC;IACDS,QAAQ,EAAE,CAAC,YAAY,EAAE,cAAc,EAAE,iBAAiB;EAC5D,CAAC;AACH,CAAC;EAAA,QA5DYrB,OAAO;AAAA"},"metadata":{"react-intl":{"messages":[{"id":"form","defaultMessage":"Form"},{"id":"title","defaultMessage":"Title"},{"id":"description","defaultMessage":"Description"},{"id":"form_to","defaultMessage":"Recipients"},{"id":"form_default_from","defaultMessage":"Default sender"},{"id":"form_default_subject","defaultMessage":"Mail subject"},{"id":"form_submit_label","defaultMessage":"Submit button label"},{"id":"captcha","defaultMessage":"Captcha provider"},{"id":"form_save_persistent_data","defaultMessage":"Store compiled data"},{"id":"form_attachment_send_email_info_text","defaultMessage":"Attached file will be sent via email, but not stored"},{"id":"form_send_email","defaultMessage":"Send email to recipient"}]}},"sourceType":"module","externalDependencies":[]}