{"ast":null,"code":"import _extends from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/BlockChooser/BlockChooserButton.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\nimport addSVG from '@plone/volto/icons/circle-plus.svg';\nimport { blockHasValue } from '@plone/volto/helpers';\nimport { Icon, BlockChooser } from '@plone/volto/components';\nimport config from '@plone/volto/registry';\nimport { Button } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nconst messages = defineMessages({\n  addBlock: {\n    \"id\": \"Add block\",\n    \"defaultMessage\": \"Add block\"\n  }\n});\nexport const ButtonComponent = props => {\n  _s();\n  const intl = useIntl();\n  const {\n    className = `block-add-button${config.experimental.addBlockButton.enabled ? ' new-add-block' : ''}`,\n    size = '19px',\n    onShowBlockChooser\n  } = props;\n  return __jsx(Button, {\n    icon: true,\n    basic: true,\n    title: intl.formatMessage(messages.addBlock),\n    onClick: e => {\n      e.preventDefault();\n      e.stopPropagation();\n      onShowBlockChooser();\n    },\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(Icon, {\n    name: addSVG,\n    className: className,\n    size: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n};\n_s(ButtonComponent, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n_c = ButtonComponent;\nconst BlockChooserButton = props => {\n  _s2();\n  const {\n    block,\n    allowedBlocks,\n    showRestricted,\n    data,\n    onMutateBlock,\n    onInsertBlock,\n    blocksConfig,\n    buttonComponent,\n    properties\n  } = props;\n  const {\n    disableNewBlocks\n  } = data;\n  const [addNewBlockOpened, setAddNewBlockOpened] = React.useState(false);\n  const blockChooserRef = React.useRef();\n  const handleClickOutside = React.useCallback(e => {\n    if (blockChooserRef.current && doesNodeContainClick(blockChooserRef.current, e)) return;\n    setAddNewBlockOpened(false);\n  }, []);\n  const Component = buttonComponent || ButtonComponent;\n  React.useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside, false);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside, false);\n    };\n  }, [handleClickOutside]);\n  return __jsx(React.Fragment, null, !disableNewBlocks && (config.experimental.addBlockButton.enabled || !blockHasValue(data)) && __jsx(Component, _extends({}, props, {\n    onShowBlockChooser: () => setAddNewBlockOpened(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  })), addNewBlockOpened && __jsx(BlockChooser, {\n    onMutateBlock: onMutateBlock ? (id, value) => {\n      setAddNewBlockOpened(false);\n      onMutateBlock(id, value);\n    } : null,\n    onInsertBlock: onInsertBlock ? (id, value) => {\n      setAddNewBlockOpened(false);\n      onInsertBlock(id, value);\n    } : null,\n    currentBlock: block,\n    allowedBlocks: allowedBlocks,\n    blocksConfig: blocksConfig,\n    properties: properties,\n    showRestricted: showRestricted,\n    ref: blockChooserRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }));\n};\n_s2(BlockChooserButton, \"Wuzj51Gbho1YPdojAdfGpniTZ1w=\");\n_c2 = BlockChooserButton;\nexport default BlockChooserButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"ButtonComponent\");\n$RefreshReg$(_c2, \"BlockChooserButton\");","map":{"version":3,"names":["React","doesNodeContainClick","addSVG","blockHasValue","Icon","BlockChooser","config","Button","defineMessages","useIntl","messages","addBlock","ButtonComponent","props","intl","className","experimental","addBlockButton","enabled","size","onShowBlockChooser","formatMessage","e","preventDefault","stopPropagation","BlockChooserButton","block","allowedBlocks","showRestricted","data","onMutateBlock","onInsertBlock","blocksConfig","buttonComponent","properties","disableNewBlocks","addNewBlockOpened","setAddNewBlockOpened","useState","blockChooserRef","useRef","handleClickOutside","useCallback","current","Component","useEffect","document","addEventListener","removeEventListener","id","value"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/BlockChooser/BlockChooserButton.jsx"],"sourcesContent":["import React from 'react';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\nimport addSVG from '@plone/volto/icons/circle-plus.svg';\nimport { blockHasValue } from '@plone/volto/helpers';\nimport { Icon, BlockChooser } from '@plone/volto/components';\nimport config from '@plone/volto/registry';\nimport { Button } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  addBlock: {\n    id: 'Add block',\n    defaultMessage: 'Add block',\n  },\n});\n\nexport const ButtonComponent = (props) => {\n  const intl = useIntl();\n  const {\n    className = `block-add-button${\n      config.experimental.addBlockButton.enabled ? ' new-add-block' : ''\n    }`,\n    size = '19px',\n    onShowBlockChooser,\n  } = props;\n\n  return (\n    <Button\n      icon\n      basic\n      title={intl.formatMessage(messages.addBlock)}\n      onClick={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        onShowBlockChooser();\n      }}\n      className={className}\n    >\n      <Icon name={addSVG} className={className} size={size} />\n    </Button>\n  );\n};\n\nconst BlockChooserButton = (props) => {\n  const {\n    block,\n    allowedBlocks,\n    showRestricted,\n    data,\n    onMutateBlock,\n    onInsertBlock,\n    blocksConfig,\n    buttonComponent,\n    properties,\n  } = props;\n  const { disableNewBlocks } = data;\n  const [addNewBlockOpened, setAddNewBlockOpened] = React.useState(false);\n\n  const blockChooserRef = React.useRef();\n\n  const handleClickOutside = React.useCallback((e) => {\n    if (\n      blockChooserRef.current &&\n      doesNodeContainClick(blockChooserRef.current, e)\n    )\n      return;\n    setAddNewBlockOpened(false);\n  }, []);\n\n  const Component = buttonComponent || ButtonComponent;\n\n  React.useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside, false);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside, false);\n    };\n  }, [handleClickOutside]);\n\n  return (\n    <>\n      {!disableNewBlocks &&\n        (config.experimental.addBlockButton.enabled ||\n          !blockHasValue(data)) && (\n          <Component\n            {...props}\n            onShowBlockChooser={() => setAddNewBlockOpened(true)}\n          />\n        )}\n      {addNewBlockOpened && (\n        <BlockChooser\n          onMutateBlock={\n            onMutateBlock\n              ? (id, value) => {\n                  setAddNewBlockOpened(false);\n                  onMutateBlock(id, value);\n                }\n              : null\n          }\n          onInsertBlock={\n            onInsertBlock\n              ? (id, value) => {\n                  setAddNewBlockOpened(false);\n                  onInsertBlock(id, value);\n                }\n              : null\n          }\n          currentBlock={block}\n          allowedBlocks={allowedBlocks}\n          blocksConfig={blocksConfig}\n          properties={properties}\n          showRestricted={showRestricted}\n          ref={blockChooserRef}\n        />\n      )}\n    </>\n  );\n};\n\nexport default BlockChooserButton;\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,QAAQ,qCAAqC;AAC1E,OAAOC,MAAM,MAAM,oCAAoC;AACvD,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,IAAI,EAAEC,YAAY,QAAQ,yBAAyB;AAC5D,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,cAAc,EAAEC,OAAO,QAAQ,YAAY;AAEpD,MAAMC,QAAQ,GAAGF,cAAc,CAAC;EAC9BG,QAAQ;IAAA;IAAA;EAAA;AAIV,CAAC,CAAC;AAEF,OAAO,MAAMC,eAAe,GAAIC,KAAK,IAAK;EAAA;EACxC,MAAMC,IAAI,GAAGL,OAAO,EAAE;EACtB,MAAM;IACJM,SAAS,GAAI,mBACXT,MAAM,CAACU,YAAY,CAACC,cAAc,CAACC,OAAO,GAAG,gBAAgB,GAAG,EACjE,EAAC;IACFC,IAAI,GAAG,MAAM;IACbC;EACF,CAAC,GAAGP,KAAK;EAET,OACE,MAAC,MAAM;IACL,IAAI;IACJ,KAAK;IACL,KAAK,EAAEC,IAAI,CAACO,aAAa,CAACX,QAAQ,CAACC,QAAQ,CAAE;IAC7C,OAAO,EAAGW,CAAC,IAAK;MACdA,CAAC,CAACC,cAAc,EAAE;MAClBD,CAAC,CAACE,eAAe,EAAE;MACnBJ,kBAAkB,EAAE;IACtB,CAAE;IACF,SAAS,EAAEL,SAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAErB,MAAC,IAAI;IAAC,IAAI,EAAEb,MAAO;IAAC,SAAS,EAAEa,SAAU;IAAC,IAAI,EAAEI,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACjD;AAEb,CAAC;AAAC,GAzBWP,eAAe;EAAA,QACbH,OAAO;AAAA;AAAA,KADTG,eAAe;AA2B5B,MAAMa,kBAAkB,GAAIZ,KAAK,IAAK;EAAA;EACpC,MAAM;IACJa,KAAK;IACLC,aAAa;IACbC,cAAc;IACdC,IAAI;IACJC,aAAa;IACbC,aAAa;IACbC,YAAY;IACZC,eAAe;IACfC;EACF,CAAC,GAAGrB,KAAK;EACT,MAAM;IAAEsB;EAAiB,CAAC,GAAGN,IAAI;EACjC,MAAM,CAACO,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrC,KAAK,CAACsC,QAAQ,CAAC,KAAK,CAAC;EAEvE,MAAMC,eAAe,GAAGvC,KAAK,CAACwC,MAAM,EAAE;EAEtC,MAAMC,kBAAkB,GAAGzC,KAAK,CAAC0C,WAAW,CAAEpB,CAAC,IAAK;IAClD,IACEiB,eAAe,CAACI,OAAO,IACvB1C,oBAAoB,CAACsC,eAAe,CAACI,OAAO,EAAErB,CAAC,CAAC,EAEhD;IACFe,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,SAAS,GAAGX,eAAe,IAAIrB,eAAe;EAEpDZ,KAAK,CAAC6C,SAAS,CAAC,MAAM;IACpBC,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,kBAAkB,EAAE,KAAK,CAAC;IACjE,OAAO,MAAM;MACXK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,kBAAkB,EAAE,KAAK,CAAC;IACtE,CAAC;EACH,CAAC,EAAE,CAACA,kBAAkB,CAAC,CAAC;EAExB,OACE,4BACG,CAACN,gBAAgB,KACf7B,MAAM,CAACU,YAAY,CAACC,cAAc,CAACC,OAAO,IACzC,CAACf,aAAa,CAAC0B,IAAI,CAAC,CAAC,IACrB,MAAC,SAAS,eACJhB,KAAK;IACT,kBAAkB,EAAE,MAAMwB,oBAAoB,CAAC,IAAI,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAExD,EACFD,iBAAiB,IAChB,MAAC,YAAY;IACX,aAAa,EACXN,aAAa,GACT,CAACmB,EAAE,EAAEC,KAAK,KAAK;MACbb,oBAAoB,CAAC,KAAK,CAAC;MAC3BP,aAAa,CAACmB,EAAE,EAAEC,KAAK,CAAC;IAC1B,CAAC,GACD,IACL;IACD,aAAa,EACXnB,aAAa,GACT,CAACkB,EAAE,EAAEC,KAAK,KAAK;MACbb,oBAAoB,CAAC,KAAK,CAAC;MAC3BN,aAAa,CAACkB,EAAE,EAAEC,KAAK,CAAC;IAC1B,CAAC,GACD,IACL;IACD,YAAY,EAAExB,KAAM;IACpB,aAAa,EAAEC,aAAc;IAC7B,YAAY,EAAEK,YAAa;IAC3B,UAAU,EAAEE,UAAW;IACvB,cAAc,EAAEN,cAAe;IAC/B,GAAG,EAAEW,eAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAExB,CACA;AAEP,CAAC;AAAC,IAzEId,kBAAkB;AAAA,MAAlBA,kBAAkB;AA2ExB,eAAeA,kBAAkB;AAAC;AAAA;AAAA"},"metadata":{"react-intl":{"messages":[{"id":"Add block","defaultMessage":"Add block"}]}},"sourceType":"module","externalDependencies":[]}