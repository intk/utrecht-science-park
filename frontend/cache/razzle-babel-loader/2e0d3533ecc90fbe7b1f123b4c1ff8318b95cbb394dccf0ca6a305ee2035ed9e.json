{"ast":null,"code":"var _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-form-block/src/components/Edit.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport React from 'react';\nimport { Segment, Grid, Form, Button } from 'semantic-ui-react';\nimport { withDNDContext, SubblocksEdit, SubblocksWrapper } from 'volto-subblocks';\nimport { SidebarPortal } from '@plone/volto/components';\nimport EditBlock from 'volto-form-block/components/EditBlock';\nimport Sidebar from 'volto-form-block/components/Sidebar';\nimport { defineMessages } from 'react-intl';\nconst messages = defineMessages({\n  addField: {\n    \"id\": \"Add field\",\n    \"defaultMessage\": \"Aggiungi un campo\"\n  },\n  default_submit_label: {\n    \"id\": \"form_default_submit_label\",\n    \"defaultMessage\": \"Invia\"\n  },\n  warning: {\n    \"id\": \"form_edit_warning\",\n    \"defaultMessage\": \"Attenzione!\"\n  },\n  warning_from: {\n    \"id\": \"form_edit_warning_from\",\n    \"defaultMessage\": \"Enter a field of type 'Sender E-mail'. If it is not present, or it is present but not filled in by the user, the sender address of the e-mail will be the one configured in the right sidebar.\"\n  }\n});\n\n/**\n * Edit Form block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends SubblocksEdit {\n  componentDidMount() {\n    super.componentDidMount();\n    if (!this.props.data.default_from) {\n      this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n        default_from: 'noreply@plone.org',\n        lastChange: new Date().getTime()\n      }));\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n  render() {\n    if (__SERVER__) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 14\n        }\n      });\n    }\n    return __jsx(\"div\", {\n      className: \"public-ui\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, this.props.data.title && __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }\n    }, this.props.data.title), this.props.data.description && __jsx(\"p\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, this.props.data.description), __jsx(SubblocksWrapper, {\n      node: this.node,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, this.state.subblocks.map((subblock, subindex) => __jsx(Form.Field, {\n      key: subindex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, __jsx(EditBlock, _extends({\n      data: subblock,\n      index: subindex,\n      selected: this.isSubblockSelected(subindex)\n    }, this.subblockProps, {\n      openObjectBrowser: this.props.openObjectBrowser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    })))), this.props.selected && __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, this.renderAddBlockButton(this.props.intl.formatMessage(messages.addField))), __jsx(Grid, {\n      columns: 1,\n      padded: \"vertically\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, __jsx(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, __jsx(Grid.Column, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }, this.props.data.submit_label || this.props.intl.formatMessage(messages.default_submit_label))))))), __jsx(SidebarPortal, {\n      selected: this.props.selected || false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, __jsx(Sidebar, _extends({}, this.props, {\n      data: this.props.data,\n      block: this.props.block,\n      onChangeBlock: this.props.onChangeBlock,\n      onChangeSubBlock: this.onChangeSubblocks,\n      selected: this.state.subIndexSelected,\n      setSelected: this.onSubblockChangeFocus,\n      openObjectBrowser: this.props.openObjectBrowser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }))));\n  }\n}\nexport default /*#__PURE__*/React.memo(withDNDContext(Edit));","map":{"version":3,"names":["React","Segment","Grid","Form","Button","withDNDContext","SubblocksEdit","SubblocksWrapper","SidebarPortal","EditBlock","Sidebar","defineMessages","messages","addField","default_submit_label","warning","warning_from","Edit","componentDidMount","props","data","default_from","onChangeBlock","block","lastChange","Date","getTime","render","__SERVER__","title","description","node","state","subblocks","map","subblock","subindex","isSubblockSelected","subblockProps","openObjectBrowser","selected","renderAddBlockButton","intl","formatMessage","submit_label","onChangeSubblocks","subIndexSelected","onSubblockChangeFocus","memo"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-form-block/src/components/Edit.jsx"],"sourcesContent":["import React from 'react';\nimport { Segment, Grid, Form, Button } from 'semantic-ui-react';\nimport {\n  withDNDContext,\n  SubblocksEdit,\n  SubblocksWrapper,\n} from 'volto-subblocks';\nimport { SidebarPortal } from '@plone/volto/components';\n\nimport EditBlock from 'volto-form-block/components/EditBlock';\nimport Sidebar from 'volto-form-block/components/Sidebar';\n\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  addField: {\n    id: 'Add field',\n    defaultMessage: 'Aggiungi un campo',\n  },\n  default_submit_label: {\n    id: 'form_default_submit_label',\n    defaultMessage: 'Invia',\n  },\n  warning: {\n    id: 'form_edit_warning',\n    defaultMessage: 'Attenzione!',\n  },\n  warning_from: {\n    id: 'form_edit_warning_from',\n    defaultMessage:\n      \"Enter a field of type 'Sender E-mail'. If it is not present, or it is present but not filled in by the user, the sender address of the e-mail will be the one configured in the right sidebar.\",\n  },\n});\n\n/**\n * Edit Form block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends SubblocksEdit {\n  componentDidMount() {\n    super.componentDidMount();\n\n    if (!this.props.data.default_from) {\n      this.props.onChangeBlock(this.props.block, {\n        ...this.props.data,\n        default_from: 'noreply@plone.org',\n        lastChange: new Date().getTime(),\n      });\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n\n  render() {\n    if (__SERVER__) {\n      return <div />;\n    }\n\n    return (\n      <div className=\"public-ui\">\n        <Segment>\n          {this.props.data.title && <h2>{this.props.data.title}</h2>}\n          {this.props.data.description && (\n            <p className=\"description\">{this.props.data.description}</p>\n          )}\n\n          <SubblocksWrapper node={this.node}>\n            {this.state.subblocks.map((subblock, subindex) => (\n              <Form.Field key={subindex}>\n                <EditBlock\n                  data={subblock}\n                  index={subindex}\n                  selected={this.isSubblockSelected(subindex)}\n                  {...this.subblockProps}\n                  openObjectBrowser={this.props.openObjectBrowser}\n                />\n              </Form.Field>\n            ))}\n\n            {this.props.selected && (\n              <Form.Field>\n                {this.renderAddBlockButton(\n                  this.props.intl.formatMessage(messages.addField),\n                )}\n              </Form.Field>\n            )}\n\n            <Grid columns={1} padded=\"vertically\">\n              <Grid.Row>\n                <Grid.Column textAlign=\"center\">\n                  <Button primary>\n                    {this.props.data.submit_label ||\n                      this.props.intl.formatMessage(\n                        messages.default_submit_label,\n                      )}\n                  </Button>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </SubblocksWrapper>\n        </Segment>\n\n        <SidebarPortal selected={this.props.selected || false}>\n          <Sidebar\n            {...this.props}\n            data={this.props.data}\n            block={this.props.block}\n            onChangeBlock={this.props.onChangeBlock}\n            onChangeSubBlock={this.onChangeSubblocks}\n            selected={this.state.subIndexSelected}\n            setSelected={this.onSubblockChangeFocus}\n            openObjectBrowser={this.props.openObjectBrowser}\n          />\n        </SidebarPortal>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(withDNDContext(Edit));\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Add field","defaultMessage":"Aggiungi un campo"},{"id":"form_default_submit_label","defaultMessage":"Invia"},{"id":"form_edit_warning","defaultMessage":"Attenzione!"},{"id":"form_edit_warning_from","defaultMessage":"Enter a field of type 'Sender E-mail'. If it is not present, or it is present but not filled in by the user, the sender address of the e-mail will be the one configured in the right sidebar."}]}},"sourceType":"module","externalDependencies":[]}