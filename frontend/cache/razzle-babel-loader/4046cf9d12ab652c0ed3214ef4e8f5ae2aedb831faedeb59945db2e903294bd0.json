{"ast":null,"code":"import _map from \"lodash/map\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { flattenToAppURL, getBaseUrl, hasApiExpander } from '@plone/volto/helpers';\nimport { GET_BREADCRUMBS, GET_CONTENT } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  error: null,\n  items: [],\n  root: null,\n  loaded: false,\n  loading: false\n};\n\n/**\n * Breadcrumbs reducer.\n * @function breadcrumbs\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function breadcrumbs(state = initialState, action = {}) {\n  let hasExpander;\n  switch (action.type) {\n    case `${GET_BREADCRUMBS}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: false,\n        loading: true\n      });\n    case `${GET_CONTENT}_SUCCESS`:\n      hasExpander = hasApiExpander('breadcrumbs', getBaseUrl(flattenToAppURL(action.result['@id'])));\n      if (hasExpander) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          error: null,\n          items: _map(action.result['@components'].breadcrumbs.items, item => ({\n            title: item.title,\n            url: flattenToAppURL(item['@id'])\n          })),\n          root: flattenToAppURL(action.result['@components'].breadcrumbs.root),\n          loaded: true,\n          loading: false\n        });\n      }\n      return state;\n    case `${GET_BREADCRUMBS}_SUCCESS`:\n      hasExpander = hasApiExpander('breadcrumbs', getBaseUrl(flattenToAppURL(action.result['@id'])));\n      if (!hasExpander) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          error: null,\n          items: _map(action.result.items, item => ({\n            title: item.title,\n            url: flattenToAppURL(item['@id'])\n          })),\n          root: flattenToAppURL(action.result.root),\n          loaded: true,\n          loading: false\n        });\n      }\n      return state;\n    case `${GET_BREADCRUMBS}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        items: [],\n        loaded: false,\n        loading: false\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["flattenToAppURL","getBaseUrl","hasApiExpander","GET_BREADCRUMBS","GET_CONTENT","initialState","error","items","root","loaded","loading","breadcrumbs","state","action","hasExpander","type","result","item","title","url"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/reducers/breadcrumbs/breadcrumbs.js"],"sourcesContent":["/**\n * Breadcrumbs reducer.\n * @module reducers/breadcrumbs/breadcrumbs\n */\n\nimport { map } from 'lodash';\nimport {\n  flattenToAppURL,\n  getBaseUrl,\n  hasApiExpander,\n} from '@plone/volto/helpers';\n\nimport {\n  GET_BREADCRUMBS,\n  GET_CONTENT,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  items: [],\n  root: null,\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Breadcrumbs reducer.\n * @function breadcrumbs\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function breadcrumbs(state = initialState, action = {}) {\n  let hasExpander;\n  switch (action.type) {\n    case `${GET_BREADCRUMBS}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${GET_CONTENT}_SUCCESS`:\n      hasExpander = hasApiExpander(\n        'breadcrumbs',\n        getBaseUrl(flattenToAppURL(action.result['@id'])),\n      );\n      if (hasExpander) {\n        return {\n          ...state,\n          error: null,\n          items: map(\n            action.result['@components'].breadcrumbs.items,\n            (item) => ({\n              title: item.title,\n              url: flattenToAppURL(item['@id']),\n            }),\n          ),\n          root: flattenToAppURL(action.result['@components'].breadcrumbs.root),\n          loaded: true,\n          loading: false,\n        };\n      }\n      return state;\n    case `${GET_BREADCRUMBS}_SUCCESS`:\n      hasExpander = hasApiExpander(\n        'breadcrumbs',\n        getBaseUrl(flattenToAppURL(action.result['@id'])),\n      );\n      if (!hasExpander) {\n        return {\n          ...state,\n          error: null,\n          items: map(action.result.items, (item) => ({\n            title: item.title,\n            url: flattenToAppURL(item['@id']),\n          })),\n          root: flattenToAppURL(action.result.root),\n          loaded: true,\n          loading: false,\n        };\n      }\n      return state;\n    case `${GET_BREADCRUMBS}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        items: [],\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";;;;;;AAMA,SACEA,eAAe,EACfC,UAAU,EACVC,cAAc,QACT,sBAAsB;AAE7B,SACEC,eAAe,EACfC,WAAW,QACN,oCAAoC;AAE3C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,IAAI;EACVC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,WAAW,CAACC,KAAK,GAAGP,YAAY,EAAEQ,MAAM,GAAG,CAAC,CAAC,EAAE;EACrE,IAAIC,WAAW;EACf,QAAQD,MAAM,CAACE,IAAI;IACjB,KAAM,GAAEZ,eAAgB,UAAS;MAC/B,uCACKS,KAAK;QACRN,KAAK,EAAE,IAAI;QACXG,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAI;IAEjB,KAAM,GAAEN,WAAY,UAAS;MAC3BU,WAAW,GAAGZ,cAAc,CAC1B,aAAa,EACbD,UAAU,CAACD,eAAe,CAACa,MAAM,CAACG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAClD;MACD,IAAIF,WAAW,EAAE;QACf,uCACKF,KAAK;UACRN,KAAK,EAAE,IAAI;UACXC,KAAK,EAAE,KACLM,MAAM,CAACG,MAAM,CAAC,aAAa,CAAC,CAACL,WAAW,CAACJ,KAAK,EAC7CU,IAAI,KAAM;YACTC,KAAK,EAAED,IAAI,CAACC,KAAK;YACjBC,GAAG,EAAEnB,eAAe,CAACiB,IAAI,CAAC,KAAK,CAAC;UAClC,CAAC,CAAC,CACH;UACDT,IAAI,EAAER,eAAe,CAACa,MAAM,CAACG,MAAM,CAAC,aAAa,CAAC,CAACL,WAAW,CAACH,IAAI,CAAC;UACpEC,MAAM,EAAE,IAAI;UACZC,OAAO,EAAE;QAAK;MAElB;MACA,OAAOE,KAAK;IACd,KAAM,GAAET,eAAgB,UAAS;MAC/BW,WAAW,GAAGZ,cAAc,CAC1B,aAAa,EACbD,UAAU,CAACD,eAAe,CAACa,MAAM,CAACG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAClD;MACD,IAAI,CAACF,WAAW,EAAE;QAChB,uCACKF,KAAK;UACRN,KAAK,EAAE,IAAI;UACXC,KAAK,EAAE,KAAIM,MAAM,CAACG,MAAM,CAACT,KAAK,EAAGU,IAAI,KAAM;YACzCC,KAAK,EAAED,IAAI,CAACC,KAAK;YACjBC,GAAG,EAAEnB,eAAe,CAACiB,IAAI,CAAC,KAAK,CAAC;UAClC,CAAC,CAAC,CAAC;UACHT,IAAI,EAAER,eAAe,CAACa,MAAM,CAACG,MAAM,CAACR,IAAI,CAAC;UACzCC,MAAM,EAAE,IAAI;UACZC,OAAO,EAAE;QAAK;MAElB;MACA,OAAOE,KAAK;IACd,KAAM,GAAET,eAAgB,OAAM;MAC5B,uCACKS,KAAK;QACRN,KAAK,EAAEO,MAAM,CAACP,KAAK;QACnBC,KAAK,EAAE,EAAE;QACTE,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAK;IAElB;MACE,OAAOE,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}