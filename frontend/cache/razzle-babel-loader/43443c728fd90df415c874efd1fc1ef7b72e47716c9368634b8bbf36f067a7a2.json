{"ast":null,"code":"import _objectSpread from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Blocks/Maps/MapsSidebar.jsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { MapsSchema } from './schema';\nimport { BlockDataForm } from '@plone/volto/components';\nimport { useIntl, defineMessages } from 'react-intl';\nimport globeSVG from '@plone/volto/icons/globe.svg';\nimport { Icon } from '@plone/volto/components';\nimport { Segment } from 'semantic-ui-react';\nconst messages = defineMessages({\n  Maps: {\n    \"id\": \"Maps\",\n    \"defaultMessage\": \"Maps\"\n  },\n  NoMaps: {\n    \"id\": \"No map selected\",\n    \"defaultMessage\": \"No map selected\"\n  }\n});\nconst MapsSidebar = props => {\n  _s();\n  const {\n    data,\n    block,\n    onChangeBlock\n  } = props;\n  const intl = useIntl();\n  const schema = MapsSchema(_objectSpread(_objectSpread({}, props), {}, {\n    intl\n  }));\n  return __jsx(React.Fragment, null, !data.url ? __jsx(Segment, {\n    className: \"sidebar-metadata-container\",\n    secondary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, props.intl.formatMessage(messages.NoMaps), __jsx(Icon, {\n    name: globeSVG,\n    size: \"100px\",\n    color: \"#b8c6c8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })) : __jsx(BlockDataForm, {\n    schema: schema,\n    title: intl.formatMessage(messages.Maps),\n    onChangeField: (id, value) => {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        [id]: value\n      }));\n    },\n    onChangeBlock: onChangeBlock,\n    formData: data,\n    block: block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }));\n};\n_s(MapsSidebar, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n_c = MapsSidebar;\nexport default MapsSidebar;\nvar _c;\n$RefreshReg$(_c, \"MapsSidebar\");","map":{"version":3,"names":["React","MapsSchema","BlockDataForm","useIntl","defineMessages","globeSVG","Icon","Segment","messages","Maps","NoMaps","MapsSidebar","props","data","block","onChangeBlock","intl","schema","url","formatMessage","id","value"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Blocks/Maps/MapsSidebar.jsx"],"sourcesContent":["import React from 'react';\nimport { MapsSchema } from './schema';\nimport { BlockDataForm } from '@plone/volto/components';\nimport { useIntl, defineMessages } from 'react-intl';\nimport globeSVG from '@plone/volto/icons/globe.svg';\nimport { Icon } from '@plone/volto/components';\nimport { Segment } from 'semantic-ui-react';\n\nconst messages = defineMessages({\n  Maps: {\n    id: 'Maps',\n    defaultMessage: 'Maps',\n  },\n  NoMaps: {\n    id: 'No map selected',\n    defaultMessage: 'No map selected',\n  },\n});\n\nconst MapsSidebar = (props) => {\n  const { data, block, onChangeBlock } = props;\n  const intl = useIntl();\n  const schema = MapsSchema({ ...props, intl });\n\n  return (\n    <>\n      {!data.url ? (\n        <Segment className=\"sidebar-metadata-container\" secondary>\n          {props.intl.formatMessage(messages.NoMaps)}\n          <Icon name={globeSVG} size=\"100px\" color=\"#b8c6c8\" />\n        </Segment>\n      ) : (\n        <BlockDataForm\n          schema={schema}\n          title={intl.formatMessage(messages.Maps)}\n          onChangeField={(id, value) => {\n            onChangeBlock(block, {\n              ...data,\n              [id]: value,\n            });\n          }}\n          onChangeBlock={onChangeBlock}\n          formData={data}\n          block={block}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MapsSidebar;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,UAAU;AACrC,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,OAAO,EAAEC,cAAc,QAAQ,YAAY;AACpD,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,SAASC,OAAO,QAAQ,mBAAmB;AAE3C,MAAMC,QAAQ,GAAGJ,cAAc,CAAC;EAC9BK,IAAI;IAAA;IAAA;EAAA,CAGH;EACDC,MAAM;IAAA;IAAA;EAAA;AAIR,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC7B,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAc,CAAC,GAAGH,KAAK;EAC5C,MAAMI,IAAI,GAAGb,OAAO,EAAE;EACtB,MAAMc,MAAM,GAAGhB,UAAU,iCAAMW,KAAK;IAAEI;EAAI,GAAG;EAE7C,OACE,4BACG,CAACH,IAAI,CAACK,GAAG,GACR,MAAC,OAAO;IAAC,SAAS,EAAC,4BAA4B;IAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACtDN,KAAK,CAACI,IAAI,CAACG,aAAa,CAACX,QAAQ,CAACE,MAAM,CAAC,EAC1C,MAAC,IAAI;IAAC,IAAI,EAAEL,QAAS;IAAC,IAAI,EAAC,OAAO;IAAC,KAAK,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAC7C,GAEV,MAAC,aAAa;IACZ,MAAM,EAAEY,MAAO;IACf,KAAK,EAAED,IAAI,CAACG,aAAa,CAACX,QAAQ,CAACC,IAAI,CAAE;IACzC,aAAa,EAAE,CAACW,EAAE,EAAEC,KAAK,KAAK;MAC5BN,aAAa,CAACD,KAAK,kCACdD,IAAI;QACP,CAACO,EAAE,GAAGC;MAAK,GACX;IACJ,CAAE;IACF,aAAa,EAAEN,aAAc;IAC7B,QAAQ,EAAEF,IAAK;IACf,KAAK,EAAEC,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAEhB,CACA;AAEP,CAAC;AAAC,GA7BIH,WAAW;EAAA,QAEFR,OAAO;AAAA;AAAA,KAFhBQ,WAAW;AA+BjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[{"id":"Maps","defaultMessage":"Maps"},{"id":"No map selected","defaultMessage":"No map selected"}]}},"sourceType":"module","externalDependencies":[]}