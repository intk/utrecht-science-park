{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { AUTH_ROLE } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  authenticatedRole: null\n};\n\n/**  storing the authRole state\n * authRole reducer.\n * @function authRole\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function authRole(state = initialState, action = {}) {\n  switch (action.type) {\n    case AUTH_ROLE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        authenticatedRole: action.result\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["AUTH_ROLE","initialState","authenticatedRole","authRole","state","action","type","result"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/reducers/authRole/authRole.js"],"sourcesContent":["import { AUTH_ROLE } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  authenticatedRole: null,\n};\n\n/**  storing the authRole state\n * authRole reducer.\n * @function authRole\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function authRole(state = initialState, action = {}) {\n  switch (action.type) {\n    case AUTH_ROLE:\n      return {\n        ...state,\n        authenticatedRole: action.result,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";;;;;AAAA,SAASA,SAAS,QAAQ,oCAAoC;AAE9D,MAAMC,YAAY,GAAG;EACnBC,iBAAiB,EAAE;AACrB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,QAAQ,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,GAAG,CAAC,CAAC,EAAE;EAClE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,SAAS;MACZ,uCACKI,KAAK;QACRF,iBAAiB,EAAEG,MAAM,CAACE;MAAM;IAEpC;MACE,OAAOH,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}