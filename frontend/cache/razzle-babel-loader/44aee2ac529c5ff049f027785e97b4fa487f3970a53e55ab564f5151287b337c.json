{"ast":null,"code":"var _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-form-block/src/components/Widget/HCaptchaWidget.jsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { defineMessages, useIntl } from 'react-intl';\nconst messages = defineMessages({\n  invisibleCaptcha: {\n    \"id\": \"HCaptchaInvisibleInfo\",\n    \"defaultMessage\": \"This site is protected by hCaptcha and its <a href=\\\"https://www.hcaptcha.com/privacy\\\">Privacy Policy</a> and <a href=\\\"https://www.hcaptcha.com/terms\\\">Terms of Service</a> apply.\"\n  }\n});\nconst HCaptchaWidget = _ref => {\n  _s();\n  let {\n    captchaRef,\n    captchaToken,\n    sitekey,\n    size,\n    HCaptcha: hcaptchalib\n  } = _ref;\n  const HCaptchaComponent = hcaptchalib.default;\n  const intl = useIntl();\n  const onVerify = token => {\n    captchaToken.current = token;\n  };\n  const onExpire = () => {\n    captchaToken.current = null;\n  };\n  const onLoad = () => {\n    captchaRef.current.execute();\n  };\n\n  // TODO: language\n  if (size === 'invisible') return __jsx(Grid.Row, {\n    centered: true,\n    className: \"row-padded-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(Grid.Column, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(HCaptchaComponent, {\n    ref: captchaRef,\n    sitekey: sitekey,\n    onLoad: onLoad,\n    onVerify: onVerify,\n    onExpire: onExpire,\n    size: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: intl.formatMessage(messages.invisibleCaptcha)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })));else return __jsx(Grid.Row, {\n    centered: true,\n    className: \"row-padded-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(Grid.Column, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(HCaptchaComponent, {\n    ref: captchaRef,\n    sitekey: sitekey,\n    onLoad: onLoad,\n    onVerify: onVerify,\n    size: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })));\n};\n_s(HCaptchaWidget, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n_c = HCaptchaWidget;\nexport default injectLazyLibs(['HCaptcha'])(HCaptchaWidget);\nvar _c;\n$RefreshReg$(_c, \"HCaptchaWidget\");","map":{"version":3,"names":["React","Grid","injectLazyLibs","defineMessages","useIntl","messages","invisibleCaptcha","HCaptchaWidget","captchaRef","captchaToken","sitekey","size","HCaptcha","hcaptchalib","HCaptchaComponent","default","intl","onVerify","token","current","onExpire","onLoad","execute","__html","formatMessage"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-form-block/src/components/Widget/HCaptchaWidget.jsx"],"sourcesContent":["import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { defineMessages, useIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invisibleCaptcha: {\n    id: 'HCaptchaInvisibleInfo',\n    defaultMessage:\n      'This site is protected by hCaptcha and its ' +\n      '<a href=\"https://www.hcaptcha.com/privacy\">Privacy Policy</a> and ' +\n      '<a href=\"https://www.hcaptcha.com/terms\">Terms of Service</a> apply.',\n  },\n});\n\nconst HCaptchaWidget = ({\n  captchaRef,\n  captchaToken,\n  sitekey,\n  size,\n  HCaptcha: hcaptchalib,\n}) => {\n  const HCaptchaComponent = hcaptchalib.default;\n  const intl = useIntl();\n\n  const onVerify = (token) => {\n    captchaToken.current = token;\n  };\n\n  const onExpire = () => {\n    captchaToken.current = null;\n  };\n\n  const onLoad = () => {\n    captchaRef.current.execute();\n  };\n\n  // TODO: language\n  if (size === 'invisible')\n    return (\n      <Grid.Row centered className=\"row-padded-top\">\n        <Grid.Column textAlign=\"center\">\n          <HCaptchaComponent\n            ref={captchaRef}\n            sitekey={sitekey}\n            onLoad={onLoad}\n            onVerify={onVerify}\n            onExpire={onExpire}\n            size={size}\n          />\n          <div\n            dangerouslySetInnerHTML={{\n              __html: intl.formatMessage(messages.invisibleCaptcha),\n            }}\n          />\n        </Grid.Column>\n      </Grid.Row>\n    );\n  else\n    return (\n      <Grid.Row centered className=\"row-padded-top\">\n        <Grid.Column textAlign=\"center\">\n          <HCaptchaComponent\n            ref={captchaRef}\n            sitekey={sitekey}\n            onLoad={onLoad}\n            onVerify={onVerify}\n            size={size}\n          />\n        </Grid.Column>\n      </Grid.Row>\n    );\n};\n\nexport default injectLazyLibs(['HCaptcha'])(HCaptchaWidget);\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,cAAc,QAAQ,wCAAwC;AACvE,SAASC,cAAc,EAAEC,OAAO,QAAQ,YAAY;AAEpD,MAAMC,QAAQ,GAAGF,cAAc,CAAC;EAC9BG,gBAAgB;IAAA;IAAA;EAAA;AAOlB,CAAC,CAAC;AAEF,MAAMC,cAAc,GAAG,QAMjB;EAAA;EAAA,IANkB;IACtBC,UAAU;IACVC,YAAY;IACZC,OAAO;IACPC,IAAI;IACJC,QAAQ,EAAEC;EACZ,CAAC;EACC,MAAMC,iBAAiB,GAAGD,WAAW,CAACE,OAAO;EAC7C,MAAMC,IAAI,GAAGZ,OAAO,EAAE;EAEtB,MAAMa,QAAQ,GAAIC,KAAK,IAAK;IAC1BT,YAAY,CAACU,OAAO,GAAGD,KAAK;EAC9B,CAAC;EAED,MAAME,QAAQ,GAAG,MAAM;IACrBX,YAAY,CAACU,OAAO,GAAG,IAAI;EAC7B,CAAC;EAED,MAAME,MAAM,GAAG,MAAM;IACnBb,UAAU,CAACW,OAAO,CAACG,OAAO,EAAE;EAC9B,CAAC;;EAED;EACA,IAAIX,IAAI,KAAK,WAAW,EACtB,OACE,MAAC,IAAI,CAAC,GAAG;IAAC,QAAQ;IAAC,SAAS,EAAC,gBAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC3C,MAAC,IAAI,CAAC,MAAM;IAAC,SAAS,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC7B,MAAC,iBAAiB;IAChB,GAAG,EAAEH,UAAW;IAChB,OAAO,EAAEE,OAAQ;IACjB,MAAM,EAAEW,MAAO;IACf,QAAQ,EAAEJ,QAAS;IACnB,QAAQ,EAAEG,QAAS;IACnB,IAAI,EAAET,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACX,EACF;IACE,uBAAuB,EAAE;MACvBY,MAAM,EAAEP,IAAI,CAACQ,aAAa,CAACnB,QAAQ,CAACC,gBAAgB;IACtD,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACF,CACU,CACL,CACX,KAEF,OACE,MAAC,IAAI,CAAC,GAAG;IAAC,QAAQ;IAAC,SAAS,EAAC,gBAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC3C,MAAC,IAAI,CAAC,MAAM;IAAC,SAAS,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC7B,MAAC,iBAAiB;IAChB,GAAG,EAAEE,UAAW;IAChB,OAAO,EAAEE,OAAQ;IACjB,MAAM,EAAEW,MAAO;IACf,QAAQ,EAAEJ,QAAS;IACnB,IAAI,EAAEN,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACX,CACU,CACL;AAEjB,CAAC;AAAC,GAzDIJ,cAAc;EAAA,QAQLH,OAAO;AAAA;AAAA,KARhBG,cAAc;AA2DpB,eAAeL,cAAc,CAAC,CAAC,UAAU,CAAC,CAAC,CAACK,cAAc,CAAC;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[{"id":"HCaptchaInvisibleInfo","defaultMessage":"This site is protected by hCaptcha and its <a href=\"https://www.hcaptcha.com/privacy\">Privacy Policy</a> and <a href=\"https://www.hcaptcha.com/terms\">Terms of Service</a> apply."}]}},"sourceType":"module","externalDependencies":[]}