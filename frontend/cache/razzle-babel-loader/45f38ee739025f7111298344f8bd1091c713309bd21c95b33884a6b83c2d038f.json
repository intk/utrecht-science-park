{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport loadable from '@loadable/component';\nimport formSVG from '@plone/volto/icons/form.svg';\nimport View from 'volto-form-block/components/View';\nimport Edit from 'volto-form-block/components/Edit';\nimport FormView from 'volto-form-block/components/FormView';\nimport Sidebar from 'volto-form-block/components/Sidebar';\nimport EditBlock from 'volto-form-block/components/EditBlock';\nimport Field from 'volto-form-block/components/Field';\nimport { downloadFile, getFieldName } from 'volto-form-block/components/utils';\nimport { submitForm, getFormData, exportCsvFormData, clearFormData } from 'volto-form-block/reducers';\nimport FormSchema from 'volto-form-block/formSchema';\nimport FieldSchema from 'volto-form-block/fieldSchema';\nimport { SelectionSchemaExtender, FromSchemaExtender } from './components/FieldTypeSchemaExtenders';\nexport { submitForm, getFormData, exportCsvFormData } from 'volto-form-block/actions';\nconst applyConfig = config => {\n  config.blocks.blocksConfig = _objectSpread(_objectSpread({}, config.blocks.blocksConfig), {}, {\n    form: {\n      id: 'form',\n      title: 'Form',\n      icon: formSVG,\n      group: 'text',\n      view: View,\n      edit: Edit,\n      formSchema: FormSchema,\n      fieldSchema: FieldSchema,\n      additionalFields: [],\n      fieldTypeSchemaExtenders: {\n        select: SelectionSchemaExtender,\n        single_choice: SelectionSchemaExtender,\n        multiple_choice: SelectionSchemaExtender,\n        from: FromSchemaExtender\n      },\n      restricted: false,\n      mostUsed: true,\n      security: {\n        addPermission: [],\n        view: []\n      },\n      sidebarTab: 1\n    }\n  });\n  config.addonReducers = _objectSpread(_objectSpread({}, config.addonReducers), {}, {\n    submitForm,\n    formData: getFormData,\n    exportCsvFormData,\n    clearFormData\n  });\n  config.settings.loadables['HCaptcha'] = loadable({\n    resolved: {},\n    chunkName() {\n      return \"hcaptcha-react-hcaptcha\";\n    },\n    isReady(props) {\n      const key = this.resolve(props);\n      if (this.resolved[key] !== true) {\n        return false;\n      }\n      if (typeof __webpack_modules__ !== 'undefined') {\n        return !!__webpack_modules__[key];\n      }\n      return false;\n    },\n    importAsync: () => import( /* webpackChunkName: \"hcaptcha-react-hcaptcha\" */'@hcaptcha/react-hcaptcha'),\n    requireAsync(props) {\n      const key = this.resolve(props);\n      this.resolved[key] = false;\n      return this.importAsync(props).then(resolved => {\n        this.resolved[key] = true;\n        return resolved;\n      });\n    },\n    requireSync(props) {\n      const id = this.resolve(props);\n      if (typeof __webpack_require__ !== 'undefined') {\n        return __webpack_require__(id);\n      }\n      return eval('module.require')(id);\n    },\n    resolve() {\n      if (require.resolveWeak) {\n        return require.resolveWeak(\"@hcaptcha/react-hcaptcha\");\n      }\n      return eval('require.resolve')(\"@hcaptcha/react-hcaptcha\");\n    }\n  });\n  config.settings.loadables['GoogleReCaptcha'] = loadable.lib({\n    resolved: {},\n    chunkName() {\n      return \"react-google-recaptcha-v3\";\n    },\n    isReady(props) {\n      const key = this.resolve(props);\n      if (this.resolved[key] !== true) {\n        return false;\n      }\n      if (typeof __webpack_modules__ !== 'undefined') {\n        return !!__webpack_modules__[key];\n      }\n      return false;\n    },\n    importAsync: () => import( /* webpackChunkName: \"react-google-recaptcha-v3\" */'react-google-recaptcha-v3'),\n    requireAsync(props) {\n      const key = this.resolve(props);\n      this.resolved[key] = false;\n      return this.importAsync(props).then(resolved => {\n        this.resolved[key] = true;\n        return resolved;\n      });\n    },\n    requireSync(props) {\n      const id = this.resolve(props);\n      if (typeof __webpack_require__ !== 'undefined') {\n        return __webpack_require__(id);\n      }\n      return eval('module.require')(id);\n    },\n    resolve() {\n      if (require.resolveWeak) {\n        return require.resolveWeak(\"react-google-recaptcha-v3\");\n      }\n      return eval('require.resolve')(\"react-google-recaptcha-v3\");\n    }\n  });\n  return config;\n};\nexport default applyConfig;\nexport { View, Edit, Sidebar, FormView, EditBlock, Field, downloadFile, getFieldName };","map":{"version":3,"names":["loadable","formSVG","View","Edit","FormView","Sidebar","EditBlock","Field","downloadFile","getFieldName","submitForm","getFormData","exportCsvFormData","clearFormData","FormSchema","FieldSchema","SelectionSchemaExtender","FromSchemaExtender","applyConfig","config","blocks","blocksConfig","form","id","title","icon","group","view","edit","formSchema","fieldSchema","additionalFields","fieldTypeSchemaExtenders","select","single_choice","multiple_choice","from","restricted","mostUsed","security","addPermission","sidebarTab","addonReducers","formData","settings","loadables","lib"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-form-block/src/index.js"],"sourcesContent":["import loadable from '@loadable/component';\nimport formSVG from '@plone/volto/icons/form.svg';\nimport View from 'volto-form-block/components/View';\nimport Edit from 'volto-form-block/components/Edit';\nimport FormView from 'volto-form-block/components/FormView';\nimport Sidebar from 'volto-form-block/components/Sidebar';\nimport EditBlock from 'volto-form-block/components/EditBlock';\nimport Field from 'volto-form-block/components/Field';\nimport { downloadFile, getFieldName } from 'volto-form-block/components/utils';\nimport {\n  submitForm,\n  getFormData,\n  exportCsvFormData,\n  clearFormData,\n} from 'volto-form-block/reducers';\nimport FormSchema from 'volto-form-block/formSchema';\nimport FieldSchema from 'volto-form-block/fieldSchema';\nimport {\n  SelectionSchemaExtender,\n  FromSchemaExtender,\n} from './components/FieldTypeSchemaExtenders';\nexport {\n  submitForm,\n  getFormData,\n  exportCsvFormData,\n} from 'volto-form-block/actions';\n\nconst applyConfig = (config) => {\n  config.blocks.blocksConfig = {\n    ...config.blocks.blocksConfig,\n    form: {\n      id: 'form',\n      title: 'Form',\n      icon: formSVG,\n      group: 'text',\n      view: View,\n      edit: Edit,\n      formSchema: FormSchema,\n      fieldSchema: FieldSchema,\n      additionalFields: [],\n      fieldTypeSchemaExtenders: {\n        select: SelectionSchemaExtender,\n        single_choice: SelectionSchemaExtender,\n        multiple_choice: SelectionSchemaExtender,\n        from: FromSchemaExtender,\n      },\n      restricted: false,\n      mostUsed: true,\n      security: {\n        addPermission: [],\n        view: [],\n      },\n      sidebarTab: 1,\n    },\n  };\n\n  config.addonReducers = {\n    ...config.addonReducers,\n    submitForm,\n    formData: getFormData,\n    exportCsvFormData,\n    clearFormData,\n  };\n\n  config.settings.loadables['HCaptcha'] = loadable(() =>\n    import('@hcaptcha/react-hcaptcha'),\n  );\n  config.settings.loadables['GoogleReCaptcha'] = loadable.lib(() =>\n    import('react-google-recaptcha-v3'),\n  );\n\n  return config;\n};\n\nexport default applyConfig;\nexport {\n  View,\n  Edit,\n  Sidebar,\n  FormView,\n  EditBlock,\n  Field,\n  downloadFile,\n  getFieldName,\n};\n"],"mappings":";;;;;AAAA,OAAOA,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,IAAI,MAAM,kCAAkC;AACnD,OAAOC,IAAI,MAAM,kCAAkC;AACnD,OAAOC,QAAQ,MAAM,sCAAsC;AAC3D,OAAOC,OAAO,MAAM,qCAAqC;AACzD,OAAOC,SAAS,MAAM,uCAAuC;AAC7D,OAAOC,KAAK,MAAM,mCAAmC;AACrD,SAASC,YAAY,EAAEC,YAAY,QAAQ,mCAAmC;AAC9E,SACEC,UAAU,EACVC,WAAW,EACXC,iBAAiB,EACjBC,aAAa,QACR,2BAA2B;AAClC,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,SACEC,uBAAuB,EACvBC,kBAAkB,QACb,uCAAuC;AAC9C,SACEP,UAAU,EACVC,WAAW,EACXC,iBAAiB,QACZ,0BAA0B;AAEjC,MAAMM,WAAW,GAAIC,MAAM,IAAK;EAC9BA,MAAM,CAACC,MAAM,CAACC,YAAY,mCACrBF,MAAM,CAACC,MAAM,CAACC,YAAY;IAC7BC,IAAI,EAAE;MACJC,EAAE,EAAE,MAAM;MACVC,KAAK,EAAE,MAAM;MACbC,IAAI,EAAExB,OAAO;MACbyB,KAAK,EAAE,MAAM;MACbC,IAAI,EAAEzB,IAAI;MACV0B,IAAI,EAAEzB,IAAI;MACV0B,UAAU,EAAEf,UAAU;MACtBgB,WAAW,EAAEf,WAAW;MACxBgB,gBAAgB,EAAE,EAAE;MACpBC,wBAAwB,EAAE;QACxBC,MAAM,EAAEjB,uBAAuB;QAC/BkB,aAAa,EAAElB,uBAAuB;QACtCmB,eAAe,EAAEnB,uBAAuB;QACxCoB,IAAI,EAAEnB;MACR,CAAC;MACDoB,UAAU,EAAE,KAAK;MACjBC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE;QACRC,aAAa,EAAE,EAAE;QACjBb,IAAI,EAAE;MACR,CAAC;MACDc,UAAU,EAAE;IACd;EAAC,EACF;EAEDtB,MAAM,CAACuB,aAAa,mCACfvB,MAAM,CAACuB,aAAa;IACvBhC,UAAU;IACViC,QAAQ,EAAEhC,WAAW;IACrBC,iBAAiB;IACjBC;EAAa,EACd;EAEDM,MAAM,CAACyB,QAAQ,CAACC,SAAS,CAAC,UAAU,CAAC,GAAG7C,QAAQ;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;IAAA,aAAC,MAC/C,MAAM,mDAAC,0BAA0B,CAAC;IAAA;MAAA;MAAA;MAAA;QAAA;QAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;IAAA;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA,EACnC;EACDmB,MAAM,CAACyB,QAAQ,CAACC,SAAS,CAAC,iBAAiB,CAAC,GAAG7C,QAAQ,CAAC8C,GAAG;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;IAAA,aAAC,MAC1D,MAAM,qDAAC,2BAA2B,CAAC;IAAA;MAAA;MAAA;MAAA;QAAA;QAAA;MAAA;IAAA;IAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;IAAA;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA,EACpC;EAED,OAAO3B,MAAM;AACf,CAAC;AAED,eAAeD,WAAW;AAC1B,SACEhB,IAAI,EACJC,IAAI,EACJE,OAAO,EACPD,QAAQ,EACRE,SAAS,EACTC,KAAK,EACLC,YAAY,EACZC,YAAY"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}