{"ast":null,"code":"import _extends from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Blocks/Teaser/DefaultBody.jsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Message } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\nimport { flattenToAppURL, isInternalURL } from '@plone/volto/helpers';\nimport { getTeaserImageURL } from './utils';\nimport { MaybeWrap } from '@plone/volto/components';\nimport { UniversalLink } from '@plone/volto/components';\nimport cx from 'classnames';\nimport config from '@plone/volto/registry';\nconst messages = defineMessages({\n  PleaseChooseContent: {\n    \"id\": \"Please choose an existing content as source for this element\",\n    \"defaultMessage\": \"Please choose an existing content as source for this element\"\n  }\n});\nconst DefaultImage = props => __jsx(\"img\", _extends({}, props, {\n  alt: props.alt || '',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 33\n  }\n}));\n_c = DefaultImage;\nconst TeaserDefaultTemplate = props => {\n  _s();\n  var _data$href, _data$preview_image, _data$styles;\n  const {\n    className,\n    data,\n    isEditMode\n  } = props;\n  const intl = useIntl();\n  const href = (_data$href = data.href) === null || _data$href === void 0 ? void 0 : _data$href[0];\n  const image = (_data$preview_image = data.preview_image) === null || _data$preview_image === void 0 ? void 0 : _data$preview_image[0];\n  const align = data === null || data === void 0 ? void 0 : (_data$styles = data.styles) === null || _data$styles === void 0 ? void 0 : _data$styles.align;\n  const hasImageComponent = config.getComponent('Image').component;\n  const Image = config.getComponent('Image').component || DefaultImage;\n  const {\n    openExternalLinkInNewTab\n  } = config.settings;\n  const defaultImageSrc = href && flattenToAppURL(getTeaserImageURL({\n    href,\n    image,\n    align\n  }));\n  return __jsx(\"div\", {\n    className: cx('block teaser', className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(React.Fragment, null, !href && isEditMode && __jsx(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"teaser-item placeholder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: imageBlockSVG,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, intl.formatMessage(messages.PleaseChooseContent)))), href && __jsx(MaybeWrap, {\n    condition: !isEditMode,\n    as: UniversalLink,\n    href: href['@id'],\n    target: data.openLinkInNewTab || openExternalLinkInNewTab && !isInternalURL(href['@id']) ? '_blank' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"teaser-item default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, (href.hasPreviewImage || href.image_field || image) && __jsx(\"div\", {\n    className: \"image-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, __jsx(Image, {\n    src: hasImageComponent ? href : defaultImageSrc,\n    alt: \"\",\n    loading: \"lazy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  })), __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, (data === null || data === void 0 ? void 0 : data.head_title) && __jsx(\"div\", {\n    className: \"headline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }, data.head_title), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, data === null || data === void 0 ? void 0 : data.title), !data.hide_description && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 44\n    }\n  }, data === null || data === void 0 ? void 0 : data.description))))));\n};\n_s(TeaserDefaultTemplate, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n_c2 = TeaserDefaultTemplate;\nTeaserDefaultTemplate.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  isEditMode: PropTypes.bool\n};\nexport default TeaserDefaultTemplate;\nvar _c, _c2;\n$RefreshReg$(_c, \"DefaultImage\");\n$RefreshReg$(_c2, \"TeaserDefaultTemplate\");","map":{"version":3,"names":["React","PropTypes","Message","defineMessages","useIntl","imageBlockSVG","flattenToAppURL","isInternalURL","getTeaserImageURL","MaybeWrap","UniversalLink","cx","config","messages","PleaseChooseContent","DefaultImage","props","alt","TeaserDefaultTemplate","className","data","isEditMode","intl","href","image","preview_image","align","styles","hasImageComponent","getComponent","component","Image","openExternalLinkInNewTab","settings","defaultImageSrc","formatMessage","openLinkInNewTab","hasPreviewImage","image_field","head_title","title","hide_description","description","propTypes","objectOf","any","isRequired","bool"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Blocks/Teaser/DefaultBody.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Message } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\nimport { flattenToAppURL, isInternalURL } from '@plone/volto/helpers';\nimport { getTeaserImageURL } from './utils';\nimport { MaybeWrap } from '@plone/volto/components';\nimport { UniversalLink } from '@plone/volto/components';\nimport cx from 'classnames';\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  PleaseChooseContent: {\n    id: 'Please choose an existing content as source for this element',\n    defaultMessage:\n      'Please choose an existing content as source for this element',\n  },\n});\n\nconst DefaultImage = (props) => <img {...props} alt={props.alt || ''} />;\n\nconst TeaserDefaultTemplate = (props) => {\n  const { className, data, isEditMode } = props;\n  const intl = useIntl();\n  const href = data.href?.[0];\n  const image = data.preview_image?.[0];\n  const align = data?.styles?.align;\n\n  const hasImageComponent = config.getComponent('Image').component;\n  const Image = config.getComponent('Image').component || DefaultImage;\n  const { openExternalLinkInNewTab } = config.settings;\n  const defaultImageSrc =\n    href && flattenToAppURL(getTeaserImageURL({ href, image, align }));\n\n  return (\n    <div className={cx('block teaser', className)}>\n      <>\n        {!href && isEditMode && (\n          <Message>\n            <div className=\"teaser-item placeholder\">\n              <img src={imageBlockSVG} alt=\"\" />\n              <p>{intl.formatMessage(messages.PleaseChooseContent)}</p>\n            </div>\n          </Message>\n        )}\n        {href && (\n          <MaybeWrap\n            condition={!isEditMode}\n            as={UniversalLink}\n            href={href['@id']}\n            target={\n              data.openLinkInNewTab ||\n              (openExternalLinkInNewTab && !isInternalURL(href['@id']))\n                ? '_blank'\n                : null\n            }\n          >\n            <div className=\"teaser-item default\">\n              {(href.hasPreviewImage || href.image_field || image) && (\n                <div className=\"image-wrapper\">\n                  <Image\n                    src={hasImageComponent ? href : defaultImageSrc}\n                    alt=\"\"\n                    loading=\"lazy\"\n                  />\n                </div>\n              )}\n              <div className=\"content\">\n                {data?.head_title && (\n                  <div className=\"headline\">{data.head_title}</div>\n                )}\n                <h2>{data?.title}</h2>\n                {!data.hide_description && <p>{data?.description}</p>}\n              </div>\n            </div>\n          </MaybeWrap>\n        )}\n      </>\n    </div>\n  );\n};\n\nTeaserDefaultTemplate.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  isEditMode: PropTypes.bool,\n};\n\nexport default TeaserDefaultTemplate;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Please choose an existing content as source for this element","defaultMessage":"Please choose an existing content as source for this element"}]}},"sourceType":"module","externalDependencies":[]}