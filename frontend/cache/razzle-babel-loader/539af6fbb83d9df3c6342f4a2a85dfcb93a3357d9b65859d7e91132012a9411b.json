{"ast":null,"code":"import _pull from \"lodash/pull\";\nimport _mapValues from \"lodash/mapValues\";\nimport _map from \"lodash/map\";\nimport _keys from \"lodash/keys\";\nimport _indexOf from \"lodash/indexOf\";\nimport _find from \"lodash/find\";\nimport _filter from \"lodash/filter\";\nimport _concat from \"lodash/concat\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Contents/Contents.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/**\n * Contents component.\n * @module components/manage/Contents/Contents\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Portal } from 'react-portal';\nimport { Link } from 'react-router-dom';\nimport { Button, Confirm, Container, Divider, Dropdown, Menu, Input, Segment, Table, Loader, Dimmer } from 'semantic-ui-react';\nimport move from 'lodash-move';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { asyncConnect } from '@plone/volto/helpers';\nimport { searchContent, cut, copy, copyContent, deleteContent, listActions, moveContent, orderContent, sortContent, updateColumnsContent, linkIntegrityCheck, getContent } from '@plone/volto/actions';\nimport Indexes, { defaultIndexes } from '@plone/volto/constants/Indexes';\nimport { ContentsBreadcrumbs, ContentsIndexHeader, ContentsItem, ContentsRenameModal, ContentsUploadModal, ContentsWorkflowModal, ContentsTagsModal, ContentsPropertiesModal, Pagination, Popup, Toolbar, Toast, Icon, Unauthorized } from '@plone/volto/components';\nimport { Helmet, getBaseUrl } from '@plone/volto/helpers';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport backSVG from '@plone/volto/icons/back.svg';\nimport cutSVG from '@plone/volto/icons/cut.svg';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport copySVG from '@plone/volto/icons/copy.svg';\nimport tagSVG from '@plone/volto/icons/tag.svg';\nimport renameSVG from '@plone/volto/icons/rename.svg';\nimport semaphoreSVG from '@plone/volto/icons/semaphore.svg';\nimport uploadSVG from '@plone/volto/icons/upload.svg';\nimport propertiesSVG from '@plone/volto/icons/properties.svg';\nimport pasteSVG from '@plone/volto/icons/paste.svg';\nimport zoomSVG from '@plone/volto/icons/zoom.svg';\nimport checkboxUncheckedSVG from '@plone/volto/icons/checkbox-unchecked.svg';\nimport checkboxCheckedSVG from '@plone/volto/icons/checkbox-checked.svg';\nimport checkboxIndeterminateSVG from '@plone/volto/icons/checkbox-indeterminate.svg';\nimport configurationSVG from '@plone/volto/icons/configuration-app.svg';\nimport sortDownSVG from '@plone/volto/icons/sort-down.svg';\nimport sortUpSVG from '@plone/volto/icons/sort-up.svg';\nimport downKeySVG from '@plone/volto/icons/down-key.svg';\nimport moreSVG from '@plone/volto/icons/more.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nconst messages = defineMessages({\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  contents: {\n    \"id\": \"Contents\",\n    \"defaultMessage\": \"Contents\"\n  },\n  copy: {\n    \"id\": \"Copy\",\n    \"defaultMessage\": \"Copy\"\n  },\n  cut: {\n    \"id\": \"Cut\",\n    \"defaultMessage\": \"Cut\"\n  },\n  error: {\n    \"id\": \"You can't paste this content here\",\n    \"defaultMessage\": \"You can't paste this content here\"\n  },\n  delete: {\n    \"id\": \"Delete\",\n    \"defaultMessage\": \"Delete\"\n  },\n  deleteConfirm: {\n    \"id\": \"Do you really want to delete the following items?\",\n    \"defaultMessage\": \"Do you really want to delete the following items?\"\n  },\n  deleteError: {\n    \"id\": \"The item could not be deleted.\",\n    \"defaultMessage\": \"The item could not be deleted.\"\n  },\n  loading: {\n    \"id\": \"loading\",\n    \"defaultMessage\": \"Loading\"\n  },\n  home: {\n    \"id\": \"Home\",\n    \"defaultMessage\": \"Home\"\n  },\n  filter: {\n    \"id\": \"Filter\\u2026\",\n    \"defaultMessage\": \"Filter\\u2026\"\n  },\n  messageCopied: {\n    \"id\": \"Item(s) copied.\",\n    \"defaultMessage\": \"Item(s) copied.\"\n  },\n  messageCut: {\n    \"id\": \"Item(s) cut.\",\n    \"defaultMessage\": \"Item(s) cut.\"\n  },\n  messageUpdate: {\n    \"id\": \"Item(s) has been updated.\",\n    \"defaultMessage\": \"Item(s) has been updated.\"\n  },\n  messageReorder: {\n    \"id\": \"Item succesfully moved.\",\n    \"defaultMessage\": \"Item successfully moved.\"\n  },\n  messagePasted: {\n    \"id\": \"Item(s) pasted.\",\n    \"defaultMessage\": \"Item(s) pasted.\"\n  },\n  messageWorkflowUpdate: {\n    \"id\": \"Item(s) state has been updated.\",\n    \"defaultMessage\": \"Item(s) state has been updated.\"\n  },\n  paste: {\n    \"id\": \"Paste\",\n    \"defaultMessage\": \"Paste\"\n  },\n  properties: {\n    \"id\": \"Properties\",\n    \"defaultMessage\": \"Properties\"\n  },\n  rearrangeBy: {\n    \"id\": \"Rearrange items by\\u2026\",\n    \"defaultMessage\": \"Rearrange items by\\u2026\"\n  },\n  rename: {\n    \"id\": \"Rename\",\n    \"defaultMessage\": \"Rename\"\n  },\n  select: {\n    \"id\": \"Select\\u2026\",\n    \"defaultMessage\": \"Select\\u2026\"\n  },\n  selected: {\n    \"id\": \"{count} selected\",\n    \"defaultMessage\": \"{count} selected\"\n  },\n  selectColumns: {\n    \"id\": \"Select columns to show\",\n    \"defaultMessage\": \"Select columns to show\"\n  },\n  sort: {\n    \"id\": \"sort\",\n    \"defaultMessage\": \"sort\"\n  },\n  state: {\n    \"id\": \"State\",\n    \"defaultMessage\": \"State\"\n  },\n  tags: {\n    \"id\": \"Tags\",\n    \"defaultMessage\": \"Tags\"\n  },\n  upload: {\n    \"id\": \"Upload\",\n    \"defaultMessage\": \"Upload\"\n  },\n  success: {\n    \"id\": \"Success\",\n    \"defaultMessage\": \"Success\"\n  },\n  publicationDate: {\n    \"id\": \"Publication date\",\n    \"defaultMessage\": \"Publication date\"\n  },\n  createdOn: {\n    \"id\": \"Created on\",\n    \"defaultMessage\": \"Created on\"\n  },\n  expirationDate: {\n    \"id\": \"Expiration date\",\n    \"defaultMessage\": \"Expiration date\"\n  },\n  id: {\n    \"id\": \"ID\",\n    \"defaultMessage\": \"ID\"\n  },\n  uid: {\n    \"id\": \"UID\",\n    \"defaultMessage\": \"UID\"\n  },\n  reviewState: {\n    \"id\": \"Review state\",\n    \"defaultMessage\": \"Review state\"\n  },\n  folder: {\n    \"id\": \"Folder\",\n    \"defaultMessage\": \"Folder\"\n  },\n  excludedFromNavigation: {\n    \"id\": \"Excluded from navigation\",\n    \"defaultMessage\": \"Excluded from navigation\"\n  },\n  objectSize: {\n    \"id\": \"Object Size\",\n    \"defaultMessage\": \"Object Size\"\n  },\n  lastCommentedDate: {\n    \"id\": \"Last comment date\",\n    \"defaultMessage\": \"Last comment date\"\n  },\n  totalComments: {\n    \"id\": \"Total comments\",\n    \"defaultMessage\": \"Total comments\"\n  },\n  creator: {\n    \"id\": \"Creator\",\n    \"defaultMessage\": \"Creator\"\n  },\n  endDate: {\n    \"id\": \"End Date\",\n    \"defaultMessage\": \"End Date\"\n  },\n  startDate: {\n    \"id\": \"Start Date\",\n    \"defaultMessage\": \"Start Date\"\n  },\n  all: {\n    \"id\": \"All\",\n    \"defaultMessage\": \"All\"\n  },\n  linkIntegrityMessageHeader: {\n    \"id\": \"Potential link breakage\",\n    \"defaultMessage\": \"Potential link breakage\"\n  },\n  linkIntegrityMessageBody: {\n    \"id\": \"By deleting this item, you will break links that exist in the items listed below. If this is indeed what you want to do, we recommend that remove these references first.\",\n    \"defaultMessage\": \"By deleting this item, you will break links that exist in the items listed below. If this is indeed what you want to do, we recommend that remove these references first.\"\n  },\n  linkIntegrityMessageExtra: {\n    \"id\": \"This Page is referenced by the following items:\",\n    \"defaultMessage\": \"This Page is referenced by the following items:\"\n  },\n  deleteItemCountMessage: {\n    \"id\": \"Total items to be deleted:\",\n    \"defaultMessage\": \"Total items to be deleted:\"\n  },\n  deleteItemMessage: {\n    \"id\": \"Items to be deleted:\",\n    \"defaultMessage\": \"Items to be deleted:\"\n  }\n});\n\n/**\n * Contents class.\n * @class Contents\n * @extends Component\n */\nclass Contents extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsComponent\n   */\n  constructor(props) {\n    var _this$props$sort, _this$props$sort2;\n    super(props);\n    this.onDeselect = this.onDeselect.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onSelectAll = this.onSelectAll.bind(this);\n    this.onSelectIndex = this.onSelectIndex.bind(this);\n    this.onSelectNone = this.onSelectNone.bind(this);\n    this.onDeleteOk = this.onDeleteOk.bind(this);\n    this.onDeleteCancel = this.onDeleteCancel.bind(this);\n    this.onUploadOk = this.onUploadOk.bind(this);\n    this.onUploadCancel = this.onUploadCancel.bind(this);\n    this.onRenameOk = this.onRenameOk.bind(this);\n    this.onRenameCancel = this.onRenameCancel.bind(this);\n    this.onTagsOk = this.onTagsOk.bind(this);\n    this.onTagsCancel = this.onTagsCancel.bind(this);\n    this.onPropertiesOk = this.onPropertiesOk.bind(this);\n    this.onPropertiesCancel = this.onPropertiesCancel.bind(this);\n    this.onWorkflowOk = this.onWorkflowOk.bind(this);\n    this.onWorkflowCancel = this.onWorkflowCancel.bind(this);\n    this.onChangeFilter = this.onChangeFilter.bind(this);\n    this.onChangePage = this.onChangePage.bind(this);\n    this.onChangePageSize = this.onChangePageSize.bind(this);\n    this.onOrderIndex = this.onOrderIndex.bind(this);\n    this.onOrderItem = this.onOrderItem.bind(this);\n    this.onSortItems = this.onSortItems.bind(this);\n    this.onMoveToTop = this.onMoveToTop.bind(this);\n    this.onChangeSelected = this.onChangeSelected.bind(this);\n    this.onMoveToBottom = this.onMoveToBottom.bind(this);\n    this.cut = this.cut.bind(this);\n    this.copy = this.copy.bind(this);\n    this.delete = this.delete.bind(this);\n    this.upload = this.upload.bind(this);\n    this.rename = this.rename.bind(this);\n    this.tags = this.tags.bind(this);\n    this.properties = this.properties.bind(this);\n    this.workflow = this.workflow.bind(this);\n    this.paste = this.paste.bind(this);\n    this.fetchContents = this.fetchContents.bind(this);\n    this.orderTimeout = null;\n    this.deleteItemsToShowThreshold = 10;\n    this.state = {\n      selected: [],\n      showDelete: false,\n      showUpload: false,\n      showRename: false,\n      showTags: false,\n      showProperties: false,\n      showWorkflow: false,\n      itemsToDelete: [],\n      showAllItemsToDelete: true,\n      items: this.props.items,\n      filter: '',\n      currentPage: 0,\n      pageSize: 50,\n      index: this.props.index || {\n        order: _keys(Indexes),\n        values: _mapValues(Indexes, (value, key) => _objectSpread(_objectSpread({}, value), {}, {\n          selected: _indexOf(defaultIndexes, key) !== -1\n        })),\n        selectedCount: defaultIndexes.length + 1\n      },\n      sort_on: ((_this$props$sort = this.props.sort) === null || _this$props$sort === void 0 ? void 0 : _this$props$sort.on) || 'getObjPositionInParent',\n      sort_order: ((_this$props$sort2 = this.props.sort) === null || _this$props$sort2 === void 0 ? void 0 : _this$props$sort2.order) || 'ascending',\n      isClient: false,\n      linkIntegrityBreakages: ''\n    };\n    this.filterTimeout = null;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.fetchContents();\n    this.setState({\n      isClient: true\n    });\n  }\n  async componentDidUpdate(_, prevState) {\n    if (this.state.itemsToDelete !== prevState.itemsToDelete && this.state.itemsToDelete.length > 0) {\n      this.setState({\n        linkIntegrityBreakages: await this.props.linkIntegrityCheck(_map(this.state.itemsToDelete, item => this.getFieldById(item, 'UID'))),\n        showAllItemsToDelete: this.state.itemsToDelete.length < this.deleteItemsToShowThreshold\n      });\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.clipboardRequest.loading && nextProps.clipboardRequest.loaded || this.props.deleteRequest.loading && nextProps.deleteRequest.loaded || this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      this.fetchContents(nextProps.pathname);\n    }\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      this.props.toastify.toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.messageUpdate),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 9\n        }\n      }));\n    }\n    if (this.props.pathname !== nextProps.pathname) {\n      // Refetching content to sync the current object in the toolbar\n      this.props.getContent(getBaseUrl(nextProps.pathname));\n      this.setState({\n        currentPage: 0\n      }, () => this.setState({\n        filter: ''\n      }, () => this.fetchContents(nextProps.pathname)));\n    }\n    if (this.props.searchRequest.loading && nextProps.searchRequest.loaded) {\n      this.setState({\n        items: nextProps.items\n      });\n    }\n    if (this.props.clipboardRequest.loading && nextProps.clipboardRequest.error) {\n      this.props.toastify.toast.error(__jsx(Toast, {\n        error: true,\n        title: this.props.intl.formatMessage(messages.error),\n        content: this.props.intl.formatMessage(messages.error),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 9\n        }\n      }));\n    }\n    if (this.props.clipboardRequest.loading && nextProps.clipboardRequest.loaded) {\n      this.props.toastify.toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.messagePasted),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 9\n        }\n      }));\n    }\n    if (this.props.deleteRequest.loading && nextProps.deleteRequest.error) {\n      this.props.toastify.toast.error(__jsx(Toast, {\n        error: true,\n        title: this.props.intl.formatMessage(messages.deleteError),\n        content: this.props.intl.formatMessage(messages.deleteError),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 9\n        }\n      }));\n    }\n    if (this.props.orderRequest.loading && nextProps.orderRequest.loaded) {\n      this.props.toastify.toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.messageReorder),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 9\n        }\n      }));\n    }\n  }\n\n  /**\n   * On deselect handler\n   * @method onDeselect\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onDeselect(event, {\n    value\n  }) {\n    this.setState({\n      selected: _pull(this.state.selected, value)\n    });\n  }\n\n  /**\n   * On select handler\n   * @method onSelect\n   * @param {object} event Event object\n   * @returns {undefined}\n   */\n  onSelect(event, id) {\n    if (_indexOf(this.state.selected, id) === -1) {\n      this.setState({\n        selected: _concat(this.state.selected, id)\n      });\n    } else {\n      this.setState({\n        selected: _pull(this.state.selected, id)\n      });\n    }\n  }\n\n  /**\n   * On select all handler\n   * @method onSelectAll\n   * @returns {undefined}\n   */\n  onSelectAll() {\n    this.setState({\n      selected: _map(this.state.items, item => item['@id'])\n    });\n  }\n\n  /**\n   * On select none handler\n   * @method onSelectNone\n   * @returns {undefined}\n   */\n  onSelectNone() {\n    this.setState({\n      selected: []\n    });\n  }\n\n  /**\n   * On select index\n   * @method onSelectIndex\n   * @param {object} event Event object.\n   * @param {string} value Index value.\n   * @returns {undefined}\n   */\n  onSelectIndex(event, {\n    value\n  }) {\n    let newIndex = _objectSpread(_objectSpread({}, this.state.index), {}, {\n      selectedCount: this.state.index.selectedCount + (this.state.index.values[value].selected ? -1 : 1),\n      values: _mapValues(this.state.index.values, (indexValue, indexKey) => _objectSpread(_objectSpread({}, indexValue), {}, {\n        selected: indexKey === value ? !indexValue.selected : indexValue.selected\n      }))\n    });\n    this.setState({\n      index: newIndex\n    });\n    this.props.updateColumnsContent(getBaseUrl(this.props.pathname), newIndex);\n  }\n\n  /**\n   * On change filter\n   * @method onChangeFilter\n   * @param {object} event Event object.\n   * @param {string} value Filter value.\n   * @returns {undefined}\n   */\n  onChangeFilter(event, {\n    value\n  }) {\n    const self = this;\n    clearTimeout(self.filterTimeout);\n    this.setState({\n      filter: value\n    }, () => {\n      self.filterTimeout = setTimeout(() => {\n        self.fetchContents();\n      }, 200);\n    });\n  }\n\n  /**\n   * On change selected values (Filter)\n   * @method onChangeSelected\n   * @param {object} event Event object.\n   * @param {string} value Filter value.\n   * @returns {undefined}\n   */\n  onChangeSelected(event, {\n    value\n  }) {\n    event.stopPropagation();\n    const {\n      items,\n      selected\n    } = this.state;\n    const filteredItems = _filter(selected, selectedItem => _find(items, item => item['@id'] === selectedItem).title.toLowerCase().includes(value.toLowerCase()));\n    this.setState({\n      filteredItems,\n      selectedMenuFilter: value\n    });\n  }\n\n  /**\n   * On change page\n   * @method onChangePage\n   * @param {object} event Event object.\n   * @param {string} value Page value.\n   * @returns {undefined}\n   */\n  onChangePage(event, {\n    value\n  }) {\n    this.setState({\n      currentPage: value\n    }, () => this.fetchContents());\n  }\n\n  /**\n   * On change page size\n   * @method onChangePageSize\n   * @param {object} event Event object.\n   * @param {string} value Page size value.\n   * @returns {undefined}\n   */\n  onChangePageSize(event, {\n    value\n  }) {\n    this.setState({\n      pageSize: value,\n      currentPage: 0\n    }, () => this.fetchContents());\n  }\n\n  /**\n   * On order index\n   * @method onOrderIndex\n   * @param {number} index Index\n   * @param {number} delta Delta\n   * @returns {undefined}\n   */\n  onOrderIndex(index, delta) {\n    this.setState({\n      index: _objectSpread(_objectSpread({}, this.state.index), {}, {\n        order: move(this.state.index.order, index, index + delta)\n      })\n    });\n    this.props.updateColumnsContent(getBaseUrl(this.props.pathname), this.state.index);\n  }\n\n  /**\n   * On order item\n   * @method onOrderItem\n   * @param {string} id Item id\n   * @param {number} itemIndex Item index\n   * @param {number} delta Delta\n   * @returns {undefined}\n   */\n  onOrderItem(id, itemIndex, delta, backend) {\n    if (backend) {\n      this.props.orderContent(getBaseUrl(this.props.pathname), id.replace(/^.*\\//, ''), delta);\n    } else {\n      this.setState({\n        items: move(this.state.items, itemIndex, itemIndex + delta)\n      });\n    }\n  }\n\n  /**\n   * On sort items\n   * @method onSortItems\n   * @param {object} event Event object\n   * @param {string} value Item index\n   * @returns {undefined}\n   */\n  onSortItems(event, {\n    value\n  }) {\n    const values = value.split('|');\n    this.setState({\n      sort_on: values[0],\n      sort_order: values[1]\n    });\n    this.props.sortContent(getBaseUrl(this.props.pathname), values[0], values[1]);\n  }\n\n  /**\n   * On move to top\n   * @method onMoveToTop\n   * @param {object} event Event object\n   * @param {string} value Item index\n   * @returns {undefined}\n   */\n  onMoveToTop(event, {\n    value\n  }) {\n    const id = this.state.items[value]['@id'];\n    value = this.state.currentPage * this.state.pageSize + value;\n    this.props.orderContent(getBaseUrl(this.props.pathname), id.replace(/^.*\\//, ''), -value);\n    this.setState({\n      currentPage: 0\n    }, () => this.fetchContents());\n  }\n\n  /**\n   * On move to bottom\n   * @method onMoveToBottom\n   * @param {object} event Event object\n   * @param {string} value Item index\n   * @returns {undefined}\n   */\n  onMoveToBottom(event, {\n    value\n  }) {\n    this.onOrderItem(this.state.items[value]['@id'], value, this.state.items.length - 1 - value, false);\n    this.onOrderItem(this.state.items[value]['@id'], value, this.state.items.length - 1 - value, true);\n  }\n\n  /**\n   * On delete ok\n   * @method onDeleteOk\n   * @returns {undefined}\n   */\n  onDeleteOk() {\n    this.props.deleteContent(this.state.itemsToDelete);\n    this.setState({\n      showDelete: false,\n      itemsToDelete: [],\n      selected: []\n    });\n  }\n\n  /**\n   * On delete cancel\n   * @method onDeleteCancel\n   * @returns {undefined}\n   */\n  onDeleteCancel() {\n    this.setState({\n      showDelete: false,\n      itemsToDelete: []\n    });\n  }\n\n  /**\n   * On upload ok\n   * @method onUploadOk\n   * @returns {undefined}\n   */\n  onUploadOk() {\n    this.fetchContents();\n    this.setState({\n      showUpload: false\n    });\n  }\n\n  /**\n   * On upload cancel\n   * @method onUploadCancel\n   * @returns {undefined}\n   */\n  onUploadCancel() {\n    this.setState({\n      showUpload: false\n    });\n  }\n\n  /**\n   * On rename ok\n   * @method onRenameOk\n   * @returns {undefined}\n   */\n  onRenameOk() {\n    this.setState({\n      showRename: false,\n      selected: []\n    });\n  }\n\n  /**\n   * On rename cancel\n   * @method onRenameCancel\n   * @returns {undefined}\n   */\n  onRenameCancel() {\n    this.setState({\n      showRename: false\n    });\n  }\n\n  /**\n   * On tags ok\n   * @method onTagsOk\n   * @returns {undefined}\n   */\n  onTagsOk() {\n    this.setState({\n      showTags: false,\n      selected: []\n    });\n  }\n\n  /**\n   * On tags cancel\n   * @method onTagsCancel\n   * @returns {undefined}\n   */\n  onTagsCancel() {\n    this.setState({\n      showTags: false\n    });\n  }\n\n  /**\n   * On properties ok\n   * @method onPropertiesOk\n   * @returns {undefined}\n   */\n  onPropertiesOk() {\n    this.setState({\n      showProperties: false,\n      selected: []\n    });\n  }\n\n  /**\n   * On properties cancel\n   * @method onPropertiesCancel\n   * @returns {undefined}\n   */\n  onPropertiesCancel() {\n    this.setState({\n      showProperties: false\n    });\n  }\n\n  /**\n   * On workflow ok\n   * @method onWorkflowOk\n   * @returns {undefined}\n   */\n  onWorkflowOk() {\n    this.fetchContents();\n    this.setState({\n      showWorkflow: false,\n      selected: []\n    });\n    this.props.toastify.toast.success(__jsx(Toast, {\n      success: true,\n      title: this.props.intl.formatMessage(messages.success),\n      content: this.props.intl.formatMessage(messages.messageWorkflowUpdate),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  /**\n   * On workflow cancel\n   * @method onWorkflowCancel\n   * @returns {undefined}\n   */\n  onWorkflowCancel() {\n    this.setState({\n      showWorkflow: false\n    });\n  }\n\n  /**\n   * Get field by id\n   * @method getFieldById\n   * @param {string} id Id of object\n   * @param {string} field Field of object\n   * @returns {string} Field of object\n   */\n  getFieldById(id, field) {\n    const item = _find(this.state.items, {\n      '@id': id\n    });\n    return item ? item[field] : '';\n  }\n\n  /**\n   * Fetch contents handler\n   * @method fetchContents\n   * @param {string} pathname Pathname to fetch contents.\n   * @returns {undefined}\n   */\n  fetchContents(pathname) {\n    if (this.state.pageSize === this.props.intl.formatMessage(messages.all)) {\n      //'All'\n      this.props.searchContent(getBaseUrl(pathname || this.props.pathname), _objectSpread({\n        'path.depth': 1,\n        sort_on: this.state.sort_on,\n        sort_order: this.state.sort_order,\n        metadata_fields: '_all',\n        b_size: 100000000\n      }, this.state.filter && {\n        SearchableText: `${this.state.filter}*`\n      }));\n    } else {\n      this.props.searchContent(getBaseUrl(pathname || this.props.pathname), _objectSpread(_objectSpread({\n        'path.depth': 1,\n        sort_on: this.state.sort_on,\n        sort_order: this.state.sort_order,\n        metadata_fields: '_all'\n      }, this.state.filter && {\n        SearchableText: `${this.state.filter}*`\n      }), {}, {\n        b_size: this.state.pageSize,\n        b_start: this.state.currentPage * this.state.pageSize\n      }));\n    }\n  }\n\n  /**\n   * Cut handler\n   * @method cut\n   * @param {Object} event Event object.\n   * @param {string} value Value of the event.\n   * @returns {undefined}\n   */\n  cut(event, {\n    value\n  }) {\n    this.props.cut(value ? [value] : this.state.selected);\n    this.onSelectNone();\n    this.props.toastify.toast.success(__jsx(Toast, {\n      success: true,\n      title: this.props.intl.formatMessage(messages.success),\n      content: this.props.intl.formatMessage(messages.messageCut),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1037,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  /**\n   * Copy handler\n   * @method copy\n   * @param {Object} event Event object.\n   * @param {string} value Value of the event.\n   * @returns {undefined}\n   */\n  copy(event, {\n    value\n  }) {\n    this.props.copy(value ? [value] : this.state.selected);\n    this.onSelectNone();\n    this.props.toastify.toast.success(__jsx(Toast, {\n      success: true,\n      title: this.props.intl.formatMessage(messages.success),\n      content: this.props.intl.formatMessage(messages.messageCopied),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1056,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  /**\n   * Delete handler\n   * @method delete\n   * @param {Object} event Event object.\n   * @param {string} value Value of the event.\n   * @returns {undefined}\n   */\n  delete(event, {\n    value\n  }) {\n    this.setState({\n      showDelete: true,\n      itemsToDelete: value ? [value] : this.state.selected\n    });\n  }\n\n  /**\n   * Upload handler\n   * @method upload\n   * @returns {undefined}\n   */\n  upload() {\n    this.setState({\n      showUpload: true\n    });\n  }\n\n  /**\n   * Rename handler\n   * @method rename\n   * @returns {undefined}\n   */\n  rename() {\n    this.setState({\n      showRename: true\n    });\n  }\n\n  /**\n   * Tags handler\n   * @method tags\n   * @returns {undefined}\n   */\n  tags() {\n    this.setState({\n      showTags: true\n    });\n  }\n\n  /**\n   * Properties handler\n   * @method properties\n   * @returns {undefined}\n   */\n  properties() {\n    this.setState({\n      showProperties: true\n    });\n  }\n\n  /**\n   * Workflow handler\n   * @method workflow\n   * @returns {undefined}\n   */\n  workflow() {\n    this.setState({\n      showWorkflow: true\n    });\n  }\n\n  /**\n   * Paste handler\n   * @method paste\n   * @returns {undefined}\n   */\n  paste() {\n    if (this.props.action === 'copy') {\n      this.props.copyContent(this.props.source, getBaseUrl(this.props.pathname));\n    }\n    if (this.props.action === 'cut') {\n      this.props.moveContent(this.props.source, getBaseUrl(this.props.pathname));\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _this$props$clipboard, _this$props$clipboard2, _this$props$deleteReq, _this$props$deleteReq2, _this$props$updateReq, _this$props$updateReq2, _this$props$orderRequ, _this$props$orderRequ2, _this$props$searchReq, _this$props$searchReq2, _this$props$objectAct;\n    const selected = this.state.selected.length > 0;\n    const filteredItems = this.state.filteredItems || this.state.selected;\n    const path = getBaseUrl(this.props.pathname);\n    const folderContentsAction = _find(this.props.objectActions, {\n      id: 'folderContents'\n    });\n    const loading = ((_this$props$clipboard = this.props.clipboardRequest) === null || _this$props$clipboard === void 0 ? void 0 : _this$props$clipboard.loading) && !((_this$props$clipboard2 = this.props.clipboardRequest) !== null && _this$props$clipboard2 !== void 0 && _this$props$clipboard2.error) || ((_this$props$deleteReq = this.props.deleteRequest) === null || _this$props$deleteReq === void 0 ? void 0 : _this$props$deleteReq.loading) && !((_this$props$deleteReq2 = this.props.deleteRequest) !== null && _this$props$deleteReq2 !== void 0 && _this$props$deleteReq2.error) || ((_this$props$updateReq = this.props.updateRequest) === null || _this$props$updateReq === void 0 ? void 0 : _this$props$updateReq.loading) && !((_this$props$updateReq2 = this.props.updateRequest) !== null && _this$props$updateReq2 !== void 0 && _this$props$updateReq2.error) || ((_this$props$orderRequ = this.props.orderRequest) === null || _this$props$orderRequ === void 0 ? void 0 : _this$props$orderRequ.loading) && !((_this$props$orderRequ2 = this.props.orderRequest) !== null && _this$props$orderRequ2 !== void 0 && _this$props$orderRequ2.error) || ((_this$props$searchReq = this.props.searchRequest) === null || _this$props$searchReq === void 0 ? void 0 : _this$props$searchReq.loading) && !((_this$props$searchReq2 = this.props.searchRequest) !== null && _this$props$searchReq2 !== void 0 && _this$props$searchReq2.error);\n    return this.props.token && ((_this$props$objectAct = this.props.objectActions) === null || _this$props$objectAct === void 0 ? void 0 : _this$props$objectAct.length) > 0 ? __jsx(React.Fragment, null, folderContentsAction ? __jsx(Container, {\n      id: \"page-contents\",\n      className: \"folder-contents\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1176,\n        columnNumber: 11\n      }\n    }, __jsx(Dimmer.Dimmable, {\n      as: \"div\",\n      blurring: true,\n      dimmed: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1177,\n        columnNumber: 13\n      }\n    }, __jsx(Dimmer, {\n      active: loading,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1178,\n        columnNumber: 15\n      }\n    }, __jsx(Loader, {\n      indeterminate: true,\n      size: \"massive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1179,\n        columnNumber: 17\n      }\n    }, this.props.intl.formatMessage(messages.loading))), __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.contents),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1184,\n        columnNumber: 15\n      }\n    }), __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1187,\n        columnNumber: 15\n      }\n    }, __jsx(\"article\", {\n      id: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1188,\n        columnNumber: 17\n      }\n    }, __jsx(Confirm, {\n      open: this.state.showDelete,\n      confirmButton: \"Delete\",\n      header: this.props.intl.formatMessage(messages.deleteConfirm),\n      content: __jsx(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1196,\n          columnNumber: 23\n        }\n      }, __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1197,\n          columnNumber: 25\n        }\n      }, this.props.intl.formatMessage(messages.deleteItemCountMessage) + ` ${this.state.itemsToDelete.length}`), __jsx(\"ul\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1202,\n          columnNumber: 25\n        }\n      }, _map(this.state.showAllItemsToDelete ? this.state.itemsToDelete : this.state.itemsToDelete.slice(0, this.deleteItemsToShowThreshold), item => __jsx(\"li\", {\n        key: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1211,\n          columnNumber: 31\n        }\n      }, this.getFieldById(item, 'title')))), !this.state.showAllItemsToDelete && __jsx(Button, {\n        onClick: () => this.setState({\n          showAllItemsToDelete: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1218,\n          columnNumber: 27\n        }\n      }, \"Show all items\"), this.state.linkIntegrityBreakages.length > 0 ? __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1229,\n          columnNumber: 27\n        }\n      }, __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1230,\n          columnNumber: 29\n        }\n      }, this.props.intl.formatMessage(messages.linkIntegrityMessageHeader)), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1235,\n          columnNumber: 29\n        }\n      }, this.props.intl.formatMessage(messages.linkIntegrityMessageBody)), __jsx(\"ul\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1240,\n          columnNumber: 29\n        }\n      }, _map(this.state.linkIntegrityBreakages, item => __jsx(\"li\", {\n        key: item['@id'],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1244,\n          columnNumber: 35\n        }\n      }, __jsx(\"a\", {\n        href: item['@id'],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1245,\n          columnNumber: 37\n        }\n      }, item.title), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1246,\n          columnNumber: 37\n        }\n      }, this.props.intl.formatMessage(messages.linkIntegrityMessageExtra)), __jsx(\"ul\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1251,\n          columnNumber: 37\n        }\n      }, _map(item.breaches, breach => __jsx(\"li\", {\n        key: breach['@id'],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1253,\n          columnNumber: 41\n        }\n      }, __jsx(\"a\", {\n        href: breach['@id'],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1254,\n          columnNumber: 43\n        }\n      }, breach.title)))))))) : __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1266,\n          columnNumber: 27\n        }\n      })),\n      onCancel: this.onDeleteCancel,\n      onConfirm: this.onDeleteOk,\n      size: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1189,\n        columnNumber: 19\n      }\n    }), __jsx(ContentsUploadModal, {\n      open: this.state.showUpload,\n      onCancel: this.onUploadCancel,\n      onOk: this.onUploadOk,\n      pathname: getBaseUrl(this.props.pathname),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1274,\n        columnNumber: 19\n      }\n    }), __jsx(ContentsRenameModal, {\n      open: this.state.showRename,\n      onCancel: this.onRenameCancel,\n      onOk: this.onRenameOk,\n      items: _map(this.state.selected, item => ({\n        url: item,\n        title: this.getFieldById(item, 'title'),\n        id: this.getFieldById(item, 'id')\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1280,\n        columnNumber: 19\n      }\n    }), __jsx(ContentsTagsModal, {\n      open: this.state.showTags,\n      onCancel: this.onTagsCancel,\n      onOk: this.onTagsOk,\n      items: _map(this.state.selected, item => ({\n        url: item,\n        subjects: this.getFieldById(item, 'Subject')\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1290,\n        columnNumber: 19\n      }\n    }), __jsx(ContentsPropertiesModal, {\n      open: this.state.showProperties,\n      onCancel: this.onPropertiesCancel,\n      onOk: this.onPropertiesOk,\n      items: this.state.selected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1299,\n        columnNumber: 19\n      }\n    }), this.state.showWorkflow && __jsx(ContentsWorkflowModal, {\n      open: this.state.showWorkflow,\n      onCancel: this.onWorkflowCancel,\n      onOk: this.onWorkflowOk,\n      items: this.state.selected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1306,\n        columnNumber: 21\n      }\n    }), __jsx(\"section\", {\n      id: \"content-core\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1313,\n        columnNumber: 19\n      }\n    }, __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1314,\n        columnNumber: 21\n      }\n    }, __jsx(Menu, {\n      secondary: true,\n      attached: true,\n      className: \"top-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1315,\n        columnNumber: 23\n      }\n    }, __jsx(Menu.Menu, {\n      className: \"top-menu-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1316,\n        columnNumber: 25\n      }\n    }, __jsx(Popup, {\n      trigger: __jsx(Menu.Item, {\n        icon: true,\n        as: Button,\n        onClick: this.upload,\n        className: \"upload\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1319,\n          columnNumber: 31\n        }\n      }, __jsx(Icon, {\n        name: uploadSVG,\n        color: \"#007eb1\",\n        size: \"24px\",\n        className: \"upload\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1325,\n          columnNumber: 33\n        }\n      })),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.upload),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1317,\n        columnNumber: 27\n      }\n    })), __jsx(Menu.Menu, {\n      className: \"top-menu-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1340,\n        columnNumber: 25\n      }\n    }, __jsx(Popup, {\n      trigger: __jsx(Menu.Item, {\n        icon: true,\n        as: Button,\n        onClick: this.rename,\n        disabled: !selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1343,\n          columnNumber: 31\n        }\n      }, __jsx(Icon, {\n        name: renameSVG,\n        color: selected ? '#826a6a' : 'grey',\n        size: \"24px\",\n        className: \"rename\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1349,\n          columnNumber: 33\n        }\n      })),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.rename),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1341,\n        columnNumber: 27\n      }\n    }), __jsx(Popup, {\n      trigger: __jsx(Menu.Item, {\n        icon: true,\n        as: Button,\n        onClick: this.workflow,\n        disabled: !selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1365,\n          columnNumber: 31\n        }\n      }, __jsx(Icon, {\n        name: semaphoreSVG,\n        color: selected ? '#826a6a' : 'grey',\n        size: \"24px\",\n        className: \"semaphore\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1371,\n          columnNumber: 33\n        }\n      })),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.state),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1363,\n        columnNumber: 27\n      }\n    }), __jsx(Popup, {\n      trigger: __jsx(Menu.Item, {\n        icon: true,\n        as: Button,\n        onClick: this.tags,\n        disabled: !selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1387,\n          columnNumber: 31\n        }\n      }, __jsx(Icon, {\n        name: tagSVG,\n        color: selected ? '#826a6a' : 'grey',\n        size: \"24px\",\n        className: \"tag\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1393,\n          columnNumber: 33\n        }\n      })),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.tags),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1385,\n        columnNumber: 27\n      }\n    }), __jsx(Popup, {\n      trigger: __jsx(Menu.Item, {\n        icon: true,\n        as: Button,\n        onClick: this.properties,\n        disabled: !selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1410,\n          columnNumber: 31\n        }\n      }, __jsx(Icon, {\n        name: propertiesSVG,\n        color: selected ? '#826a6a' : 'grey',\n        size: \"24px\",\n        className: \"properties\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1416,\n          columnNumber: 33\n        }\n      })),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.properties),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1408,\n        columnNumber: 27\n      }\n    })), __jsx(Menu.Menu, {\n      className: \"top-menu-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1431,\n        columnNumber: 25\n      }\n    }, __jsx(Popup, {\n      trigger: __jsx(Menu.Item, {\n        icon: true,\n        as: Button,\n        onClick: this.cut,\n        disabled: !selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1434,\n          columnNumber: 31\n        }\n      }, __jsx(Icon, {\n        name: cutSVG,\n        color: selected ? '#826a6a' : 'grey',\n        size: \"24px\",\n        className: \"cut\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1440,\n          columnNumber: 33\n        }\n      })),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.cut),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1432,\n        columnNumber: 27\n      }\n    }), __jsx(Popup, {\n      trigger: __jsx(Menu.Item, {\n        icon: true,\n        as: Button,\n        onClick: this.copy,\n        disabled: !selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1456,\n          columnNumber: 31\n        }\n      }, __jsx(Icon, {\n        name: copySVG,\n        color: selected ? '#826a6a' : 'grey',\n        size: \"24px\",\n        className: \"copy\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1462,\n          columnNumber: 33\n        }\n      })),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.copy),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1454,\n        columnNumber: 27\n      }\n    }), __jsx(Popup, {\n      trigger: __jsx(Menu.Item, {\n        icon: true,\n        as: Button,\n        onClick: this.paste,\n        disabled: !this.props.action,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1479,\n          columnNumber: 31\n        }\n      }, __jsx(Icon, {\n        name: pasteSVG,\n        color: selected ? '#826a6a' : 'grey',\n        size: \"24px\",\n        className: \"paste\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1485,\n          columnNumber: 33\n        }\n      })),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.paste),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1477,\n        columnNumber: 27\n      }\n    }), __jsx(Popup, {\n      trigger: __jsx(Menu.Item, {\n        icon: true,\n        as: Button,\n        onClick: this.delete,\n        disabled: !selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1502,\n          columnNumber: 31\n        }\n      }, __jsx(Icon, {\n        name: deleteSVG,\n        color: selected ? '#e40166' : 'grey',\n        size: \"24px\",\n        className: \"delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1508,\n          columnNumber: 33\n        }\n      })),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.delete),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1500,\n        columnNumber: 27\n      }\n    })), __jsx(Menu.Menu, {\n      position: \"right\",\n      className: \"top-menu-searchbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1523,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"ui right aligned category search item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1527,\n        columnNumber: 27\n      }\n    }, __jsx(Input, {\n      type: \"text\",\n      transparent: true,\n      placeholder: this.props.intl.formatMessage(messages.filter),\n      size: \"small\",\n      value: this.state.filter,\n      onChange: this.onChangeFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1528,\n        columnNumber: 29\n      }\n    }), this.state.filter && __jsx(Button, {\n      className: \"icon icon-container\",\n      onClick: () => {\n        this.onChangeFilter('', {\n          value: ''\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1539,\n        columnNumber: 31\n      }\n    }, __jsx(Icon, {\n      name: clearSVG,\n      size: \"30px\",\n      color: \"#e40166\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1545,\n        columnNumber: 33\n      }\n    })), __jsx(Icon, {\n      name: zoomSVG,\n      size: \"30px\",\n      color: \"#007eb1\",\n      className: \"zoom\",\n      style: {\n        flexShrink: '0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1552,\n        columnNumber: 29\n      }\n    }), __jsx(\"div\", {\n      className: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1559,\n        columnNumber: 29\n      }\n    })))), __jsx(Segment, {\n      secondary: true,\n      attached: true,\n      className: \"contents-breadcrumbs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1563,\n        columnNumber: 23\n      }\n    }, __jsx(ContentsBreadcrumbs, {\n      items: this.props.breadcrumbs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1568,\n        columnNumber: 25\n      }\n    }), __jsx(Dropdown, {\n      item: true,\n      upward: false,\n      icon: __jsx(Icon, {\n        name: moreSVG,\n        size: \"24px\",\n        color: \"#826a6a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1573,\n          columnNumber: 29\n        }\n      }),\n      className: \"right floating selectIndex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1569,\n        columnNumber: 25\n      }\n    }, __jsx(Dropdown.Menu, {\n      className: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1577,\n        columnNumber: 27\n      }\n    }, __jsx(Dropdown.Header, {\n      content: this.props.intl.formatMessage(messages.selectColumns),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1578,\n        columnNumber: 29\n      }\n    }), __jsx(Dropdown.Menu, {\n      scrolling: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1583,\n        columnNumber: 29\n      }\n    }, _map(_filter(this.state.index.order, index => index !== 'sortable_title'), index => __jsx(Dropdown.Item, {\n      key: index,\n      value: index,\n      onClick: this.onSelectIndex,\n      className: \"iconAlign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1590,\n        columnNumber: 35\n      }\n    }, this.state.index.values[index].selected ? __jsx(Icon, {\n      name: checkboxCheckedSVG,\n      size: \"24px\",\n      color: \"#007eb1\",\n      className: this.state.index.values[index].label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1597,\n        columnNumber: 39\n      }\n    }) : __jsx(Icon, {\n      name: checkboxUncheckedSVG,\n      className: this.state.index.values[index].label,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1606,\n        columnNumber: 39\n      }\n    }), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1614,\n        columnNumber: 37\n      }\n    }, ' ', this.props.intl.formatMessage({\n      id: this.state.index.values[index].label,\n      defaultMessage: this.state.index.values[index].label\n    })))))))), __jsx(\"div\", {\n      className: \"contents-table-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1631,\n        columnNumber: 23\n      }\n    }, __jsx(Table, {\n      selectable: true,\n      compact: true,\n      singleLine: true,\n      attached: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1632,\n        columnNumber: 25\n      }\n    }, __jsx(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1633,\n        columnNumber: 27\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1634,\n        columnNumber: 29\n      }\n    }, __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1635,\n        columnNumber: 31\n      }\n    }, __jsx(Popup, {\n      menu: true,\n      position: \"bottom left\",\n      flowing: true,\n      basic: true,\n      on: \"click\",\n      popper: {\n        className: 'dropdown-popup'\n      },\n      trigger: __jsx(Icon, {\n        name: configurationSVG,\n        size: \"24px\",\n        color: \"#826a6a\",\n        className: \"dropdown-popup-trigger configuration-svg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1646,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1636,\n        columnNumber: 33\n      }\n    }, __jsx(Menu, {\n      vertical: true,\n      borderless: true,\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1654,\n        columnNumber: 35\n      }\n    }, __jsx(Menu.Header, {\n      content: this.props.intl.formatMessage(messages.rearrangeBy),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1655,\n        columnNumber: 37\n      }\n    }), _map(['id', 'sortable_title', 'EffectiveDate', 'CreationDate', 'ModificationDate', 'portal_type'], index => __jsx(Dropdown, {\n      key: index,\n      item: true,\n      simple: true,\n      className: `sort_${index} icon-align`,\n      icon: __jsx(Icon, {\n        name: downKeySVG,\n        size: \"24px\",\n        className: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1676,\n          columnNumber: 45\n        }\n      }),\n      text: this.props.intl.formatMessage({\n        id: Indexes[index].label\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1670,\n        columnNumber: 41\n      }\n    }, __jsx(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1686,\n        columnNumber: 43\n      }\n    }, __jsx(Dropdown.Item, {\n      onClick: this.onSortItems,\n      value: `${Indexes[index].sort_on}|ascending`,\n      className: `sort_${Indexes[index].sort_on}_ascending icon-align`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1687,\n        columnNumber: 45\n      }\n    }, __jsx(Icon, {\n      name: sortDownSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1692,\n        columnNumber: 47\n      }\n    }), ' ', __jsx(FormattedMessage, {\n      id: \"Ascending\",\n      defaultMessage: \"Ascending\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1696,\n        columnNumber: 47\n      }\n    })), __jsx(Dropdown.Item, {\n      onClick: this.onSortItems,\n      value: `${Indexes[index].sort_on}|descending`,\n      className: `sort_${Indexes[index].sort_on}_descending icon-align`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1701,\n        columnNumber: 45\n      }\n    }, __jsx(Icon, {\n      name: sortUpSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1706,\n        columnNumber: 47\n      }\n    }), ' ', __jsx(FormattedMessage, {\n      id: \"Descending\",\n      defaultMessage: \"Descending\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1710,\n        columnNumber: 47\n      }\n    })))))))), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1722,\n        columnNumber: 31\n      }\n    }, __jsx(Popup, {\n      menu: true,\n      position: \"bottom left\",\n      flowing: true,\n      basic: true,\n      on: \"click\",\n      popper: {\n        className: 'dropdown-popup'\n      },\n      trigger: __jsx(Icon, {\n        name: this.state.selected.length === 0 ? checkboxUncheckedSVG : this.state.selected.length === this.state.items.length ? checkboxCheckedSVG : checkboxIndeterminateSVG,\n        color: this.state.selected.length > 0 ? '#007eb1' : '#826a6a',\n        className: \"dropdown-popup-trigger\",\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1733,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1723,\n        columnNumber: 33\n      }\n    }, __jsx(Menu, {\n      vertical: true,\n      borderless: true,\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1752,\n        columnNumber: 35\n      }\n    }, __jsx(Menu.Header, {\n      content: this.props.intl.formatMessage(messages.select),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1753,\n        columnNumber: 37\n      }\n    }), __jsx(Menu.Item, {\n      onClick: this.onSelectAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1758,\n        columnNumber: 37\n      }\n    }, __jsx(Icon, {\n      name: checkboxCheckedSVG,\n      color: \"#007eb1\",\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1759,\n        columnNumber: 39\n      }\n    }), ' ', __jsx(FormattedMessage, {\n      id: \"All\",\n      defaultMessage: \"All\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1764,\n        columnNumber: 39\n      }\n    })), __jsx(Menu.Item, {\n      onClick: this.onSelectNone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1769,\n        columnNumber: 37\n      }\n    }, __jsx(Icon, {\n      name: checkboxUncheckedSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1770,\n        columnNumber: 39\n      }\n    }), ' ', __jsx(FormattedMessage, {\n      id: \"None\",\n      defaultMessage: \"None\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1774,\n        columnNumber: 39\n      }\n    })), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1779,\n        columnNumber: 37\n      }\n    }), __jsx(Menu.Header, {\n      content: this.props.intl.formatMessage(messages.selected, {\n        count: this.state.selected.length\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1780,\n        columnNumber: 37\n      }\n    }), __jsx(Input, {\n      icon: __jsx(Icon, {\n        name: zoomSVG,\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1787,\n          columnNumber: 45\n        }\n      }),\n      iconPosition: \"left\",\n      className: \"item search\",\n      placeholder: this.props.intl.formatMessage(messages.filter),\n      value: this.state.selectedMenuFilter || '',\n      onChange: this.onChangeSelected,\n      onClick: e => {\n        e.preventDefault();\n        e.stopPropagation();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1786,\n        columnNumber: 37\n      }\n    }), __jsx(Menu.Menu, {\n      scrolling: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1802,\n        columnNumber: 37\n      }\n    }, _map(filteredItems, item => __jsx(Menu.Item, {\n      key: item,\n      value: item,\n      onClick: this.onDeselect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1804,\n        columnNumber: 41\n      }\n    }, __jsx(Icon, {\n      name: deleteSVG,\n      color: \"#e40166\",\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1809,\n        columnNumber: 43\n      }\n    }), ' ', this.getFieldById(item, 'title'))))))), __jsx(Table.HeaderCell, {\n      width: Math.ceil(16 / this.state.index.selectedCount),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1821,\n        columnNumber: 31\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Title\",\n      defaultMessage: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1826,\n        columnNumber: 33\n      }\n    })), _map(this.state.index.order, (index, order) => this.state.index.values[index].selected && __jsx(ContentsIndexHeader, {\n      key: index,\n      width: Math.ceil(16 / this.state.index.selectedCount),\n      label: this.state.index.values[index].label,\n      order: order,\n      onOrderIndex: this.onOrderIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1835,\n        columnNumber: 37\n      }\n    })), __jsx(Table.HeaderCell, {\n      textAlign: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1848,\n        columnNumber: 31\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Actions\",\n      defaultMessage: \"Actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1849,\n        columnNumber: 33\n      }\n    })))), __jsx(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1856,\n        columnNumber: 27\n      }\n    }, this.state.items.map((item, order) => __jsx(ContentsItem, {\n      key: item['@id'],\n      item: item,\n      order: order,\n      selected: _indexOf(this.state.selected, item['@id']) !== -1,\n      onClick: this.onSelect,\n      indexes: _filter(_map(this.state.index.order, index => ({\n        id: index,\n        type: this.state.index.values[index].type\n      })), index => this.state.index.values[index.id].selected),\n      onCut: this.cut,\n      onCopy: this.copy,\n      onDelete: this.delete,\n      onOrderItem: this.onOrderItem,\n      onMoveToTop: this.onMoveToTop,\n      onMoveToBottom: this.onMoveToBottom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1858,\n        columnNumber: 31\n      }\n    }))))), __jsx(\"div\", {\n      className: \"contents-pagination\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1887,\n        columnNumber: 23\n      }\n    }, __jsx(Pagination, {\n      current: this.state.currentPage,\n      total: Math.ceil(this.props.total / this.state.pageSize),\n      pageSize: this.state.pageSize,\n      pageSizes: [50, this.props.intl.formatMessage(messages.all)],\n      onChangePage: this.onChangePage,\n      onChangePageSize: this.onChangePageSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1888,\n        columnNumber: 25\n      }\n    })))))), this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('toolbar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1907,\n        columnNumber: 17\n      }\n    }, __jsx(Toolbar, {\n      pathname: this.props.pathname,\n      inner: __jsx(Link, {\n        to: `${path}`,\n        \"aria-label\": this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1911,\n          columnNumber: 23\n        }\n      }, __jsx(Icon, {\n        name: backSVG,\n        className: \"contents circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1917,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1908,\n        columnNumber: 19\n      }\n    })))) : __jsx(Unauthorized, {\n      staticContext: this.props.staticContext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1931,\n        columnNumber: 11\n      }\n    })) : __jsx(Unauthorized, {\n      staticContext: this.props.staticContext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1935,\n        columnNumber: 7\n      }\n    });\n  }\n}\n_defineProperty(Contents, \"propTypes\", {\n  action: PropTypes.string,\n  source: PropTypes.arrayOf(PropTypes.string),\n  searchContent: PropTypes.func.isRequired,\n  cut: PropTypes.func.isRequired,\n  copy: PropTypes.func.isRequired,\n  copyContent: PropTypes.func.isRequired,\n  deleteContent: PropTypes.func.isRequired,\n  moveContent: PropTypes.func.isRequired,\n  orderContent: PropTypes.func.isRequired,\n  sortContent: PropTypes.func.isRequired,\n  updateColumnsContent: PropTypes.func.isRequired,\n  linkIntegrityCheck: PropTypes.func.isRequired,\n  clipboardRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  deleteRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  updateRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  searchRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    '@id': PropTypes.string,\n    '@type': PropTypes.string,\n    title: PropTypes.string,\n    description: PropTypes.string\n  })),\n  breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    url: PropTypes.string\n  })).isRequired,\n  total: PropTypes.number.isRequired,\n  pathname: PropTypes.string.isRequired\n});\n_defineProperty(Contents, \"defaultProps\", {\n  items: [],\n  action: null,\n  source: null,\n  index: {\n    order: _keys(Indexes),\n    values: _mapValues(Indexes, (value, key) => _objectSpread(_objectSpread({}, value), {}, {\n      selected: _indexOf(defaultIndexes, key) !== -1\n    })),\n    selectedCount: defaultIndexes.length + 1\n  }\n});\nlet dndContext;\nconst DragDropConnector = props => {\n  const {\n    DragDropContext\n  } = props.reactDnd;\n  const HTML5Backend = props.reactDndHtml5Backend.default;\n  const DndConnectedContents = React.useMemo(() => {\n    if (!dndContext) {\n      dndContext = DragDropContext(HTML5Backend);\n    }\n    return dndContext(Contents);\n  }, [DragDropContext, HTML5Backend]);\n  return __jsx(DndConnectedContents, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1953,\n      columnNumber: 10\n    }\n  }));\n};\nexport const __test__ = compose(injectIntl, injectLazyLibs(['toastify', 'reactDnd']), connect((store, props) => {\n  return {\n    token: store.userSession.token,\n    items: store.search.items,\n    sort: store.content.update.sort,\n    index: store.content.updatecolumns.idx,\n    breadcrumbs: store.breadcrumbs.items,\n    total: store.search.total,\n    searchRequest: {\n      loading: store.search.loading,\n      loaded: store.search.loaded\n    },\n    pathname: props.location.pathname,\n    action: store.clipboard.action,\n    source: store.clipboard.source,\n    clipboardRequest: store.clipboard.request,\n    deleteRequest: store.content.delete,\n    updateRequest: store.content.update,\n    objectActions: store.actions.actions.object,\n    orderRequest: store.content.order\n  };\n}, {\n  searchContent,\n  cut,\n  copy,\n  copyContent,\n  deleteContent,\n  listActions,\n  moveContent,\n  orderContent,\n  sortContent,\n  updateColumnsContent,\n  linkIntegrityCheck,\n  getContent\n}))(Contents);\nexport default compose(injectIntl, connect((store, props) => {\n  return {\n    token: store.userSession.token,\n    items: store.search.items,\n    sort: store.content.update.sort,\n    index: store.content.updatecolumns.idx,\n    breadcrumbs: store.breadcrumbs.items,\n    total: store.search.total,\n    searchRequest: {\n      loading: store.search.loading,\n      loaded: store.search.loaded\n    },\n    pathname: props.location.pathname,\n    action: store.clipboard.action,\n    source: store.clipboard.source,\n    clipboardRequest: store.clipboard.request,\n    deleteRequest: store.content.delete,\n    updateRequest: store.content.update,\n    objectActions: store.actions.actions.object,\n    orderRequest: store.content.order\n  };\n}, {\n  searchContent,\n  cut,\n  copy,\n  copyContent,\n  deleteContent,\n  listActions,\n  moveContent,\n  orderContent,\n  sortContent,\n  updateColumnsContent,\n  linkIntegrityCheck,\n  getContent\n}), asyncConnect([{\n  key: 'actions',\n  // Dispatch async/await to make the operation syncronous, otherwise it returns\n  // before the promise is resolved\n  promise: async ({\n    location,\n    store: {\n      dispatch\n    }\n  }) => await dispatch(listActions(getBaseUrl(location.pathname)))\n}]), injectLazyLibs(['toastify', 'reactDnd', 'reactDndHtml5Backend']))(DragDropConnector);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Portal","Link","Button","Confirm","Container","Divider","Dropdown","Menu","Input","Segment","Table","Loader","Dimmer","move","FormattedMessage","defineMessages","injectIntl","asyncConnect","searchContent","cut","copy","copyContent","deleteContent","listActions","moveContent","orderContent","sortContent","updateColumnsContent","linkIntegrityCheck","getContent","Indexes","defaultIndexes","ContentsBreadcrumbs","ContentsIndexHeader","ContentsItem","ContentsRenameModal","ContentsUploadModal","ContentsWorkflowModal","ContentsTagsModal","ContentsPropertiesModal","Pagination","Popup","Toolbar","Toast","Icon","Unauthorized","Helmet","getBaseUrl","injectLazyLibs","backSVG","cutSVG","deleteSVG","copySVG","tagSVG","renameSVG","semaphoreSVG","uploadSVG","propertiesSVG","pasteSVG","zoomSVG","checkboxUncheckedSVG","checkboxCheckedSVG","checkboxIndeterminateSVG","configurationSVG","sortDownSVG","sortUpSVG","downKeySVG","moreSVG","clearSVG","messages","back","contents","error","delete","deleteConfirm","deleteError","loading","home","filter","messageCopied","messageCut","messageUpdate","messageReorder","messagePasted","messageWorkflowUpdate","paste","properties","rearrangeBy","rename","select","selected","selectColumns","sort","state","tags","upload","success","publicationDate","createdOn","expirationDate","id","uid","reviewState","folder","excludedFromNavigation","objectSize","lastCommentedDate","totalComments","creator","endDate","startDate","all","linkIntegrityMessageHeader","linkIntegrityMessageBody","linkIntegrityMessageExtra","deleteItemCountMessage","deleteItemMessage","Contents","constructor","props","onDeselect","bind","onSelect","onSelectAll","onSelectIndex","onSelectNone","onDeleteOk","onDeleteCancel","onUploadOk","onUploadCancel","onRenameOk","onRenameCancel","onTagsOk","onTagsCancel","onPropertiesOk","onPropertiesCancel","onWorkflowOk","onWorkflowCancel","onChangeFilter","onChangePage","onChangePageSize","onOrderIndex","onOrderItem","onSortItems","onMoveToTop","onChangeSelected","onMoveToBottom","workflow","fetchContents","orderTimeout","deleteItemsToShowThreshold","showDelete","showUpload","showRename","showTags","showProperties","showWorkflow","itemsToDelete","showAllItemsToDelete","items","currentPage","pageSize","index","order","values","value","key","selectedCount","length","sort_on","on","sort_order","isClient","linkIntegrityBreakages","filterTimeout","componentDidMount","setState","componentDidUpdate","_","prevState","item","getFieldById","UNSAFE_componentWillReceiveProps","nextProps","clipboardRequest","loaded","deleteRequest","updateRequest","pathname","toastify","toast","intl","formatMessage","searchRequest","orderRequest","event","newIndex","indexValue","indexKey","self","clearTimeout","setTimeout","stopPropagation","filteredItems","selectedItem","title","toLowerCase","includes","selectedMenuFilter","delta","itemIndex","backend","replace","split","field","metadata_fields","b_size","SearchableText","b_start","action","source","render","path","folderContentsAction","objectActions","token","slice","breaches","breach","url","subjects","flexShrink","breadcrumbs","label","defaultMessage","className","count","e","preventDefault","Math","ceil","map","type","total","document","getElementById","staticContext","string","arrayOf","func","isRequired","shape","bool","description","number","dndContext","DragDropConnector","DragDropContext","reactDnd","HTML5Backend","reactDndHtml5Backend","default","DndConnectedContents","useMemo","__test__","store","userSession","search","content","update","updatecolumns","idx","location","clipboard","request","actions","object","promise","dispatch"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Contents/Contents.jsx"],"sourcesContent":["/**\n * Contents component.\n * @module components/manage/Contents/Contents\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Portal } from 'react-portal';\nimport { Link } from 'react-router-dom';\nimport {\n  Button,\n  Confirm,\n  Container,\n  Divider,\n  Dropdown,\n  Menu,\n  Input,\n  Segment,\n  Table,\n  Loader,\n  Dimmer,\n} from 'semantic-ui-react';\nimport {\n  concat,\n  filter,\n  find,\n  indexOf,\n  keys,\n  map,\n  mapValues,\n  pull,\n} from 'lodash';\nimport move from 'lodash-move';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { asyncConnect } from '@plone/volto/helpers';\n\nimport {\n  searchContent,\n  cut,\n  copy,\n  copyContent,\n  deleteContent,\n  listActions,\n  moveContent,\n  orderContent,\n  sortContent,\n  updateColumnsContent,\n  linkIntegrityCheck,\n  getContent,\n} from '@plone/volto/actions';\nimport Indexes, { defaultIndexes } from '@plone/volto/constants/Indexes';\nimport {\n  ContentsBreadcrumbs,\n  ContentsIndexHeader,\n  ContentsItem,\n  ContentsRenameModal,\n  ContentsUploadModal,\n  ContentsWorkflowModal,\n  ContentsTagsModal,\n  ContentsPropertiesModal,\n  Pagination,\n  Popup,\n  Toolbar,\n  Toast,\n  Icon,\n  Unauthorized,\n} from '@plone/volto/components';\n\nimport { Helmet, getBaseUrl } from '@plone/volto/helpers';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nimport backSVG from '@plone/volto/icons/back.svg';\nimport cutSVG from '@plone/volto/icons/cut.svg';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport copySVG from '@plone/volto/icons/copy.svg';\nimport tagSVG from '@plone/volto/icons/tag.svg';\nimport renameSVG from '@plone/volto/icons/rename.svg';\nimport semaphoreSVG from '@plone/volto/icons/semaphore.svg';\nimport uploadSVG from '@plone/volto/icons/upload.svg';\nimport propertiesSVG from '@plone/volto/icons/properties.svg';\nimport pasteSVG from '@plone/volto/icons/paste.svg';\nimport zoomSVG from '@plone/volto/icons/zoom.svg';\nimport checkboxUncheckedSVG from '@plone/volto/icons/checkbox-unchecked.svg';\nimport checkboxCheckedSVG from '@plone/volto/icons/checkbox-checked.svg';\nimport checkboxIndeterminateSVG from '@plone/volto/icons/checkbox-indeterminate.svg';\nimport configurationSVG from '@plone/volto/icons/configuration-app.svg';\nimport sortDownSVG from '@plone/volto/icons/sort-down.svg';\nimport sortUpSVG from '@plone/volto/icons/sort-up.svg';\nimport downKeySVG from '@plone/volto/icons/down-key.svg';\nimport moreSVG from '@plone/volto/icons/more.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  contents: {\n    id: 'Contents',\n    defaultMessage: 'Contents',\n  },\n  copy: {\n    id: 'Copy',\n    defaultMessage: 'Copy',\n  },\n  cut: {\n    id: 'Cut',\n    defaultMessage: 'Cut',\n  },\n  error: {\n    id: \"You can't paste this content here\",\n    defaultMessage: \"You can't paste this content here\",\n  },\n  delete: {\n    id: 'Delete',\n    defaultMessage: 'Delete',\n  },\n  deleteConfirm: {\n    id: 'Do you really want to delete the following items?',\n    defaultMessage: 'Do you really want to delete the following items?',\n  },\n  deleteError: {\n    id: 'The item could not be deleted.',\n    defaultMessage: 'The item could not be deleted.',\n  },\n  loading: {\n    id: 'loading',\n    defaultMessage: 'Loading',\n  },\n  home: {\n    id: 'Home',\n    defaultMessage: 'Home',\n  },\n  filter: {\n    id: 'Filter…',\n    defaultMessage: 'Filter…',\n  },\n  messageCopied: {\n    id: 'Item(s) copied.',\n    defaultMessage: 'Item(s) copied.',\n  },\n  messageCut: {\n    id: 'Item(s) cut.',\n    defaultMessage: 'Item(s) cut.',\n  },\n  messageUpdate: {\n    id: 'Item(s) has been updated.',\n    defaultMessage: 'Item(s) has been updated.',\n  },\n  messageReorder: {\n    id: 'Item succesfully moved.',\n    defaultMessage: 'Item successfully moved.',\n  },\n  messagePasted: {\n    id: 'Item(s) pasted.',\n    defaultMessage: 'Item(s) pasted.',\n  },\n  messageWorkflowUpdate: {\n    id: 'Item(s) state has been updated.',\n    defaultMessage: 'Item(s) state has been updated.',\n  },\n  paste: {\n    id: 'Paste',\n    defaultMessage: 'Paste',\n  },\n  properties: {\n    id: 'Properties',\n    defaultMessage: 'Properties',\n  },\n  rearrangeBy: {\n    id: 'Rearrange items by…',\n    defaultMessage: 'Rearrange items by…',\n  },\n  rename: {\n    id: 'Rename',\n    defaultMessage: 'Rename',\n  },\n  select: {\n    id: 'Select…',\n    defaultMessage: 'Select…',\n  },\n  selected: {\n    id: '{count} selected',\n    defaultMessage: '{count} selected',\n  },\n  selectColumns: {\n    id: 'Select columns to show',\n    defaultMessage: 'Select columns to show',\n  },\n  sort: {\n    id: 'sort',\n    defaultMessage: 'sort',\n  },\n  state: {\n    id: 'State',\n    defaultMessage: 'State',\n  },\n  tags: {\n    id: 'Tags',\n    defaultMessage: 'Tags',\n  },\n  upload: {\n    id: 'Upload',\n    defaultMessage: 'Upload',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  publicationDate: {\n    id: 'Publication date',\n    defaultMessage: 'Publication date',\n  },\n  createdOn: {\n    id: 'Created on',\n    defaultMessage: 'Created on',\n  },\n  expirationDate: {\n    id: 'Expiration date',\n    defaultMessage: 'Expiration date',\n  },\n  id: {\n    id: 'ID',\n    defaultMessage: 'ID',\n  },\n  uid: {\n    id: 'UID',\n    defaultMessage: 'UID',\n  },\n  reviewState: {\n    id: 'Review state',\n    defaultMessage: 'Review state',\n  },\n  folder: {\n    id: 'Folder',\n    defaultMessage: 'Folder',\n  },\n  excludedFromNavigation: {\n    id: 'Excluded from navigation',\n    defaultMessage: 'Excluded from navigation',\n  },\n  objectSize: {\n    id: 'Object Size',\n    defaultMessage: 'Object Size',\n  },\n  lastCommentedDate: {\n    id: 'Last comment date',\n    defaultMessage: 'Last comment date',\n  },\n  totalComments: {\n    id: 'Total comments',\n    defaultMessage: 'Total comments',\n  },\n  creator: {\n    id: 'Creator',\n    defaultMessage: 'Creator',\n  },\n  endDate: {\n    id: 'End Date',\n    defaultMessage: 'End Date',\n  },\n  startDate: {\n    id: 'Start Date',\n    defaultMessage: 'Start Date',\n  },\n  all: {\n    id: 'All',\n    defaultMessage: 'All',\n  },\n  linkIntegrityMessageHeader: {\n    id: 'Potential link breakage',\n    defaultMessage: 'Potential link breakage',\n  },\n  linkIntegrityMessageBody: {\n    id:\n      'By deleting this item, you will break ' +\n      'links that exist in the items listed below. ' +\n      'If this is indeed what you want to do, ' +\n      'we recommend that remove these references first.',\n    defaultMessage:\n      'By deleting this item, ' +\n      'you will break links that exist in the items ' +\n      'listed below. If this is indeed what you ' +\n      'want to do, we recommend that remove ' +\n      'these references first.',\n  },\n  linkIntegrityMessageExtra: {\n    id: 'This Page is referenced by the following items:',\n    defaultMessage: 'This Page is referenced by the following items:',\n  },\n  deleteItemCountMessage: {\n    id: 'Total items to be deleted:',\n    defaultMessage: 'Total items to be deleted:',\n  },\n  deleteItemMessage: {\n    id: 'Items to be deleted:',\n    defaultMessage: 'Items to be deleted:',\n  },\n});\n\n/**\n * Contents class.\n * @class Contents\n * @extends Component\n */\nclass Contents extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    action: PropTypes.string,\n    source: PropTypes.arrayOf(PropTypes.string),\n    searchContent: PropTypes.func.isRequired,\n    cut: PropTypes.func.isRequired,\n    copy: PropTypes.func.isRequired,\n    copyContent: PropTypes.func.isRequired,\n    deleteContent: PropTypes.func.isRequired,\n    moveContent: PropTypes.func.isRequired,\n    orderContent: PropTypes.func.isRequired,\n    sortContent: PropTypes.func.isRequired,\n    updateColumnsContent: PropTypes.func.isRequired,\n    linkIntegrityCheck: PropTypes.func.isRequired,\n    clipboardRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    deleteRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    updateRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    searchRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        '@type': PropTypes.string,\n        title: PropTypes.string,\n        description: PropTypes.string,\n      }),\n    ),\n    breadcrumbs: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n        url: PropTypes.string,\n      }),\n    ).isRequired,\n    total: PropTypes.number.isRequired,\n    pathname: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    items: [],\n    action: null,\n    source: null,\n    index: {\n      order: keys(Indexes),\n      values: mapValues(Indexes, (value, key) => ({\n        ...value,\n        selected: indexOf(defaultIndexes, key) !== -1,\n      })),\n      selectedCount: defaultIndexes.length + 1,\n    },\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsComponent\n   */\n  constructor(props) {\n    super(props);\n    this.onDeselect = this.onDeselect.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onSelectAll = this.onSelectAll.bind(this);\n    this.onSelectIndex = this.onSelectIndex.bind(this);\n    this.onSelectNone = this.onSelectNone.bind(this);\n    this.onDeleteOk = this.onDeleteOk.bind(this);\n    this.onDeleteCancel = this.onDeleteCancel.bind(this);\n    this.onUploadOk = this.onUploadOk.bind(this);\n    this.onUploadCancel = this.onUploadCancel.bind(this);\n    this.onRenameOk = this.onRenameOk.bind(this);\n    this.onRenameCancel = this.onRenameCancel.bind(this);\n    this.onTagsOk = this.onTagsOk.bind(this);\n    this.onTagsCancel = this.onTagsCancel.bind(this);\n    this.onPropertiesOk = this.onPropertiesOk.bind(this);\n    this.onPropertiesCancel = this.onPropertiesCancel.bind(this);\n    this.onWorkflowOk = this.onWorkflowOk.bind(this);\n    this.onWorkflowCancel = this.onWorkflowCancel.bind(this);\n    this.onChangeFilter = this.onChangeFilter.bind(this);\n    this.onChangePage = this.onChangePage.bind(this);\n    this.onChangePageSize = this.onChangePageSize.bind(this);\n    this.onOrderIndex = this.onOrderIndex.bind(this);\n    this.onOrderItem = this.onOrderItem.bind(this);\n    this.onSortItems = this.onSortItems.bind(this);\n    this.onMoveToTop = this.onMoveToTop.bind(this);\n    this.onChangeSelected = this.onChangeSelected.bind(this);\n    this.onMoveToBottom = this.onMoveToBottom.bind(this);\n    this.cut = this.cut.bind(this);\n    this.copy = this.copy.bind(this);\n    this.delete = this.delete.bind(this);\n    this.upload = this.upload.bind(this);\n    this.rename = this.rename.bind(this);\n    this.tags = this.tags.bind(this);\n    this.properties = this.properties.bind(this);\n    this.workflow = this.workflow.bind(this);\n    this.paste = this.paste.bind(this);\n    this.fetchContents = this.fetchContents.bind(this);\n    this.orderTimeout = null;\n    this.deleteItemsToShowThreshold = 10;\n\n    this.state = {\n      selected: [],\n      showDelete: false,\n      showUpload: false,\n      showRename: false,\n      showTags: false,\n      showProperties: false,\n      showWorkflow: false,\n      itemsToDelete: [],\n      showAllItemsToDelete: true,\n      items: this.props.items,\n      filter: '',\n      currentPage: 0,\n      pageSize: 50,\n      index: this.props.index || {\n        order: keys(Indexes),\n        values: mapValues(Indexes, (value, key) => ({\n          ...value,\n          selected: indexOf(defaultIndexes, key) !== -1,\n        })),\n        selectedCount: defaultIndexes.length + 1,\n      },\n      sort_on: this.props.sort?.on || 'getObjPositionInParent',\n      sort_order: this.props.sort?.order || 'ascending',\n      isClient: false,\n      linkIntegrityBreakages: '',\n    };\n    this.filterTimeout = null;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.fetchContents();\n    this.setState({ isClient: true });\n  }\n  async componentDidUpdate(_, prevState) {\n    if (\n      this.state.itemsToDelete !== prevState.itemsToDelete &&\n      this.state.itemsToDelete.length > 0\n    ) {\n      this.setState({\n        linkIntegrityBreakages: await this.props.linkIntegrityCheck(\n          map(this.state.itemsToDelete, (item) =>\n            this.getFieldById(item, 'UID'),\n          ),\n        ),\n        showAllItemsToDelete:\n          this.state.itemsToDelete.length < this.deleteItemsToShowThreshold,\n      });\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      (this.props.clipboardRequest.loading &&\n        nextProps.clipboardRequest.loaded) ||\n      (this.props.deleteRequest.loading && nextProps.deleteRequest.loaded) ||\n      (this.props.updateRequest.loading && nextProps.updateRequest.loaded)\n    ) {\n      this.fetchContents(nextProps.pathname);\n    }\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      this.props.toastify.toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.messageUpdate)}\n        />,\n      );\n    }\n    if (this.props.pathname !== nextProps.pathname) {\n      // Refetching content to sync the current object in the toolbar\n      this.props.getContent(getBaseUrl(nextProps.pathname));\n      this.setState(\n        {\n          currentPage: 0,\n        },\n        () =>\n          this.setState({ filter: '' }, () =>\n            this.fetchContents(nextProps.pathname),\n          ),\n      );\n    }\n    if (this.props.searchRequest.loading && nextProps.searchRequest.loaded) {\n      this.setState({\n        items: nextProps.items,\n      });\n    }\n    if (\n      this.props.clipboardRequest.loading &&\n      nextProps.clipboardRequest.error\n    ) {\n      this.props.toastify.toast.error(\n        <Toast\n          error\n          title={this.props.intl.formatMessage(messages.error)}\n          content={this.props.intl.formatMessage(messages.error)}\n        />,\n      );\n    }\n\n    if (\n      this.props.clipboardRequest.loading &&\n      nextProps.clipboardRequest.loaded\n    ) {\n      this.props.toastify.toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.messagePasted)}\n        />,\n      );\n    }\n\n    if (this.props.deleteRequest.loading && nextProps.deleteRequest.error) {\n      this.props.toastify.toast.error(\n        <Toast\n          error\n          title={this.props.intl.formatMessage(messages.deleteError)}\n          content={this.props.intl.formatMessage(messages.deleteError)}\n        />,\n      );\n    }\n\n    if (this.props.orderRequest.loading && nextProps.orderRequest.loaded) {\n      this.props.toastify.toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.messageReorder)}\n        />,\n      );\n    }\n  }\n\n  /**\n   * On deselect handler\n   * @method onDeselect\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onDeselect(event, { value }) {\n    this.setState({\n      selected: pull(this.state.selected, value),\n    });\n  }\n\n  /**\n   * On select handler\n   * @method onSelect\n   * @param {object} event Event object\n   * @returns {undefined}\n   */\n  onSelect(event, id) {\n    if (indexOf(this.state.selected, id) === -1) {\n      this.setState({\n        selected: concat(this.state.selected, id),\n      });\n    } else {\n      this.setState({\n        selected: pull(this.state.selected, id),\n      });\n    }\n  }\n\n  /**\n   * On select all handler\n   * @method onSelectAll\n   * @returns {undefined}\n   */\n  onSelectAll() {\n    this.setState({\n      selected: map(this.state.items, (item) => item['@id']),\n    });\n  }\n\n  /**\n   * On select none handler\n   * @method onSelectNone\n   * @returns {undefined}\n   */\n  onSelectNone() {\n    this.setState({\n      selected: [],\n    });\n  }\n\n  /**\n   * On select index\n   * @method onSelectIndex\n   * @param {object} event Event object.\n   * @param {string} value Index value.\n   * @returns {undefined}\n   */\n  onSelectIndex(event, { value }) {\n    let newIndex = {\n      ...this.state.index,\n      selectedCount:\n        this.state.index.selectedCount +\n        (this.state.index.values[value].selected ? -1 : 1),\n      values: mapValues(this.state.index.values, (indexValue, indexKey) => ({\n        ...indexValue,\n        selected:\n          indexKey === value ? !indexValue.selected : indexValue.selected,\n      })),\n    };\n    this.setState({\n      index: newIndex,\n    });\n    this.props.updateColumnsContent(getBaseUrl(this.props.pathname), newIndex);\n  }\n\n  /**\n   * On change filter\n   * @method onChangeFilter\n   * @param {object} event Event object.\n   * @param {string} value Filter value.\n   * @returns {undefined}\n   */\n  onChangeFilter(event, { value }) {\n    const self = this;\n    clearTimeout(self.filterTimeout);\n    this.setState(\n      {\n        filter: value,\n      },\n      () => {\n        self.filterTimeout = setTimeout(() => {\n          self.fetchContents();\n        }, 200);\n      },\n    );\n  }\n\n  /**\n   * On change selected values (Filter)\n   * @method onChangeSelected\n   * @param {object} event Event object.\n   * @param {string} value Filter value.\n   * @returns {undefined}\n   */\n  onChangeSelected(event, { value }) {\n    event.stopPropagation();\n    const { items, selected } = this.state;\n\n    const filteredItems = filter(selected, (selectedItem) =>\n      find(items, (item) => item['@id'] === selectedItem)\n        .title.toLowerCase()\n        .includes(value.toLowerCase()),\n    );\n\n    this.setState({\n      filteredItems,\n      selectedMenuFilter: value,\n    });\n  }\n\n  /**\n   * On change page\n   * @method onChangePage\n   * @param {object} event Event object.\n   * @param {string} value Page value.\n   * @returns {undefined}\n   */\n  onChangePage(event, { value }) {\n    this.setState(\n      {\n        currentPage: value,\n      },\n      () => this.fetchContents(),\n    );\n  }\n\n  /**\n   * On change page size\n   * @method onChangePageSize\n   * @param {object} event Event object.\n   * @param {string} value Page size value.\n   * @returns {undefined}\n   */\n  onChangePageSize(event, { value }) {\n    this.setState(\n      {\n        pageSize: value,\n        currentPage: 0,\n      },\n      () => this.fetchContents(),\n    );\n  }\n\n  /**\n   * On order index\n   * @method onOrderIndex\n   * @param {number} index Index\n   * @param {number} delta Delta\n   * @returns {undefined}\n   */\n  onOrderIndex(index, delta) {\n    this.setState({\n      index: {\n        ...this.state.index,\n        order: move(this.state.index.order, index, index + delta),\n      },\n    });\n    this.props.updateColumnsContent(\n      getBaseUrl(this.props.pathname),\n      this.state.index,\n    );\n  }\n\n  /**\n   * On order item\n   * @method onOrderItem\n   * @param {string} id Item id\n   * @param {number} itemIndex Item index\n   * @param {number} delta Delta\n   * @returns {undefined}\n   */\n  onOrderItem(id, itemIndex, delta, backend) {\n    if (backend) {\n      this.props.orderContent(\n        getBaseUrl(this.props.pathname),\n        id.replace(/^.*\\//, ''),\n        delta,\n      );\n    } else {\n      this.setState({\n        items: move(this.state.items, itemIndex, itemIndex + delta),\n      });\n    }\n  }\n\n  /**\n   * On sort items\n   * @method onSortItems\n   * @param {object} event Event object\n   * @param {string} value Item index\n   * @returns {undefined}\n   */\n  onSortItems(event, { value }) {\n    const values = value.split('|');\n    this.setState({\n      sort_on: values[0],\n      sort_order: values[1],\n    });\n    this.props.sortContent(\n      getBaseUrl(this.props.pathname),\n      values[0],\n      values[1],\n    );\n  }\n\n  /**\n   * On move to top\n   * @method onMoveToTop\n   * @param {object} event Event object\n   * @param {string} value Item index\n   * @returns {undefined}\n   */\n  onMoveToTop(event, { value }) {\n    const id = this.state.items[value]['@id'];\n    value = this.state.currentPage * this.state.pageSize + value;\n    this.props.orderContent(\n      getBaseUrl(this.props.pathname),\n      id.replace(/^.*\\//, ''),\n      -value,\n    );\n    this.setState(\n      {\n        currentPage: 0,\n      },\n      () => this.fetchContents(),\n    );\n  }\n\n  /**\n   * On move to bottom\n   * @method onMoveToBottom\n   * @param {object} event Event object\n   * @param {string} value Item index\n   * @returns {undefined}\n   */\n  onMoveToBottom(event, { value }) {\n    this.onOrderItem(\n      this.state.items[value]['@id'],\n      value,\n      this.state.items.length - 1 - value,\n      false,\n    );\n    this.onOrderItem(\n      this.state.items[value]['@id'],\n      value,\n      this.state.items.length - 1 - value,\n      true,\n    );\n  }\n\n  /**\n   * On delete ok\n   * @method onDeleteOk\n   * @returns {undefined}\n   */\n  onDeleteOk() {\n    this.props.deleteContent(this.state.itemsToDelete);\n    this.setState({\n      showDelete: false,\n      itemsToDelete: [],\n      selected: [],\n    });\n  }\n\n  /**\n   * On delete cancel\n   * @method onDeleteCancel\n   * @returns {undefined}\n   */\n  onDeleteCancel() {\n    this.setState({\n      showDelete: false,\n      itemsToDelete: [],\n    });\n  }\n\n  /**\n   * On upload ok\n   * @method onUploadOk\n   * @returns {undefined}\n   */\n  onUploadOk() {\n    this.fetchContents();\n    this.setState({\n      showUpload: false,\n    });\n  }\n\n  /**\n   * On upload cancel\n   * @method onUploadCancel\n   * @returns {undefined}\n   */\n  onUploadCancel() {\n    this.setState({\n      showUpload: false,\n    });\n  }\n\n  /**\n   * On rename ok\n   * @method onRenameOk\n   * @returns {undefined}\n   */\n  onRenameOk() {\n    this.setState({\n      showRename: false,\n      selected: [],\n    });\n  }\n\n  /**\n   * On rename cancel\n   * @method onRenameCancel\n   * @returns {undefined}\n   */\n  onRenameCancel() {\n    this.setState({\n      showRename: false,\n    });\n  }\n\n  /**\n   * On tags ok\n   * @method onTagsOk\n   * @returns {undefined}\n   */\n  onTagsOk() {\n    this.setState({\n      showTags: false,\n      selected: [],\n    });\n  }\n\n  /**\n   * On tags cancel\n   * @method onTagsCancel\n   * @returns {undefined}\n   */\n  onTagsCancel() {\n    this.setState({\n      showTags: false,\n    });\n  }\n\n  /**\n   * On properties ok\n   * @method onPropertiesOk\n   * @returns {undefined}\n   */\n  onPropertiesOk() {\n    this.setState({\n      showProperties: false,\n      selected: [],\n    });\n  }\n\n  /**\n   * On properties cancel\n   * @method onPropertiesCancel\n   * @returns {undefined}\n   */\n  onPropertiesCancel() {\n    this.setState({\n      showProperties: false,\n    });\n  }\n\n  /**\n   * On workflow ok\n   * @method onWorkflowOk\n   * @returns {undefined}\n   */\n  onWorkflowOk() {\n    this.fetchContents();\n    this.setState({\n      showWorkflow: false,\n      selected: [],\n    });\n    this.props.toastify.toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.messageWorkflowUpdate)}\n      />,\n    );\n  }\n\n  /**\n   * On workflow cancel\n   * @method onWorkflowCancel\n   * @returns {undefined}\n   */\n  onWorkflowCancel() {\n    this.setState({\n      showWorkflow: false,\n    });\n  }\n\n  /**\n   * Get field by id\n   * @method getFieldById\n   * @param {string} id Id of object\n   * @param {string} field Field of object\n   * @returns {string} Field of object\n   */\n  getFieldById(id, field) {\n    const item = find(this.state.items, { '@id': id });\n    return item ? item[field] : '';\n  }\n\n  /**\n   * Fetch contents handler\n   * @method fetchContents\n   * @param {string} pathname Pathname to fetch contents.\n   * @returns {undefined}\n   */\n  fetchContents(pathname) {\n    if (this.state.pageSize === this.props.intl.formatMessage(messages.all)) {\n      //'All'\n      this.props.searchContent(getBaseUrl(pathname || this.props.pathname), {\n        'path.depth': 1,\n        sort_on: this.state.sort_on,\n        sort_order: this.state.sort_order,\n        metadata_fields: '_all',\n        b_size: 100000000,\n        ...(this.state.filter && { SearchableText: `${this.state.filter}*` }),\n      });\n    } else {\n      this.props.searchContent(getBaseUrl(pathname || this.props.pathname), {\n        'path.depth': 1,\n        sort_on: this.state.sort_on,\n        sort_order: this.state.sort_order,\n        metadata_fields: '_all',\n        ...(this.state.filter && { SearchableText: `${this.state.filter}*` }),\n        b_size: this.state.pageSize,\n        b_start: this.state.currentPage * this.state.pageSize,\n      });\n    }\n  }\n\n  /**\n   * Cut handler\n   * @method cut\n   * @param {Object} event Event object.\n   * @param {string} value Value of the event.\n   * @returns {undefined}\n   */\n  cut(event, { value }) {\n    this.props.cut(value ? [value] : this.state.selected);\n    this.onSelectNone();\n    this.props.toastify.toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.messageCut)}\n      />,\n    );\n  }\n\n  /**\n   * Copy handler\n   * @method copy\n   * @param {Object} event Event object.\n   * @param {string} value Value of the event.\n   * @returns {undefined}\n   */\n  copy(event, { value }) {\n    this.props.copy(value ? [value] : this.state.selected);\n    this.onSelectNone();\n    this.props.toastify.toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.messageCopied)}\n      />,\n    );\n  }\n\n  /**\n   * Delete handler\n   * @method delete\n   * @param {Object} event Event object.\n   * @param {string} value Value of the event.\n   * @returns {undefined}\n   */\n  delete(event, { value }) {\n    this.setState({\n      showDelete: true,\n      itemsToDelete: value ? [value] : this.state.selected,\n    });\n  }\n\n  /**\n   * Upload handler\n   * @method upload\n   * @returns {undefined}\n   */\n  upload() {\n    this.setState({\n      showUpload: true,\n    });\n  }\n\n  /**\n   * Rename handler\n   * @method rename\n   * @returns {undefined}\n   */\n  rename() {\n    this.setState({\n      showRename: true,\n    });\n  }\n\n  /**\n   * Tags handler\n   * @method tags\n   * @returns {undefined}\n   */\n  tags() {\n    this.setState({\n      showTags: true,\n    });\n  }\n\n  /**\n   * Properties handler\n   * @method properties\n   * @returns {undefined}\n   */\n  properties() {\n    this.setState({\n      showProperties: true,\n    });\n  }\n\n  /**\n   * Workflow handler\n   * @method workflow\n   * @returns {undefined}\n   */\n  workflow() {\n    this.setState({\n      showWorkflow: true,\n    });\n  }\n\n  /**\n   * Paste handler\n   * @method paste\n   * @returns {undefined}\n   */\n  paste() {\n    if (this.props.action === 'copy') {\n      this.props.copyContent(\n        this.props.source,\n        getBaseUrl(this.props.pathname),\n      );\n    }\n    if (this.props.action === 'cut') {\n      this.props.moveContent(\n        this.props.source,\n        getBaseUrl(this.props.pathname),\n      );\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const selected = this.state.selected.length > 0;\n    const filteredItems = this.state.filteredItems || this.state.selected;\n    const path = getBaseUrl(this.props.pathname);\n    const folderContentsAction = find(this.props.objectActions, {\n      id: 'folderContents',\n    });\n    const loading =\n      (this.props.clipboardRequest?.loading &&\n        !this.props.clipboardRequest?.error) ||\n      (this.props.deleteRequest?.loading && !this.props.deleteRequest?.error) ||\n      (this.props.updateRequest?.loading && !this.props.updateRequest?.error) ||\n      (this.props.orderRequest?.loading && !this.props.orderRequest?.error) ||\n      (this.props.searchRequest?.loading && !this.props.searchRequest?.error);\n\n    return this.props.token && this.props.objectActions?.length > 0 ? (\n      <>\n        {folderContentsAction ? (\n          <Container id=\"page-contents\" className=\"folder-contents\">\n            <Dimmer.Dimmable as=\"div\" blurring dimmed={loading}>\n              <Dimmer active={loading} inverted>\n                <Loader indeterminate size=\"massive\">\n                  {this.props.intl.formatMessage(messages.loading)}\n                </Loader>\n              </Dimmer>\n\n              <Helmet\n                title={this.props.intl.formatMessage(messages.contents)}\n              />\n              <div className=\"container\">\n                <article id=\"content\">\n                  <Confirm\n                    open={this.state.showDelete}\n                    confirmButton=\"Delete\"\n                    header={this.props.intl.formatMessage(\n                      messages.deleteConfirm,\n                    )}\n                    content={\n                      <div className=\"content\">\n                        <h3>\n                          {this.props.intl.formatMessage(\n                            messages.deleteItemCountMessage,\n                          ) + ` ${this.state.itemsToDelete.length}`}\n                        </h3>\n                        <ul className=\"content\">\n                          {map(\n                            this.state.showAllItemsToDelete\n                              ? this.state.itemsToDelete\n                              : this.state.itemsToDelete.slice(\n                                  0,\n                                  this.deleteItemsToShowThreshold,\n                                ),\n                            (item) => (\n                              <li key={item}>\n                                {this.getFieldById(item, 'title')}\n                              </li>\n                            ),\n                          )}\n                        </ul>\n                        {!this.state.showAllItemsToDelete && (\n                          <Button\n                            onClick={() =>\n                              this.setState({\n                                showAllItemsToDelete: true,\n                              })\n                            }\n                          >\n                            Show all items\n                          </Button>\n                        )}\n                        {this.state.linkIntegrityBreakages.length > 0 ? (\n                          <div>\n                            <h3>\n                              {this.props.intl.formatMessage(\n                                messages.linkIntegrityMessageHeader,\n                              )}\n                            </h3>\n                            <p>\n                              {this.props.intl.formatMessage(\n                                messages.linkIntegrityMessageBody,\n                              )}\n                            </p>\n                            <ul className=\"content\">\n                              {map(\n                                this.state.linkIntegrityBreakages,\n                                (item) => (\n                                  <li key={item['@id']}>\n                                    <a href={item['@id']}>{item.title}</a>\n                                    <p>\n                                      {this.props.intl.formatMessage(\n                                        messages.linkIntegrityMessageExtra,\n                                      )}\n                                    </p>\n                                    <ul className=\"content\">\n                                      {map(item.breaches, (breach) => (\n                                        <li key={breach['@id']}>\n                                          <a href={breach['@id']}>\n                                            {breach.title}\n                                          </a>\n                                        </li>\n                                      ))}\n                                    </ul>\n                                  </li>\n                                ),\n                              )}\n                            </ul>\n                          </div>\n                        ) : (\n                          <div></div>\n                        )}\n                      </div>\n                    }\n                    onCancel={this.onDeleteCancel}\n                    onConfirm={this.onDeleteOk}\n                    size=\"medium\"\n                  />\n                  <ContentsUploadModal\n                    open={this.state.showUpload}\n                    onCancel={this.onUploadCancel}\n                    onOk={this.onUploadOk}\n                    pathname={getBaseUrl(this.props.pathname)}\n                  />\n                  <ContentsRenameModal\n                    open={this.state.showRename}\n                    onCancel={this.onRenameCancel}\n                    onOk={this.onRenameOk}\n                    items={map(this.state.selected, (item) => ({\n                      url: item,\n                      title: this.getFieldById(item, 'title'),\n                      id: this.getFieldById(item, 'id'),\n                    }))}\n                  />\n                  <ContentsTagsModal\n                    open={this.state.showTags}\n                    onCancel={this.onTagsCancel}\n                    onOk={this.onTagsOk}\n                    items={map(this.state.selected, (item) => ({\n                      url: item,\n                      subjects: this.getFieldById(item, 'Subject'),\n                    }))}\n                  />\n                  <ContentsPropertiesModal\n                    open={this.state.showProperties}\n                    onCancel={this.onPropertiesCancel}\n                    onOk={this.onPropertiesOk}\n                    items={this.state.selected}\n                  />\n                  {this.state.showWorkflow && (\n                    <ContentsWorkflowModal\n                      open={this.state.showWorkflow}\n                      onCancel={this.onWorkflowCancel}\n                      onOk={this.onWorkflowOk}\n                      items={this.state.selected}\n                    />\n                  )}\n                  <section id=\"content-core\">\n                    <Segment.Group raised>\n                      <Menu secondary attached className=\"top-menu\">\n                        <Menu.Menu className=\"top-menu-menu\">\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.upload}\n                                className=\"upload\"\n                              >\n                                <Icon\n                                  name={uploadSVG}\n                                  color=\"#007eb1\"\n                                  size=\"24px\"\n                                  className=\"upload\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.upload,\n                            )}\n                            size=\"mini\"\n                          />\n                        </Menu.Menu>\n                        <Menu.Menu className=\"top-menu-menu\">\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.rename}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={renameSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"rename\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.rename,\n                            )}\n                            size=\"mini\"\n                          />\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.workflow}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={semaphoreSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"semaphore\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.state,\n                            )}\n                            size=\"mini\"\n                          />\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.tags}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={tagSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"tag\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.tags,\n                            )}\n                            size=\"mini\"\n                          />\n\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.properties}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={propertiesSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"properties\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.properties,\n                            )}\n                            size=\"mini\"\n                          />\n                        </Menu.Menu>\n                        <Menu.Menu className=\"top-menu-menu\">\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.cut}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={cutSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"cut\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.cut,\n                            )}\n                            size=\"mini\"\n                          />\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.copy}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={copySVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"copy\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.copy,\n                            )}\n                            size=\"mini\"\n                          />\n\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.paste}\n                                disabled={!this.props.action}\n                              >\n                                <Icon\n                                  name={pasteSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"paste\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.paste,\n                            )}\n                            size=\"mini\"\n                          />\n\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.delete}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={deleteSVG}\n                                  color={selected ? '#e40166' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"delete\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.delete,\n                            )}\n                            size=\"mini\"\n                          />\n                        </Menu.Menu>\n                        <Menu.Menu\n                          position=\"right\"\n                          className=\"top-menu-searchbox\"\n                        >\n                          <div className=\"ui right aligned category search item\">\n                            <Input\n                              type=\"text\"\n                              transparent\n                              placeholder={this.props.intl.formatMessage(\n                                messages.filter,\n                              )}\n                              size=\"small\"\n                              value={this.state.filter}\n                              onChange={this.onChangeFilter}\n                            />\n                            {this.state.filter && (\n                              <Button\n                                className=\"icon icon-container\"\n                                onClick={() => {\n                                  this.onChangeFilter('', { value: '' });\n                                }}\n                              >\n                                <Icon\n                                  name={clearSVG}\n                                  size=\"30px\"\n                                  color=\"#e40166\"\n                                />\n                              </Button>\n                            )}\n                            <Icon\n                              name={zoomSVG}\n                              size=\"30px\"\n                              color=\"#007eb1\"\n                              className=\"zoom\"\n                              style={{ flexShrink: '0' }}\n                            />\n                            <div className=\"results\" />\n                          </div>\n                        </Menu.Menu>\n                      </Menu>\n                      <Segment\n                        secondary\n                        attached\n                        className=\"contents-breadcrumbs\"\n                      >\n                        <ContentsBreadcrumbs items={this.props.breadcrumbs} />\n                        <Dropdown\n                          item\n                          upward={false}\n                          icon={\n                            <Icon name={moreSVG} size=\"24px\" color=\"#826a6a\" />\n                          }\n                          className=\"right floating selectIndex\"\n                        >\n                          <Dropdown.Menu className=\"left\">\n                            <Dropdown.Header\n                              content={this.props.intl.formatMessage(\n                                messages.selectColumns,\n                              )}\n                            />\n                            <Dropdown.Menu scrolling>\n                              {map(\n                                filter(\n                                  this.state.index.order,\n                                  (index) => index !== 'sortable_title',\n                                ),\n                                (index) => (\n                                  <Dropdown.Item\n                                    key={index}\n                                    value={index}\n                                    onClick={this.onSelectIndex}\n                                    className=\"iconAlign\"\n                                  >\n                                    {this.state.index.values[index].selected ? (\n                                      <Icon\n                                        name={checkboxCheckedSVG}\n                                        size=\"24px\"\n                                        color=\"#007eb1\"\n                                        className={\n                                          this.state.index.values[index].label\n                                        }\n                                      />\n                                    ) : (\n                                      <Icon\n                                        name={checkboxUncheckedSVG}\n                                        className={\n                                          this.state.index.values[index].label\n                                        }\n                                        size=\"24px\"\n                                      />\n                                    )}\n                                    <span>\n                                      {' '}\n                                      {this.props.intl.formatMessage({\n                                        id: this.state.index.values[index]\n                                          .label,\n                                        defaultMessage: this.state.index.values[\n                                          index\n                                        ].label,\n                                      })}\n                                    </span>\n                                  </Dropdown.Item>\n                                ),\n                              )}\n                            </Dropdown.Menu>\n                          </Dropdown.Menu>\n                        </Dropdown>\n                      </Segment>\n                      <div className=\"contents-table-wrapper\">\n                        <Table selectable compact singleLine attached>\n                          <Table.Header>\n                            <Table.Row>\n                              <Table.HeaderCell>\n                                <Popup\n                                  menu={true}\n                                  position=\"bottom left\"\n                                  flowing={true}\n                                  basic={true}\n                                  on=\"click\"\n                                  popper={{\n                                    className: 'dropdown-popup',\n                                  }}\n                                  trigger={\n                                    <Icon\n                                      name={configurationSVG}\n                                      size=\"24px\"\n                                      color=\"#826a6a\"\n                                      className=\"dropdown-popup-trigger configuration-svg\"\n                                    />\n                                  }\n                                >\n                                  <Menu vertical borderless fluid>\n                                    <Menu.Header\n                                      content={this.props.intl.formatMessage(\n                                        messages.rearrangeBy,\n                                      )}\n                                    />\n                                    {map(\n                                      [\n                                        'id',\n                                        'sortable_title',\n                                        'EffectiveDate',\n                                        'CreationDate',\n                                        'ModificationDate',\n                                        'portal_type',\n                                      ],\n                                      (index) => (\n                                        <Dropdown\n                                          key={index}\n                                          item\n                                          simple\n                                          className={`sort_${index} icon-align`}\n                                          icon={\n                                            <Icon\n                                              name={downKeySVG}\n                                              size=\"24px\"\n                                              className=\"left\"\n                                            />\n                                          }\n                                          text={this.props.intl.formatMessage({\n                                            id: Indexes[index].label,\n                                          })}\n                                        >\n                                          <Dropdown.Menu>\n                                            <Dropdown.Item\n                                              onClick={this.onSortItems}\n                                              value={`${Indexes[index].sort_on}|ascending`}\n                                              className={`sort_${Indexes[index].sort_on}_ascending icon-align`}\n                                            >\n                                              <Icon\n                                                name={sortDownSVG}\n                                                size=\"24px\"\n                                              />{' '}\n                                              <FormattedMessage\n                                                id=\"Ascending\"\n                                                defaultMessage=\"Ascending\"\n                                              />\n                                            </Dropdown.Item>\n                                            <Dropdown.Item\n                                              onClick={this.onSortItems}\n                                              value={`${Indexes[index].sort_on}|descending`}\n                                              className={`sort_${Indexes[index].sort_on}_descending icon-align`}\n                                            >\n                                              <Icon\n                                                name={sortUpSVG}\n                                                size=\"24px\"\n                                              />{' '}\n                                              <FormattedMessage\n                                                id=\"Descending\"\n                                                defaultMessage=\"Descending\"\n                                              />\n                                            </Dropdown.Item>\n                                          </Dropdown.Menu>\n                                        </Dropdown>\n                                      ),\n                                    )}\n                                  </Menu>\n                                </Popup>\n                              </Table.HeaderCell>\n                              <Table.HeaderCell>\n                                <Popup\n                                  menu={true}\n                                  position=\"bottom left\"\n                                  flowing={true}\n                                  basic={true}\n                                  on=\"click\"\n                                  popper={{\n                                    className: 'dropdown-popup',\n                                  }}\n                                  trigger={\n                                    <Icon\n                                      name={\n                                        this.state.selected.length === 0\n                                          ? checkboxUncheckedSVG\n                                          : this.state.selected.length ===\n                                            this.state.items.length\n                                          ? checkboxCheckedSVG\n                                          : checkboxIndeterminateSVG\n                                      }\n                                      color={\n                                        this.state.selected.length > 0\n                                          ? '#007eb1'\n                                          : '#826a6a'\n                                      }\n                                      className=\"dropdown-popup-trigger\"\n                                      size=\"24px\"\n                                    />\n                                  }\n                                >\n                                  <Menu vertical borderless fluid>\n                                    <Menu.Header\n                                      content={this.props.intl.formatMessage(\n                                        messages.select,\n                                      )}\n                                    />\n                                    <Menu.Item onClick={this.onSelectAll}>\n                                      <Icon\n                                        name={checkboxCheckedSVG}\n                                        color=\"#007eb1\"\n                                        size=\"24px\"\n                                      />{' '}\n                                      <FormattedMessage\n                                        id=\"All\"\n                                        defaultMessage=\"All\"\n                                      />\n                                    </Menu.Item>\n                                    <Menu.Item onClick={this.onSelectNone}>\n                                      <Icon\n                                        name={checkboxUncheckedSVG}\n                                        size=\"24px\"\n                                      />{' '}\n                                      <FormattedMessage\n                                        id=\"None\"\n                                        defaultMessage=\"None\"\n                                      />\n                                    </Menu.Item>\n                                    <Divider />\n                                    <Menu.Header\n                                      content={this.props.intl.formatMessage(\n                                        messages.selected,\n                                        { count: this.state.selected.length },\n                                      )}\n                                    />\n                                    <Input\n                                      icon={<Icon name={zoomSVG} size=\"24px\" />}\n                                      iconPosition=\"left\"\n                                      className=\"item search\"\n                                      placeholder={this.props.intl.formatMessage(\n                                        messages.filter,\n                                      )}\n                                      value={\n                                        this.state.selectedMenuFilter || ''\n                                      }\n                                      onChange={this.onChangeSelected}\n                                      onClick={(e) => {\n                                        e.preventDefault();\n                                        e.stopPropagation();\n                                      }}\n                                    />\n                                    <Menu.Menu scrolling>\n                                      {map(filteredItems, (item) => (\n                                        <Menu.Item\n                                          key={item}\n                                          value={item}\n                                          onClick={this.onDeselect}\n                                        >\n                                          <Icon\n                                            name={deleteSVG}\n                                            color=\"#e40166\"\n                                            size=\"24px\"\n                                          />{' '}\n                                          {this.getFieldById(item, 'title')}\n                                        </Menu.Item>\n                                      ))}\n                                    </Menu.Menu>\n                                  </Menu>\n                                </Popup>\n                              </Table.HeaderCell>\n                              <Table.HeaderCell\n                                width={Math.ceil(\n                                  16 / this.state.index.selectedCount,\n                                )}\n                              >\n                                <FormattedMessage\n                                  id=\"Title\"\n                                  defaultMessage=\"Title\"\n                                />\n                              </Table.HeaderCell>\n                              {map(\n                                this.state.index.order,\n                                (index, order) =>\n                                  this.state.index.values[index].selected && (\n                                    <ContentsIndexHeader\n                                      key={index}\n                                      width={Math.ceil(\n                                        16 / this.state.index.selectedCount,\n                                      )}\n                                      label={\n                                        this.state.index.values[index].label\n                                      }\n                                      order={order}\n                                      onOrderIndex={this.onOrderIndex}\n                                    />\n                                  ),\n                              )}\n                              <Table.HeaderCell textAlign=\"right\">\n                                <FormattedMessage\n                                  id=\"Actions\"\n                                  defaultMessage=\"Actions\"\n                                />\n                              </Table.HeaderCell>\n                            </Table.Row>\n                          </Table.Header>\n                          <Table.Body>\n                            {this.state.items.map((item, order) => (\n                              <ContentsItem\n                                key={item['@id']}\n                                item={item}\n                                order={order}\n                                selected={\n                                  indexOf(this.state.selected, item['@id']) !==\n                                  -1\n                                }\n                                onClick={this.onSelect}\n                                indexes={filter(\n                                  map(this.state.index.order, (index) => ({\n                                    id: index,\n                                    type: this.state.index.values[index].type,\n                                  })),\n                                  (index) =>\n                                    this.state.index.values[index.id].selected,\n                                )}\n                                onCut={this.cut}\n                                onCopy={this.copy}\n                                onDelete={this.delete}\n                                onOrderItem={this.onOrderItem}\n                                onMoveToTop={this.onMoveToTop}\n                                onMoveToBottom={this.onMoveToBottom}\n                              />\n                            ))}\n                          </Table.Body>\n                        </Table>\n                      </div>\n\n                      <div className=\"contents-pagination\">\n                        <Pagination\n                          current={this.state.currentPage}\n                          total={Math.ceil(\n                            this.props.total / this.state.pageSize,\n                          )}\n                          pageSize={this.state.pageSize}\n                          pageSizes={[\n                            50,\n                            this.props.intl.formatMessage(messages.all),\n                          ]}\n                          onChangePage={this.onChangePage}\n                          onChangePageSize={this.onChangePageSize}\n                        />\n                      </div>\n                    </Segment.Group>\n                  </section>\n                </article>\n              </div>\n              {this.state.isClient && (\n                <Portal node={document.getElementById('toolbar')}>\n                  <Toolbar\n                    pathname={this.props.pathname}\n                    inner={\n                      <Link\n                        to={`${path}`}\n                        aria-label={this.props.intl.formatMessage(\n                          messages.back,\n                        )}\n                      >\n                        <Icon\n                          name={backSVG}\n                          className=\"contents circled\"\n                          size=\"30px\"\n                          title={this.props.intl.formatMessage(messages.back)}\n                        />\n                      </Link>\n                    }\n                  />\n                </Portal>\n              )}\n            </Dimmer.Dimmable>\n          </Container>\n        ) : (\n          <Unauthorized staticContext={this.props.staticContext} />\n        )}\n      </>\n    ) : (\n      <Unauthorized staticContext={this.props.staticContext} />\n    );\n  }\n}\n\nlet dndContext;\n\nconst DragDropConnector = (props) => {\n  const { DragDropContext } = props.reactDnd;\n  const HTML5Backend = props.reactDndHtml5Backend.default;\n\n  const DndConnectedContents = React.useMemo(() => {\n    if (!dndContext) {\n      dndContext = DragDropContext(HTML5Backend);\n    }\n    return dndContext(Contents);\n  }, [DragDropContext, HTML5Backend]);\n\n  return <DndConnectedContents {...props} />;\n};\n\nexport const __test__ = compose(\n  injectIntl,\n  injectLazyLibs(['toastify', 'reactDnd']),\n  connect(\n    (store, props) => {\n      return {\n        token: store.userSession.token,\n        items: store.search.items,\n        sort: store.content.update.sort,\n        index: store.content.updatecolumns.idx,\n        breadcrumbs: store.breadcrumbs.items,\n        total: store.search.total,\n        searchRequest: {\n          loading: store.search.loading,\n          loaded: store.search.loaded,\n        },\n        pathname: props.location.pathname,\n        action: store.clipboard.action,\n        source: store.clipboard.source,\n        clipboardRequest: store.clipboard.request,\n        deleteRequest: store.content.delete,\n        updateRequest: store.content.update,\n        objectActions: store.actions.actions.object,\n        orderRequest: store.content.order,\n      };\n    },\n    {\n      searchContent,\n      cut,\n      copy,\n      copyContent,\n      deleteContent,\n      listActions,\n      moveContent,\n      orderContent,\n      sortContent,\n      updateColumnsContent,\n      linkIntegrityCheck,\n      getContent,\n    },\n  ),\n)(Contents);\n\nexport default compose(\n  injectIntl,\n  connect(\n    (store, props) => {\n      return {\n        token: store.userSession.token,\n        items: store.search.items,\n        sort: store.content.update.sort,\n        index: store.content.updatecolumns.idx,\n        breadcrumbs: store.breadcrumbs.items,\n        total: store.search.total,\n        searchRequest: {\n          loading: store.search.loading,\n          loaded: store.search.loaded,\n        },\n        pathname: props.location.pathname,\n        action: store.clipboard.action,\n        source: store.clipboard.source,\n        clipboardRequest: store.clipboard.request,\n        deleteRequest: store.content.delete,\n        updateRequest: store.content.update,\n        objectActions: store.actions.actions.object,\n        orderRequest: store.content.order,\n      };\n    },\n    {\n      searchContent,\n      cut,\n      copy,\n      copyContent,\n      deleteContent,\n      listActions,\n      moveContent,\n      orderContent,\n      sortContent,\n      updateColumnsContent,\n      linkIntegrityCheck,\n      getContent,\n    },\n  ),\n  asyncConnect([\n    {\n      key: 'actions',\n      // Dispatch async/await to make the operation syncronous, otherwise it returns\n      // before the promise is resolved\n      promise: async ({ location, store: { dispatch } }) =>\n        await dispatch(listActions(getBaseUrl(location.pathname))),\n    },\n  ]),\n  injectLazyLibs(['toastify', 'reactDnd', 'reactDndHtml5Backend']),\n)(DragDropConnector);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Back","defaultMessage":"Back"},{"id":"Contents","defaultMessage":"Contents"},{"id":"Copy","defaultMessage":"Copy"},{"id":"Cut","defaultMessage":"Cut"},{"id":"You can't paste this content here","defaultMessage":"You can't paste this content here"},{"id":"Delete","defaultMessage":"Delete"},{"id":"Do you really want to delete the following items?","defaultMessage":"Do you really want to delete the following items?"},{"id":"The item could not be deleted.","defaultMessage":"The item could not be deleted."},{"id":"loading","defaultMessage":"Loading"},{"id":"Home","defaultMessage":"Home"},{"id":"Filter…","defaultMessage":"Filter…"},{"id":"Item(s) copied.","defaultMessage":"Item(s) copied."},{"id":"Item(s) cut.","defaultMessage":"Item(s) cut."},{"id":"Item(s) has been updated.","defaultMessage":"Item(s) has been updated."},{"id":"Item succesfully moved.","defaultMessage":"Item successfully moved."},{"id":"Item(s) pasted.","defaultMessage":"Item(s) pasted."},{"id":"Item(s) state has been updated.","defaultMessage":"Item(s) state has been updated."},{"id":"Paste","defaultMessage":"Paste"},{"id":"Properties","defaultMessage":"Properties"},{"id":"Rearrange items by…","defaultMessage":"Rearrange items by…"},{"id":"Rename","defaultMessage":"Rename"},{"id":"Select…","defaultMessage":"Select…"},{"id":"{count} selected","defaultMessage":"{count} selected"},{"id":"Select columns to show","defaultMessage":"Select columns to show"},{"id":"sort","defaultMessage":"sort"},{"id":"State","defaultMessage":"State"},{"id":"Tags","defaultMessage":"Tags"},{"id":"Upload","defaultMessage":"Upload"},{"id":"Success","defaultMessage":"Success"},{"id":"Publication date","defaultMessage":"Publication date"},{"id":"Created on","defaultMessage":"Created on"},{"id":"Expiration date","defaultMessage":"Expiration date"},{"id":"ID","defaultMessage":"ID"},{"id":"UID","defaultMessage":"UID"},{"id":"Review state","defaultMessage":"Review state"},{"id":"Folder","defaultMessage":"Folder"},{"id":"Excluded from navigation","defaultMessage":"Excluded from navigation"},{"id":"Object Size","defaultMessage":"Object Size"},{"id":"Last comment date","defaultMessage":"Last comment date"},{"id":"Total comments","defaultMessage":"Total comments"},{"id":"Creator","defaultMessage":"Creator"},{"id":"End Date","defaultMessage":"End Date"},{"id":"Start Date","defaultMessage":"Start Date"},{"id":"All","defaultMessage":"All"},{"id":"Potential link breakage","defaultMessage":"Potential link breakage"},{"id":"By deleting this item, you will break links that exist in the items listed below. If this is indeed what you want to do, we recommend that remove these references first.","defaultMessage":"By deleting this item, you will break links that exist in the items listed below. If this is indeed what you want to do, we recommend that remove these references first."},{"id":"This Page is referenced by the following items:","defaultMessage":"This Page is referenced by the following items:"},{"id":"Total items to be deleted:","defaultMessage":"Total items to be deleted:"},{"id":"Items to be deleted:","defaultMessage":"Items to be deleted:"},{"id":"Ascending","defaultMessage":"Ascending"},{"id":"Descending","defaultMessage":"Descending"},{"id":"None","defaultMessage":"None"},{"id":"Title","defaultMessage":"Title"},{"id":"Actions","defaultMessage":"Actions"}]}},"sourceType":"module","externalDependencies":[]}