{"ast":null,"code":"var _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@eeacms/volto-block-toc/src/Widgets/BlockExtensionWidget.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport { SelectWidget } from '@plone/volto/components';\nimport config from '@plone/volto/registry';\nconst BlockExtensionWidget = props => {\n  // get the block data from monkey-patched blockProps in getSchema()\n  const {\n    blockProps\n  } = props;\n  const type = blockProps.data['@type'];\n  const extensions = config.blocks.blocksConfig[type].extensions || [];\n  return __jsx(SelectWidget, _extends({}, props, {\n    choices: extensions.map(({\n      id,\n      title\n    }) => {\n      return [id, title];\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }));\n};\nexport default BlockExtensionWidget;","map":{"version":3,"names":["React","SelectWidget","config","BlockExtensionWidget","props","blockProps","type","data","extensions","blocks","blocksConfig","map","id","title"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@eeacms/volto-block-toc/src/Widgets/BlockExtensionWidget.jsx"],"sourcesContent":["import React from 'react';\nimport { SelectWidget } from '@plone/volto/components';\nimport config from '@plone/volto/registry';\n\nconst BlockExtensionWidget = (props) => {\n  // get the block data from monkey-patched blockProps in getSchema()\n  const { blockProps } = props;\n  const type = blockProps.data['@type'];\n  const extensions = config.blocks.blocksConfig[type].extensions || [];\n\n  return (\n    <SelectWidget\n      {...props}\n      choices={extensions.map(({ id, title }) => {\n        return [id, title];\n      })}\n    />\n  );\n};\n\nexport default BlockExtensionWidget;\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,yBAAyB;AACtD,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;EACtC;EACA,MAAM;IAAEC;EAAW,CAAC,GAAGD,KAAK;EAC5B,MAAME,IAAI,GAAGD,UAAU,CAACE,IAAI,CAAC,OAAO,CAAC;EACrC,MAAMC,UAAU,GAAGN,MAAM,CAACO,MAAM,CAACC,YAAY,CAACJ,IAAI,CAAC,CAACE,UAAU,IAAI,EAAE;EAEpE,OACE,MAAC,YAAY,eACPJ,KAAK;IACT,OAAO,EAAEI,UAAU,CAACG,GAAG,CAAC,CAAC;MAAEC,EAAE;MAAEC;IAAM,CAAC,KAAK;MACzC,OAAO,CAACD,EAAE,EAAEC,KAAK,CAAC;IACpB,CAAC,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACH;AAEN,CAAC;AAED,eAAeV,oBAAoB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}