{"ast":null,"code":"import _extends from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Blocks/Block/EditBlockWrapper.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Icon } from '@plone/volto/components';\nimport { blockHasValue, buildStyleClassNamesFromData } from '@plone/volto/helpers';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport { Button } from 'semantic-ui-react';\nimport includes from 'lodash/includes';\nimport isBoolean from 'lodash/isBoolean';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport config from '@plone/volto/registry';\nimport { BlockChooserButton } from '@plone/volto/components';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nconst messages = defineMessages({\n  delete: {\n    \"id\": \"delete\",\n    \"defaultMessage\": \"delete\"\n  }\n});\nconst EditBlockWrapper = props => {\n  const hideHandler = data => {\n    return !!data.fixed || !config.experimental.addBlockButton.enabled && !(blockHasValue(data) && props.blockProps.editable);\n  };\n  const {\n    intl,\n    blockProps,\n    draginfo,\n    children\n  } = props;\n  const {\n    allowedBlocks,\n    block,\n    blocksConfig,\n    selected,\n    type,\n    onChangeBlock,\n    onDeleteBlock,\n    onInsertBlock,\n    onSelectBlock,\n    onMutateBlock,\n    data,\n    editable,\n    properties,\n    showBlockChooser\n  } = blockProps;\n  const visible = selected && !hideHandler(data);\n  const required = isBoolean(data.required) ? data.required : includes(config.blocks.requiredBlocks, type);\n  const styles = buildStyleClassNamesFromData(data.styles);\n  return __jsx(\"div\", _extends({\n    ref: draginfo.innerRef\n  }, draginfo.draggableProps, {\n    // Right now, we can have the alignment information in the styles property or in the\n    // block data root, we inject the classname here for having control over the whole\n    // Block Edit wrapper\n    className: cx(`block-editor-${data['@type']}`, styles, {\n      [data.align]: data.align\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", _extends({\n    style: {\n      visibility: visible ? 'visible' : 'hidden',\n      display: 'inline-block'\n    }\n  }, draginfo.dragHandleProps, {\n    className: \"drag handle wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), __jsx(Icon, {\n    name: dragSVG,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: `ui drag block inner ${type}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, children, selected && !required && editable && __jsx(Button, {\n    icon: true,\n    basic: true,\n    onClick: () => onDeleteBlock(block, true),\n    className: \"delete-button\",\n    \"aria-label\": intl.formatMessage(messages.delete),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    name: trashSVG,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  })), config.experimental.addBlockButton.enabled && showBlockChooser && __jsx(BlockChooserButton, {\n    data: data,\n    block: block,\n    onInsertBlock: (id, value) => {\n      if (blockHasValue(data)) {\n        onSelectBlock(onInsertBlock(id, value));\n      } else {\n        onChangeBlock(id, value);\n      }\n    },\n    onMutateBlock: onMutateBlock,\n    allowedBlocks: allowedBlocks,\n    blocksConfig: blocksConfig,\n    size: \"24px\",\n    properties: properties,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }))));\n};\n_c = EditBlockWrapper;\nexport default _c2 = injectIntl(EditBlockWrapper);\nvar _c, _c2;\n$RefreshReg$(_c, \"EditBlockWrapper\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","Icon","blockHasValue","buildStyleClassNamesFromData","dragSVG","Button","includes","isBoolean","defineMessages","injectIntl","cx","config","BlockChooserButton","trashSVG","messages","delete","EditBlockWrapper","props","hideHandler","data","fixed","experimental","addBlockButton","enabled","blockProps","editable","intl","draginfo","children","allowedBlocks","block","blocksConfig","selected","type","onChangeBlock","onDeleteBlock","onInsertBlock","onSelectBlock","onMutateBlock","properties","showBlockChooser","visible","required","blocks","requiredBlocks","styles","innerRef","draggableProps","align","position","visibility","display","dragHandleProps","formatMessage","id","value"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Blocks/Block/EditBlockWrapper.jsx"],"sourcesContent":["import React from 'react';\nimport { Icon } from '@plone/volto/components';\nimport {\n  blockHasValue,\n  buildStyleClassNamesFromData,\n} from '@plone/volto/helpers';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport { Button } from 'semantic-ui-react';\nimport includes from 'lodash/includes';\nimport isBoolean from 'lodash/isBoolean';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport config from '@plone/volto/registry';\nimport { BlockChooserButton } from '@plone/volto/components';\n\nimport trashSVG from '@plone/volto/icons/delete.svg';\n\nconst messages = defineMessages({\n  delete: {\n    id: 'delete',\n    defaultMessage: 'delete',\n  },\n});\n\nconst EditBlockWrapper = (props) => {\n  const hideHandler = (data) => {\n    return (\n      !!data.fixed ||\n      (!config.experimental.addBlockButton.enabled &&\n        !(blockHasValue(data) && props.blockProps.editable))\n    );\n  };\n\n  const { intl, blockProps, draginfo, children } = props;\n  const {\n    allowedBlocks,\n    block,\n    blocksConfig,\n    selected,\n    type,\n    onChangeBlock,\n    onDeleteBlock,\n    onInsertBlock,\n    onSelectBlock,\n    onMutateBlock,\n    data,\n    editable,\n    properties,\n    showBlockChooser,\n  } = blockProps;\n  const visible = selected && !hideHandler(data);\n\n  const required = isBoolean(data.required)\n    ? data.required\n    : includes(config.blocks.requiredBlocks, type);\n\n  const styles = buildStyleClassNamesFromData(data.styles);\n\n  return (\n    <div\n      ref={draginfo.innerRef}\n      {...draginfo.draggableProps}\n      // Right now, we can have the alignment information in the styles property or in the\n      // block data root, we inject the classname here for having control over the whole\n      // Block Edit wrapper\n      className={cx(`block-editor-${data['@type']}`, styles, {\n        [data.align]: data.align,\n      })}\n    >\n      <div style={{ position: 'relative' }}>\n        <div\n          style={{\n            visibility: visible ? 'visible' : 'hidden',\n            display: 'inline-block',\n          }}\n          {...draginfo.dragHandleProps}\n          className=\"drag handle wrapper\"\n        >\n          <Icon name={dragSVG} size=\"18px\" />\n        </div>\n        <div className={`ui drag block inner ${type}`}>\n          {children}\n          {selected && !required && editable && (\n            <Button\n              icon\n              basic\n              onClick={() => onDeleteBlock(block, true)}\n              className=\"delete-button\"\n              aria-label={intl.formatMessage(messages.delete)}\n            >\n              <Icon name={trashSVG} size=\"18px\" />\n            </Button>\n          )}\n          {config.experimental.addBlockButton.enabled && showBlockChooser && (\n            <BlockChooserButton\n              data={data}\n              block={block}\n              onInsertBlock={(id, value) => {\n                if (blockHasValue(data)) {\n                  onSelectBlock(onInsertBlock(id, value));\n                } else {\n                  onChangeBlock(id, value);\n                }\n              }}\n              onMutateBlock={onMutateBlock}\n              allowedBlocks={allowedBlocks}\n              blocksConfig={blocksConfig}\n              size=\"24px\"\n              properties={properties}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default injectIntl(EditBlockWrapper);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"delete","defaultMessage":"delete"}]}},"sourceType":"module","externalDependencies":[]}