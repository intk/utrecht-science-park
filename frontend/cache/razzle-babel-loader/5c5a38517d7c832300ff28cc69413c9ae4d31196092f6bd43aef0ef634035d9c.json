{"ast":null,"code":"var _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/theme/View/View.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/**\n * View container.\n * @module components/theme/View/View\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { injectIntl } from 'react-intl';\nimport qs from 'query-string';\nimport { ContentMetadataTags, Comments, Tags, Toolbar } from '@plone/volto/components';\nimport { listActions, getContent } from '@plone/volto/actions';\nimport { BodyClass, getBaseUrl, flattenToAppURL, getLayoutFieldname, hasApiExpander } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\n/**\n * View container class.\n * @class View\n * @extends Component\n */\nclass View extends Component {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"state\", {\n      hasObjectButtons: null,\n      isClient: false\n    });\n    _defineProperty(this, \"getViewDefault\", () => config.views.defaultView);\n    _defineProperty(this, \"getViewByType\", () => config.views.contentTypesViews[this.props.content['@type']] || null);\n    _defineProperty(this, \"getViewByLayout\", () => config.views.layoutViews[this.props.content[getLayoutFieldname(this.props.content)]] || null);\n    _defineProperty(this, \"cleanViewName\", dirtyDisplayName => dirtyDisplayName.replace('Connect(', '').replace('injectIntl(', '').replace(')', '').replace('connect(', '').toLowerCase());\n  }\n  componentDidMount() {\n    // Do not trigger the actions action if the expander is present\n    if (!hasApiExpander('actions', getBaseUrl(this.props.pathname))) {\n      this.props.listActions(getBaseUrl(this.props.pathname));\n    }\n    this.props.getContent(getBaseUrl(this.props.pathname), this.props.versionId);\n    this.setState({\n      isClient: true\n    });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      // Do not trigger the actions action if the expander is present\n      if (!hasApiExpander('actions', getBaseUrl(nextProps.pathname))) {\n        this.props.listActions(getBaseUrl(nextProps.pathname));\n      }\n      this.props.getContent(getBaseUrl(nextProps.pathname), this.props.versionId);\n    }\n    if (nextProps.actions.object_buttons) {\n      const objectButtons = nextProps.actions.object_buttons;\n      this.setState({\n        hasObjectButtons: !!objectButtons.length\n      });\n    }\n  }\n\n  /**\n   * Default fallback view\n   * @method getViewDefault\n   * @returns {string} Markup for component.\n   */\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      views\n    } = config;\n    if (this.props.error && this.props.error.code === 301) {\n      const redirect = flattenToAppURL(this.props.error.url).split('?')[0];\n      return __jsx(Redirect, {\n        to: `${redirect}${this.props.location.search}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 14\n        }\n      });\n    } else if (this.props.error && !this.props.connectionRefused) {\n      let FoundView;\n      if (this.props.error.status === undefined) {\n        // For some reason, while development and if CORS is in place and the\n        // requested resource is 404, it returns undefined as status, then the\n        // next statement will fail\n        FoundView = views.errorViews.corsError;\n      } else {\n        FoundView = views.errorViews[this.props.error.status.toString()];\n      }\n      if (!FoundView) {\n        FoundView = views.errorViews['404']; // default to 404\n      }\n\n      return __jsx(\"div\", {\n        id: \"view\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }\n      }, __jsx(FoundView, _extends({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }\n      })));\n    }\n    if (!this.props.content) {\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 14\n        }\n      });\n    }\n    const RenderedView = this.getViewByLayout() || this.getViewByType() || this.getViewDefault();\n    return __jsx(\"div\", {\n      id: \"view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }\n    }, __jsx(ContentMetadataTags, {\n      content: this.props.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }\n    }), __jsx(BodyClass, {\n      className: RenderedView.displayName ? `view-${this.cleanViewName(RenderedView.displayName)}` : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }\n    }), __jsx(RenderedView, {\n      key: this.props.content['@id'],\n      content: this.props.content,\n      location: this.props.location,\n      token: this.props.token,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }\n    }), config.settings.showTags && this.props.content.subjects && this.props.content.subjects.length > 0 && __jsx(Tags, {\n      tags: this.props.content.subjects,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }\n    }), this.props.content.allow_discussion && __jsx(Comments, {\n      pathname: this.props.pathname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }\n    }), this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('toolbar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }\n    }, __jsx(Toolbar, {\n      pathname: this.props.pathname,\n      inner: __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 60\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 13\n      }\n    })));\n  }\n}\n_defineProperty(View, \"propTypes\", {\n  actions: PropTypes.shape({\n    object: PropTypes.arrayOf(PropTypes.object),\n    object_buttons: PropTypes.arrayOf(PropTypes.object),\n    user: PropTypes.arrayOf(PropTypes.object)\n  }),\n  listActions: PropTypes.func.isRequired,\n  /**\n   * Action to get the content\n   */\n  getContent: PropTypes.func.isRequired,\n  /**\n   * Pathname of the object\n   */\n  pathname: PropTypes.string.isRequired,\n  location: PropTypes.shape({\n    search: PropTypes.string,\n    pathname: PropTypes.string\n  }).isRequired,\n  /**\n   * Version id of the object\n   */\n  versionId: PropTypes.string,\n  /**\n   * Content of the object\n   */\n  content: PropTypes.shape({\n    /**\n     * Layout of the object\n     */\n    layout: PropTypes.string,\n    /**\n     * Allow discussion of the object\n     */\n    allow_discussion: PropTypes.bool,\n    /**\n     * Title of the object\n     */\n    title: PropTypes.string,\n    /**\n     * Description of the object\n     */\n    description: PropTypes.string,\n    /**\n     * Type of the object\n     */\n    '@type': PropTypes.string,\n    /**\n     * Subjects of the object\n     */\n    subjects: PropTypes.arrayOf(PropTypes.string),\n    is_folderish: PropTypes.bool\n  }),\n  error: PropTypes.shape({\n    /**\n     * Error type\n     */\n    status: PropTypes.number\n  })\n});\n_defineProperty(View, \"defaultProps\", {\n  actions: null,\n  content: null,\n  versionId: null,\n  error: null\n});\nexport default compose(injectIntl, connect((state, props) => ({\n  actions: state.actions.actions,\n  token: state.userSession.token,\n  content: state.content.data,\n  error: state.content.get.error,\n  apiError: state.apierror.error,\n  connectionRefused: state.apierror.connectionRefused,\n  pathname: props.location.pathname,\n  versionId: qs.parse(props.location.search) && qs.parse(props.location.search).version\n}), {\n  listActions,\n  getContent\n}))(View);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Redirect","Portal","injectIntl","qs","ContentMetadataTags","Comments","Tags","Toolbar","listActions","getContent","BodyClass","getBaseUrl","flattenToAppURL","getLayoutFieldname","hasApiExpander","config","View","hasObjectButtons","isClient","views","defaultView","contentTypesViews","props","content","layoutViews","dirtyDisplayName","replace","toLowerCase","componentDidMount","pathname","versionId","setState","UNSAFE_componentWillReceiveProps","nextProps","actions","object_buttons","objectButtons","length","render","error","code","redirect","url","split","location","search","connectionRefused","FoundView","status","undefined","errorViews","corsError","toString","RenderedView","getViewByLayout","getViewByType","getViewDefault","displayName","cleanViewName","token","history","settings","showTags","subjects","allow_discussion","state","document","getElementById","shape","object","arrayOf","user","func","isRequired","string","layout","bool","title","description","is_folderish","number","userSession","data","get","apiError","apierror","parse","version"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/theme/View/View.jsx"],"sourcesContent":["/**\n * View container.\n * @module components/theme/View/View\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { injectIntl } from 'react-intl';\nimport qs from 'query-string';\n\nimport {\n  ContentMetadataTags,\n  Comments,\n  Tags,\n  Toolbar,\n} from '@plone/volto/components';\nimport { listActions, getContent } from '@plone/volto/actions';\nimport {\n  BodyClass,\n  getBaseUrl,\n  flattenToAppURL,\n  getLayoutFieldname,\n  hasApiExpander,\n} from '@plone/volto/helpers';\n\nimport config from '@plone/volto/registry';\n\n/**\n * View container class.\n * @class View\n * @extends Component\n */\nclass View extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    actions: PropTypes.shape({\n      object: PropTypes.arrayOf(PropTypes.object),\n      object_buttons: PropTypes.arrayOf(PropTypes.object),\n      user: PropTypes.arrayOf(PropTypes.object),\n    }),\n    listActions: PropTypes.func.isRequired,\n    /**\n     * Action to get the content\n     */\n    getContent: PropTypes.func.isRequired,\n    /**\n     * Pathname of the object\n     */\n    pathname: PropTypes.string.isRequired,\n    location: PropTypes.shape({\n      search: PropTypes.string,\n      pathname: PropTypes.string,\n    }).isRequired,\n    /**\n     * Version id of the object\n     */\n    versionId: PropTypes.string,\n    /**\n     * Content of the object\n     */\n    content: PropTypes.shape({\n      /**\n       * Layout of the object\n       */\n      layout: PropTypes.string,\n      /**\n       * Allow discussion of the object\n       */\n      allow_discussion: PropTypes.bool,\n      /**\n       * Title of the object\n       */\n      title: PropTypes.string,\n      /**\n       * Description of the object\n       */\n      description: PropTypes.string,\n      /**\n       * Type of the object\n       */\n      '@type': PropTypes.string,\n      /**\n       * Subjects of the object\n       */\n      subjects: PropTypes.arrayOf(PropTypes.string),\n      is_folderish: PropTypes.bool,\n    }),\n    error: PropTypes.shape({\n      /**\n       * Error type\n       */\n      status: PropTypes.number,\n    }),\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    actions: null,\n    content: null,\n    versionId: null,\n    error: null,\n  };\n\n  state = {\n    hasObjectButtons: null,\n    isClient: false,\n  };\n\n  componentDidMount() {\n    // Do not trigger the actions action if the expander is present\n    if (!hasApiExpander('actions', getBaseUrl(this.props.pathname))) {\n      this.props.listActions(getBaseUrl(this.props.pathname));\n    }\n    this.props.getContent(\n      getBaseUrl(this.props.pathname),\n      this.props.versionId,\n    );\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      // Do not trigger the actions action if the expander is present\n      if (!hasApiExpander('actions', getBaseUrl(nextProps.pathname))) {\n        this.props.listActions(getBaseUrl(nextProps.pathname));\n      }\n      this.props.getContent(\n        getBaseUrl(nextProps.pathname),\n        this.props.versionId,\n      );\n    }\n\n    if (nextProps.actions.object_buttons) {\n      const objectButtons = nextProps.actions.object_buttons;\n      this.setState({\n        hasObjectButtons: !!objectButtons.length,\n      });\n    }\n  }\n\n  /**\n   * Default fallback view\n   * @method getViewDefault\n   * @returns {string} Markup for component.\n   */\n  getViewDefault = () => config.views.defaultView;\n\n  /**\n   * Get view by content type\n   * @method getViewByType\n   * @returns {string} Markup for component.\n   */\n  getViewByType = () =>\n    config.views.contentTypesViews[this.props.content['@type']] || null;\n\n  /**\n   * Get view by content layout property\n   * @method getViewByLayout\n   * @returns {string} Markup for component.\n   */\n  getViewByLayout = () =>\n    config.views.layoutViews[\n      this.props.content[getLayoutFieldname(this.props.content)]\n    ] || null;\n\n  /**\n   * Cleans the component displayName (specially for connected components)\n   * which have the Connect(componentDisplayName)\n   * @method cleanViewName\n   * @param  {string} dirtyDisplayName The displayName\n   * @returns {string} Clean displayName (no Connect(...)).\n   */\n  cleanViewName = (dirtyDisplayName) =>\n    dirtyDisplayName\n      .replace('Connect(', '')\n      .replace('injectIntl(', '')\n      .replace(')', '')\n      .replace('connect(', '')\n      .toLowerCase();\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { views } = config;\n    if (this.props.error && this.props.error.code === 301) {\n      const redirect = flattenToAppURL(this.props.error.url).split('?')[0];\n      return <Redirect to={`${redirect}${this.props.location.search}`} />;\n    } else if (this.props.error && !this.props.connectionRefused) {\n      let FoundView;\n      if (this.props.error.status === undefined) {\n        // For some reason, while development and if CORS is in place and the\n        // requested resource is 404, it returns undefined as status, then the\n        // next statement will fail\n        FoundView = views.errorViews.corsError;\n      } else {\n        FoundView = views.errorViews[this.props.error.status.toString()];\n      }\n      if (!FoundView) {\n        FoundView = views.errorViews['404']; // default to 404\n      }\n      return (\n        <div id=\"view\">\n          <FoundView {...this.props} />\n        </div>\n      );\n    }\n    if (!this.props.content) {\n      return <span />;\n    }\n    const RenderedView =\n      this.getViewByLayout() || this.getViewByType() || this.getViewDefault();\n\n    return (\n      <div id=\"view\">\n        <ContentMetadataTags content={this.props.content} />\n        {/* Body class if displayName in component is set */}\n        <BodyClass\n          className={\n            RenderedView.displayName\n              ? `view-${this.cleanViewName(RenderedView.displayName)}`\n              : null\n          }\n        />\n        <RenderedView\n          key={this.props.content['@id']}\n          content={this.props.content}\n          location={this.props.location}\n          token={this.props.token}\n          history={this.props.history}\n        />\n        {config.settings.showTags &&\n          this.props.content.subjects &&\n          this.props.content.subjects.length > 0 && (\n            <Tags tags={this.props.content.subjects} />\n          )}\n        {/* Add opt-in social sharing if required, disabled by default */}\n        {/* In the future this might be parameterized from the app config */}\n        {/* <SocialSharing\n          url={typeof window === 'undefined' ? '' : window.location.href}\n          title={this.props.content.title}\n          description={this.props.content.description || ''}\n        /> */}\n        {this.props.content.allow_discussion && (\n          <Comments pathname={this.props.pathname} />\n        )}\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar pathname={this.props.pathname} inner={<span />} />\n          </Portal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      actions: state.actions.actions,\n      token: state.userSession.token,\n      content: state.content.data,\n      error: state.content.get.error,\n      apiError: state.apierror.error,\n      connectionRefused: state.apierror.connectionRefused,\n      pathname: props.location.pathname,\n      versionId:\n        qs.parse(props.location.search) &&\n        qs.parse(props.location.search).version,\n    }),\n    {\n      listActions,\n      getContent,\n    },\n  ),\n)(View);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}