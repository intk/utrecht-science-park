{"ast":null,"code":"export const getOSName = () => {\n  const userAgent = window.navigator.userAgent;\n  const platform = window.navigator.platform;\n  const macPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'];\n  const windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'];\n  const iosPlatforms = ['iPhone', 'iPad', 'iPod'];\n  const mobilePlatforms = ['Android', 'webOS', 'Blackberry', 'WindowsPhone', 'WindowsCE', 'Symbian'];\n  if (macPlatforms.indexOf(platform) !== -1) {\n    return 'mac';\n  } else if (iosPlatforms.indexOf(platform) !== -1) {\n    return 'ios';\n  } else if (windowsPlatforms.indexOf(platform) !== -1) {\n    return 'windows';\n  } else if (/Android/.test(userAgent)) {\n    return 'android';\n  } else if (/Linux/.test(platform)) {\n    return 'linux';\n  } else if (mobilePlatforms.some(mp => userAgent.indexOf(mp) !== -1)) {\n    return 'mobile';\n  } else {\n    return 'unknown';\n  }\n};\nexport const detectTouchScreen = () => {\n  let hasTouchScreen = false;\n  if ('maxTouchPoints' in navigator) {\n    hasTouchScreen = navigator.maxTouchPoints > 0;\n  } else if ('msMaxTouchPoints' in navigator) {\n    hasTouchScreen = navigator.msMaxTouchPoints > 0;\n  } else {\n    // fallback\n    if ('ontouchstart' in window || window.TouchEvent) {\n      hasTouchScreen = true;\n    } else {\n      hasTouchScreen = /Mobi|Android/i.test(navigator.userAgent);\n    }\n  }\n  return hasTouchScreen;\n};\nexport const getBrowserToolbarWidth = () => {\n  return window.screen.height - window.screen.availHeight + window.outerHeight - window.innerHeight;\n};","map":{"version":3,"names":["getOSName","userAgent","window","navigator","platform","macPlatforms","windowsPlatforms","iosPlatforms","mobilePlatforms","indexOf","test","some","mp","detectTouchScreen","hasTouchScreen","maxTouchPoints","msMaxTouchPoints","TouchEvent","getBrowserToolbarWidth","screen","height","availHeight","outerHeight","innerHeight"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@eeacms/volto-resize-helper/src/utils.js"],"sourcesContent":["export const getOSName = () => {\n  const userAgent = window.navigator.userAgent;\n  const platform = window.navigator.platform;\n  const macPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'];\n  const windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'];\n  const iosPlatforms = ['iPhone', 'iPad', 'iPod'];\n  const mobilePlatforms = [\n    'Android',\n    'webOS',\n    'Blackberry',\n    'WindowsPhone',\n    'WindowsCE',\n    'Symbian',\n  ];\n\n  if (macPlatforms.indexOf(platform) !== -1) {\n    return 'mac';\n  } else if (iosPlatforms.indexOf(platform) !== -1) {\n    return 'ios';\n  } else if (windowsPlatforms.indexOf(platform) !== -1) {\n    return 'windows';\n  } else if (/Android/.test(userAgent)) {\n    return 'android';\n  } else if (/Linux/.test(platform)) {\n    return 'linux';\n  } else if (mobilePlatforms.some((mp) => userAgent.indexOf(mp) !== -1)) {\n    return 'mobile';\n  } else {\n    return 'unknown';\n  }\n};\n\nexport const detectTouchScreen = () => {\n  let hasTouchScreen = false;\n  if ('maxTouchPoints' in navigator) {\n    hasTouchScreen = navigator.maxTouchPoints > 0;\n  } else if ('msMaxTouchPoints' in navigator) {\n    hasTouchScreen = navigator.msMaxTouchPoints > 0;\n  } else {\n    // fallback\n    if ('ontouchstart' in window || window.TouchEvent) {\n      hasTouchScreen = true;\n    } else {\n      hasTouchScreen = /Mobi|Android/i.test(navigator.userAgent);\n    }\n  }\n  return hasTouchScreen;\n};\n\nexport const getBrowserToolbarWidth = () => {\n  return (\n    window.screen.height -\n    window.screen.availHeight +\n    window.outerHeight -\n    window.innerHeight\n  );\n};\n"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,MAAM;EAC7B,MAAMC,SAAS,GAAGC,MAAM,CAACC,SAAS,CAACF,SAAS;EAC5C,MAAMG,QAAQ,GAAGF,MAAM,CAACC,SAAS,CAACC,QAAQ;EAC1C,MAAMC,YAAY,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,CAAC;EAClE,MAAMC,gBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC;EAC/D,MAAMC,YAAY,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC;EAC/C,MAAMC,eAAe,GAAG,CACtB,SAAS,EACT,OAAO,EACP,YAAY,EACZ,cAAc,EACd,WAAW,EACX,SAAS,CACV;EAED,IAAIH,YAAY,CAACI,OAAO,CAACL,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;IACzC,OAAO,KAAK;EACd,CAAC,MAAM,IAAIG,YAAY,CAACE,OAAO,CAACL,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;IAChD,OAAO,KAAK;EACd,CAAC,MAAM,IAAIE,gBAAgB,CAACG,OAAO,CAACL,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;IACpD,OAAO,SAAS;EAClB,CAAC,MAAM,IAAI,SAAS,CAACM,IAAI,CAACT,SAAS,CAAC,EAAE;IACpC,OAAO,SAAS;EAClB,CAAC,MAAM,IAAI,OAAO,CAACS,IAAI,CAACN,QAAQ,CAAC,EAAE;IACjC,OAAO,OAAO;EAChB,CAAC,MAAM,IAAII,eAAe,CAACG,IAAI,CAAEC,EAAE,IAAKX,SAAS,CAACQ,OAAO,CAACG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;IACrE,OAAO,QAAQ;EACjB,CAAC,MAAM;IACL,OAAO,SAAS;EAClB;AACF,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAM;EACrC,IAAIC,cAAc,GAAG,KAAK;EAC1B,IAAI,gBAAgB,IAAIX,SAAS,EAAE;IACjCW,cAAc,GAAGX,SAAS,CAACY,cAAc,GAAG,CAAC;EAC/C,CAAC,MAAM,IAAI,kBAAkB,IAAIZ,SAAS,EAAE;IAC1CW,cAAc,GAAGX,SAAS,CAACa,gBAAgB,GAAG,CAAC;EACjD,CAAC,MAAM;IACL;IACA,IAAI,cAAc,IAAId,MAAM,IAAIA,MAAM,CAACe,UAAU,EAAE;MACjDH,cAAc,GAAG,IAAI;IACvB,CAAC,MAAM;MACLA,cAAc,GAAG,eAAe,CAACJ,IAAI,CAACP,SAAS,CAACF,SAAS,CAAC;IAC5D;EACF;EACA,OAAOa,cAAc;AACvB,CAAC;AAED,OAAO,MAAMI,sBAAsB,GAAG,MAAM;EAC1C,OACEhB,MAAM,CAACiB,MAAM,CAACC,MAAM,GACpBlB,MAAM,CAACiB,MAAM,CAACE,WAAW,GACzBnB,MAAM,CAACoB,WAAW,GAClBpB,MAAM,CAACqB,WAAW;AAEtB,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}