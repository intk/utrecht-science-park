{"ast":null,"code":"var _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-form-block/src/components/Widget/NoRobotsCaptchaWidget.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Grid } from 'semantic-ui-react';\nimport TextWidget from '@plone/volto/components/manage/Widgets/TextWidget';\nconst messages = defineMessages({\n  resolveCaptcha: {\n    \"id\": \"resolveCaptcha\",\n    \"defaultMessage\": \"Answer the question to prove that you are human\"\n  }\n});\nconst NoRobotsCaptchaWidget = ({\n  id,\n  id_check,\n  title,\n  captchaToken\n}) => {\n  const createToken = (id, id_check, value) => {\n    const token = {\n      id: id,\n      id_check: id_check,\n      value: value\n    };\n    return JSON.stringify(token);\n  };\n  const intl = useIntl();\n  const {\n    0: value,\n    1: setValue\n  } = useState();\n  return __jsx(Grid.Row, {\n    key: 'row-captcha',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(TextWidget, {\n    id: \"captcha\",\n    name: \"captcha\",\n    label: title,\n    title: title,\n    description: intl.formatMessage(messages.resolveCaptcha),\n    onChange: (field, value) => {\n      captchaToken.current = createToken(id, id_check, value);\n      setValue(value);\n    },\n    required: true,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })));\n};\nexport default NoRobotsCaptchaWidget;","map":{"version":3,"names":["React","useState","defineMessages","useIntl","Grid","TextWidget","messages","resolveCaptcha","NoRobotsCaptchaWidget","id","id_check","title","captchaToken","createToken","value","token","JSON","stringify","intl","setValue","formatMessage","field","current"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-form-block/src/components/Widget/NoRobotsCaptchaWidget.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Grid } from 'semantic-ui-react';\nimport TextWidget from '@plone/volto/components/manage/Widgets/TextWidget';\n\nconst messages = defineMessages({\n  resolveCaptcha: {\n    id: 'resolveCaptcha',\n    defaultMessage: 'Answer the question to prove that you are human',\n  },\n});\n\nconst NoRobotsCaptchaWidget = ({ id, id_check, title, captchaToken }) => {\n  const createToken = (id, id_check, value) => {\n    const token = {\n      id: id,\n      id_check: id_check,\n      value: value,\n    };\n    return JSON.stringify(token);\n  };\n  const intl = useIntl();\n  const [value, setValue] = useState();\n\n  return (\n    <Grid.Row key={'row-captcha'}>\n      <Grid.Column>\n        <TextWidget\n          id=\"captcha\"\n          name=\"captcha\"\n          label={title}\n          title={title}\n          description={intl.formatMessage(messages.resolveCaptcha)}\n          onChange={(field, value) => {\n            captchaToken.current = createToken(id, id_check, value);\n            setValue(value);\n          }}\n          required={true}\n          value={value}\n        />\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\n\nexport default NoRobotsCaptchaWidget;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,EAAEC,OAAO,QAAQ,YAAY;AACpD,SAASC,IAAI,QAAQ,mBAAmB;AACxC,OAAOC,UAAU,MAAM,mDAAmD;AAE1E,MAAMC,QAAQ,GAAGJ,cAAc,CAAC;EAC9BK,cAAc;IAAA;IAAA;EAAA;AAIhB,CAAC,CAAC;AAEF,MAAMC,qBAAqB,GAAG,CAAC;EAAEC,EAAE;EAAEC,QAAQ;EAAEC,KAAK;EAAEC;AAAa,CAAC,KAAK;EACvE,MAAMC,WAAW,GAAG,CAACJ,EAAE,EAAEC,QAAQ,EAAEI,KAAK,KAAK;IAC3C,MAAMC,KAAK,GAAG;MACZN,EAAE,EAAEA,EAAE;MACNC,QAAQ,EAAEA,QAAQ;MAClBI,KAAK,EAAEA;IACT,CAAC;IACD,OAAOE,IAAI,CAACC,SAAS,CAACF,KAAK,CAAC;EAC9B,CAAC;EACD,MAAMG,IAAI,GAAGf,OAAO,EAAE;EACtB,MAAM;IAAA,GAACW,KAAK;IAAA,GAAEK;EAAQ,IAAIlB,QAAQ,EAAE;EAEpC,OACE,MAAC,IAAI,CAAC,GAAG;IAAC,GAAG,EAAE,aAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC3B,MAAC,IAAI,CAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACV,MAAC,UAAU;IACT,EAAE,EAAC,SAAS;IACZ,IAAI,EAAC,SAAS;IACd,KAAK,EAAEU,KAAM;IACb,KAAK,EAAEA,KAAM;IACb,WAAW,EAAEO,IAAI,CAACE,aAAa,CAACd,QAAQ,CAACC,cAAc,CAAE;IACzD,QAAQ,EAAE,CAACc,KAAK,EAAEP,KAAK,KAAK;MAC1BF,YAAY,CAACU,OAAO,GAAGT,WAAW,CAACJ,EAAE,EAAEC,QAAQ,EAAEI,KAAK,CAAC;MACvDK,QAAQ,CAACL,KAAK,CAAC;IACjB,CAAE;IACF,QAAQ,EAAE,IAAK;IACf,KAAK,EAAEA,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACb,CACU,CACL;AAEf,CAAC;AAED,eAAeN,qBAAqB"},"metadata":{"react-intl":{"messages":[{"id":"resolveCaptcha","defaultMessage":"Answer the question to prove that you are human"}]}},"sourceType":"module","externalDependencies":[]}