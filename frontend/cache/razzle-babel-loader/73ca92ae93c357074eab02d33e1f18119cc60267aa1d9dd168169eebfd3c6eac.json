{"ast":null,"code":"import _extends from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _defineProperty from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/theme/App/App.jsx\";\nvar __jsx = React.createElement;\n/**\n * App container.\n * @module components/theme/App/App\n */\n\nimport React, { Component } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { asyncConnect, Helmet } from '@plone/volto/helpers';\nimport { Segment } from 'semantic-ui-react';\nimport { renderRoutes } from 'react-router-config';\nimport { Slide, ToastContainer, toast } from 'react-toastify';\nimport split from 'lodash/split';\nimport join from 'lodash/join';\nimport trim from 'lodash/trim';\nimport cx from 'classnames';\nimport config from '@plone/volto/registry';\nimport { PluggablesProvider } from '@plone/volto/components/manage/Pluggable';\nimport { visitBlocks } from '@plone/volto/helpers/Blocks/Blocks';\nimport { injectIntl } from 'react-intl';\nimport Error from '@plone/volto/error';\nimport { Breadcrumbs, Footer, Header, Icon, OutdatedBrowser, AppExtras, SkipLinks } from '@plone/volto/components';\nimport { BodyClass, getBaseUrl, getView, hasApiExpander, isCmsUi } from '@plone/volto/helpers';\nimport { getBreadcrumbs, getContent, getNavigation, getTypes, getWorkflow } from '@plone/volto/actions';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport MultilingualRedirector from '@plone/volto/components/theme/MultilingualRedirector/MultilingualRedirector';\nimport WorkingCopyToastsFactory from '@plone/volto/components/manage/WorkingCopyToastsFactory/WorkingCopyToastsFactory';\nimport LockingToastsFactory from '@plone/volto/components/manage/LockingToastsFactory/LockingToastsFactory';\n\n/**\n * @export\n * @class App\n * @extends {Component}\n */\nexport class App extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"state\", {\n      hasError: false,\n      error: null,\n      errorInfo: null\n    });\n    _defineProperty(this, \"dispatchContentClick\", event => {\n      if (event.target === event.currentTarget) {\n        const rect = this.mainRef.current.getBoundingClientRect();\n        if (event.clientY > rect.bottom) {\n          document.dispatchEvent(new Event('voltoClickBelowContent'));\n        }\n      }\n    });\n    this.mainRef = /*#__PURE__*/React.createRef();\n  }\n\n  /**\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      if (this.state.hasError) {\n        this.setState({\n          hasError: false\n        });\n      }\n    }\n  }\n\n  /**\n   * ComponentDidCatch\n   * @method ComponentDidCatch\n   * @param {string} error  The error\n   * @param {string} info The info\n   * @returns {undefined}\n   */\n  componentDidCatch(error, info) {\n    this.setState({\n      hasError: true,\n      error,\n      errorInfo: info\n    });\n    config.settings.errorHandlers.forEach(handler => handler(error));\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _this$props$content$l, _this$props$content, _this$props$content$l2, _this$props$intl, _this$props$content2, _this$props$content2$;\n    const {\n      views\n    } = config;\n    const path = getBaseUrl(this.props.pathname);\n    const action = getView(this.props.pathname);\n    const isCmsUI = isCmsUi(this.props.pathname);\n    const ConnectionRefusedView = views.errorViews.ECONNREFUSED;\n    const language = (_this$props$content$l = (_this$props$content = this.props.content) === null || _this$props$content === void 0 ? void 0 : (_this$props$content$l2 = _this$props$content.language) === null || _this$props$content$l2 === void 0 ? void 0 : _this$props$content$l2.token) !== null && _this$props$content$l !== void 0 ? _this$props$content$l : (_this$props$intl = this.props.intl) === null || _this$props$intl === void 0 ? void 0 : _this$props$intl.locale;\n    return __jsx(PluggablesProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, language && __jsx(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, __jsx(\"html\", {\n      lang: language,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    })), __jsx(BodyClass, {\n      className: `view-${action}view`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }), this.props.content && this.props.content['@type'] && __jsx(BodyClass, {\n      className: `contenttype-${this.props.content['@type'].replace(' ', '-').toLowerCase()}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }), __jsx(BodyClass, {\n      className: cx({\n        [trim(join(split(this.props.pathname, '/'), ' section-'))]: this.props.pathname !== '/',\n        siteroot: this.props.pathname === '/',\n        'is-authenticated': !!this.props.token,\n        'is-anonymous': !this.props.token,\n        'cms-ui': isCmsUI,\n        'public-ui': !isCmsUI\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }), __jsx(SkipLinks, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }), __jsx(Header, {\n      pathname: path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }), __jsx(Breadcrumbs, {\n      pathname: path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }), __jsx(MultilingualRedirector, {\n      pathname: this.props.pathname,\n      contentLanguage: (_this$props$content2 = this.props.content) === null || _this$props$content2 === void 0 ? void 0 : (_this$props$content2$ = _this$props$content2.language) === null || _this$props$content2$ === void 0 ? void 0 : _this$props$content2$.token,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, __jsx(Segment, {\n      basic: true,\n      className: \"content-area\",\n      onClick: this.dispatchContentClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }, __jsx(\"main\", {\n      ref: this.mainRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, __jsx(OutdatedBrowser, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }), this.props.connectionRefused ? __jsx(ConnectionRefusedView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }) : this.state.hasError ? __jsx(Error, {\n      message: this.state.error.message,\n      stackTrace: this.state.errorInfo.componentStack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }) : renderRoutes(this.props.route.routes, {\n      staticContext: this.props.staticContext\n    })))), __jsx(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }), __jsx(LockingToastsFactory, {\n      content: this.props.content,\n      user: this.props.userId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }), __jsx(WorkingCopyToastsFactory, {\n      content: this.props.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }\n    }), __jsx(ToastContainer, {\n      position: toast.POSITION.BOTTOM_CENTER,\n      hideProgressBar: true,\n      transition: Slide,\n      autoClose: 5000,\n      closeButton: __jsx(Icon, {\n        className: \"toast-dismiss-action\",\n        name: clearSVG,\n        size: \"18px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }), __jsx(AppExtras, _extends({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    })));\n  }\n}\n_defineProperty(App, \"propTypes\", {\n  pathname: PropTypes.string.isRequired\n});\nexport const __test__ = connect((state, props) => ({\n  pathname: props.location.pathname,\n  token: state.userSession.token,\n  content: state.content.data,\n  apiError: state.apierror.error,\n  connectionRefused: state.apierror.connectionRefused\n}), {})(App);\nexport const fetchContent = async _ref => {\n  let {\n    store,\n    location\n  } = _ref;\n  const content = await store.dispatch(getContent(getBaseUrl(location.pathname)));\n  const promises = [];\n  const {\n    blocksConfig\n  } = config.blocks;\n  const visitor = _ref2 => {\n    let [id, data] = _ref2;\n    const blockType = data['@type'];\n    const {\n      getAsyncData\n    } = blocksConfig[blockType];\n    if (getAsyncData) {\n      const p = getAsyncData({\n        store,\n        dispatch: store.dispatch,\n        path: location.pathname,\n        location,\n        id,\n        data,\n        blocksConfig\n      });\n      if (!(p !== null && p !== void 0 && p.length)) {\n        throw new Error('You should return a list of promises from getAsyncData');\n      }\n      promises.push(...p);\n    }\n  };\n  visitBlocks(content, visitor);\n  await Promise.allSettled(promises);\n  return content;\n};\nexport function connectAppComponent(AppComponent) {\n  return compose(asyncConnect([{\n    key: 'breadcrumbs',\n    promise: _ref3 => {\n      let {\n        location,\n        store: {\n          dispatch\n        }\n      } = _ref3;\n      // Do not trigger the breadcrumbs action if the expander is present\n      if (__SERVER__ && !hasApiExpander('breadcrumbs', getBaseUrl(location.pathname))) {\n        return dispatch(getBreadcrumbs(getBaseUrl(location.pathname)));\n      }\n    }\n  }, {\n    key: 'content',\n    promise: _ref4 => {\n      let {\n        location,\n        store\n      } = _ref4;\n      return __SERVER__ && fetchContent({\n        store,\n        location\n      });\n    }\n  }, {\n    key: 'navigation',\n    promise: _ref5 => {\n      let {\n        location,\n        store: {\n          dispatch\n        }\n      } = _ref5;\n      // Do not trigger the navigation action if the expander is present\n      if (__SERVER__ && !hasApiExpander('navigation', getBaseUrl(location.pathname))) {\n        return dispatch(getNavigation(getBaseUrl(location.pathname), config.settings.navDepth));\n      }\n    }\n  }, {\n    key: 'types',\n    promise: _ref6 => {\n      let {\n        location,\n        store: {\n          dispatch\n        }\n      } = _ref6;\n      // Do not trigger the types action if the expander is present\n      if (__SERVER__ && !hasApiExpander('types', getBaseUrl(location.pathname))) {\n        return dispatch(getTypes(getBaseUrl(location.pathname)));\n      }\n    }\n  }, {\n    key: 'workflow',\n    promise: _ref7 => {\n      let {\n        location,\n        store: {\n          dispatch\n        }\n      } = _ref7;\n      return __SERVER__ && dispatch(getWorkflow(getBaseUrl(location.pathname)));\n    }\n  }]), injectIntl, connect((state, props) => ({\n    pathname: props.location.pathname,\n    token: state.userSession.token,\n    userId: state.userSession.token ? jwtDecode(state.userSession.token).sub : '',\n    content: state.content.data,\n    apiError: state.apierror.error,\n    connectionRefused: state.apierror.connectionRefused\n  }), null))(AppComponent);\n}\nexport default _c = connectAppComponent(App);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Component","jwtDecode","PropTypes","connect","compose","asyncConnect","Helmet","Segment","renderRoutes","Slide","ToastContainer","toast","split","join","trim","cx","config","PluggablesProvider","visitBlocks","injectIntl","Error","Breadcrumbs","Footer","Header","Icon","OutdatedBrowser","AppExtras","SkipLinks","BodyClass","getBaseUrl","getView","hasApiExpander","isCmsUi","getBreadcrumbs","getContent","getNavigation","getTypes","getWorkflow","clearSVG","MultilingualRedirector","WorkingCopyToastsFactory","LockingToastsFactory","App","constructor","props","hasError","error","errorInfo","event","target","currentTarget","rect","mainRef","current","getBoundingClientRect","clientY","bottom","document","dispatchEvent","Event","createRef","UNSAFE_componentWillReceiveProps","nextProps","pathname","state","setState","componentDidCatch","info","settings","errorHandlers","forEach","handler","render","views","path","action","isCmsUI","ConnectionRefusedView","errorViews","ECONNREFUSED","language","content","token","intl","locale","replace","toLowerCase","siteroot","dispatchContentClick","connectionRefused","message","componentStack","route","routes","staticContext","userId","POSITION","BOTTOM_CENTER","string","isRequired","__test__","location","userSession","data","apiError","apierror","fetchContent","store","dispatch","promises","blocksConfig","blocks","visitor","id","blockType","getAsyncData","p","length","push","Promise","allSettled","connectAppComponent","AppComponent","key","promise","__SERVER__","navDepth","sub"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/theme/App/App.jsx"],"sourcesContent":["/**\n * App container.\n * @module components/theme/App/App\n */\n\nimport React, { Component } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { asyncConnect, Helmet } from '@plone/volto/helpers';\nimport { Segment } from 'semantic-ui-react';\nimport { renderRoutes } from 'react-router-config';\nimport { Slide, ToastContainer, toast } from 'react-toastify';\nimport split from 'lodash/split';\nimport join from 'lodash/join';\nimport trim from 'lodash/trim';\nimport cx from 'classnames';\nimport config from '@plone/volto/registry';\nimport { PluggablesProvider } from '@plone/volto/components/manage/Pluggable';\nimport { visitBlocks } from '@plone/volto/helpers/Blocks/Blocks';\nimport { injectIntl } from 'react-intl';\n\nimport Error from '@plone/volto/error';\n\nimport {\n  Breadcrumbs,\n  Footer,\n  Header,\n  Icon,\n  OutdatedBrowser,\n  AppExtras,\n  SkipLinks,\n} from '@plone/volto/components';\nimport {\n  BodyClass,\n  getBaseUrl,\n  getView,\n  hasApiExpander,\n  isCmsUi,\n} from '@plone/volto/helpers';\nimport {\n  getBreadcrumbs,\n  getContent,\n  getNavigation,\n  getTypes,\n  getWorkflow,\n} from '@plone/volto/actions';\n\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport MultilingualRedirector from '@plone/volto/components/theme/MultilingualRedirector/MultilingualRedirector';\nimport WorkingCopyToastsFactory from '@plone/volto/components/manage/WorkingCopyToastsFactory/WorkingCopyToastsFactory';\nimport LockingToastsFactory from '@plone/volto/components/manage/LockingToastsFactory/LockingToastsFactory';\n\n/**\n * @export\n * @class App\n * @extends {Component}\n */\nexport class App extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    pathname: PropTypes.string.isRequired,\n  };\n\n  state = {\n    hasError: false,\n    error: null,\n    errorInfo: null,\n  };\n\n  constructor(props) {\n    super(props);\n    this.mainRef = React.createRef();\n  }\n\n  /**\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      if (this.state.hasError) {\n        this.setState({ hasError: false });\n      }\n    }\n  }\n\n  /**\n   * ComponentDidCatch\n   * @method ComponentDidCatch\n   * @param {string} error  The error\n   * @param {string} info The info\n   * @returns {undefined}\n   */\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true, error, errorInfo: info });\n    config.settings.errorHandlers.forEach((handler) => handler(error));\n  }\n\n  dispatchContentClick = (event) => {\n    if (event.target === event.currentTarget) {\n      const rect = this.mainRef.current.getBoundingClientRect();\n      if (event.clientY > rect.bottom) {\n        document.dispatchEvent(new Event('voltoClickBelowContent'));\n      }\n    }\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { views } = config;\n    const path = getBaseUrl(this.props.pathname);\n    const action = getView(this.props.pathname);\n    const isCmsUI = isCmsUi(this.props.pathname);\n    const ConnectionRefusedView = views.errorViews.ECONNREFUSED;\n\n    const language =\n      this.props.content?.language?.token ?? this.props.intl?.locale;\n\n    return (\n      <PluggablesProvider>\n        {language && (\n          <Helmet>\n            <html lang={language} />\n          </Helmet>\n        )}\n        <BodyClass className={`view-${action}view`} />\n\n        {/* Body class depending on content type */}\n        {this.props.content && this.props.content['@type'] && (\n          <BodyClass\n            className={`contenttype-${this.props.content['@type']\n              .replace(' ', '-')\n              .toLowerCase()}`}\n          />\n        )}\n\n        {/* Body class depending on sections */}\n        <BodyClass\n          className={cx({\n            [trim(join(split(this.props.pathname, '/'), ' section-'))]:\n              this.props.pathname !== '/',\n            siteroot: this.props.pathname === '/',\n            'is-authenticated': !!this.props.token,\n            'is-anonymous': !this.props.token,\n            'cms-ui': isCmsUI,\n            'public-ui': !isCmsUI,\n          })}\n        />\n        <SkipLinks />\n        <Header pathname={path} />\n        <Breadcrumbs pathname={path} />\n        <MultilingualRedirector\n          pathname={this.props.pathname}\n          contentLanguage={this.props.content?.language?.token}\n        >\n          <Segment\n            basic\n            className=\"content-area\"\n            onClick={this.dispatchContentClick}\n          >\n            <main ref={this.mainRef}>\n              <OutdatedBrowser />\n              {this.props.connectionRefused ? (\n                <ConnectionRefusedView />\n              ) : this.state.hasError ? (\n                <Error\n                  message={this.state.error.message}\n                  stackTrace={this.state.errorInfo.componentStack}\n                />\n              ) : (\n                renderRoutes(this.props.route.routes, {\n                  staticContext: this.props.staticContext,\n                })\n              )}\n            </main>\n          </Segment>\n        </MultilingualRedirector>\n        <Footer />\n        <LockingToastsFactory\n          content={this.props.content}\n          user={this.props.userId}\n        />\n        <WorkingCopyToastsFactory content={this.props.content} />\n        <ToastContainer\n          position={toast.POSITION.BOTTOM_CENTER}\n          hideProgressBar\n          transition={Slide}\n          autoClose={5000}\n          closeButton={\n            <Icon\n              className=\"toast-dismiss-action\"\n              name={clearSVG}\n              size=\"18px\"\n            />\n          }\n        />\n        <AppExtras {...this.props} />\n      </PluggablesProvider>\n    );\n  }\n}\n\nexport const __test__ = connect(\n  (state, props) => ({\n    pathname: props.location.pathname,\n    token: state.userSession.token,\n    content: state.content.data,\n    apiError: state.apierror.error,\n    connectionRefused: state.apierror.connectionRefused,\n  }),\n  {},\n)(App);\n\nexport const fetchContent = async ({ store, location }) => {\n  const content = await store.dispatch(\n    getContent(getBaseUrl(location.pathname)),\n  );\n\n  const promises = [];\n  const { blocksConfig } = config.blocks;\n\n  const visitor = ([id, data]) => {\n    const blockType = data['@type'];\n    const { getAsyncData } = blocksConfig[blockType];\n    if (getAsyncData) {\n      const p = getAsyncData({\n        store,\n        dispatch: store.dispatch,\n        path: location.pathname,\n        location,\n        id,\n        data,\n        blocksConfig,\n      });\n      if (!p?.length) {\n        throw new Error(\n          'You should return a list of promises from getAsyncData',\n        );\n      }\n      promises.push(...p);\n    }\n  };\n\n  visitBlocks(content, visitor);\n\n  await Promise.allSettled(promises);\n\n  return content;\n};\n\nexport function connectAppComponent(AppComponent) {\n  return compose(\n    asyncConnect([\n      {\n        key: 'breadcrumbs',\n        promise: ({ location, store: { dispatch } }) => {\n          // Do not trigger the breadcrumbs action if the expander is present\n          if (\n            __SERVER__ &&\n            !hasApiExpander('breadcrumbs', getBaseUrl(location.pathname))\n          ) {\n            return dispatch(getBreadcrumbs(getBaseUrl(location.pathname)));\n          }\n        },\n      },\n      {\n        key: 'content',\n        promise: ({ location, store }) =>\n          __SERVER__ && fetchContent({ store, location }),\n      },\n      {\n        key: 'navigation',\n        promise: ({ location, store: { dispatch } }) => {\n          // Do not trigger the navigation action if the expander is present\n          if (\n            __SERVER__ &&\n            !hasApiExpander('navigation', getBaseUrl(location.pathname))\n          ) {\n            return dispatch(\n              getNavigation(\n                getBaseUrl(location.pathname),\n                config.settings.navDepth,\n              ),\n            );\n          }\n        },\n      },\n      {\n        key: 'types',\n        promise: ({ location, store: { dispatch } }) => {\n          // Do not trigger the types action if the expander is present\n          if (\n            __SERVER__ &&\n            !hasApiExpander('types', getBaseUrl(location.pathname))\n          ) {\n            return dispatch(getTypes(getBaseUrl(location.pathname)));\n          }\n        },\n      },\n      {\n        key: 'workflow',\n        promise: ({ location, store: { dispatch } }) =>\n          __SERVER__ && dispatch(getWorkflow(getBaseUrl(location.pathname))),\n      },\n    ]),\n    injectIntl,\n    connect(\n      (state, props) => ({\n        pathname: props.location.pathname,\n        token: state.userSession.token,\n        userId: state.userSession.token\n          ? jwtDecode(state.userSession.token).sub\n          : '',\n        content: state.content.data,\n        apiError: state.apierror.error,\n        connectionRefused: state.apierror.connectionRefused,\n      }),\n      null,\n    ),\n  )(AppComponent);\n}\n\nexport default connectAppComponent(App);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}