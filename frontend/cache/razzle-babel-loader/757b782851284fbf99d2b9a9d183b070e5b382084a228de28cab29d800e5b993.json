{"ast":null,"code":"var _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-form-block/src/components/Field.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl, defineMessages } from 'react-intl';\nimport WysiwygWidget from '@plone/volto/components/manage/Widgets/WysiwygWidget';\nimport { EmailWidget, FileWidget, DatetimeWidget, CheckboxWidget, SelectWidget, TextWidget, TextareaWidget, CheckboxListWidget, RadioWidget } from 'volto-form-block/components/Widget';\nimport config from '@plone/volto/registry';\n\n/* Style */\nimport 'volto-form-block/components/Field.css';\nconst messages = defineMessages({\n  select_a_value: {\n    \"id\": \"form_select_a_value\",\n    \"defaultMessage\": \"Select a value\"\n  }\n});\n\n/**\n * Field class.\n * @class View\n * @extends Component\n */\nconst Field = ({\n  label,\n  description,\n  name,\n  field_type,\n  required,\n  input_values,\n  value,\n  onChange,\n  isOnEdit,\n  valid,\n  disabled = false,\n  formHasErrors = false,\n  id\n}) => {\n  var _input_values$map, _input_values$map2, _input_values$map3, _config$blocks$blocks, _config$blocks$blocks2;\n  const intl = useIntl();\n  const isInvalid = () => {\n    return !isOnEdit && !valid;\n  };\n  return __jsx(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, field_type === 'text' && __jsx(TextWidget, _extends({\n    id: name,\n    name: name,\n    title: label,\n    description: description,\n    required: required,\n    onChange: onChange,\n    value: value,\n    isDisabled: disabled,\n    invalid: isInvalid().toString()\n  }, isInvalid() ? {\n    className: 'is-invalid'\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), field_type === 'textarea' && __jsx(TextareaWidget, _extends({\n    id: name,\n    name: name,\n    title: label,\n    description: description,\n    required: required,\n    onChange: onChange,\n    value: value,\n    rows: 10,\n    isDisabled: disabled,\n    invalid: isInvalid().toString()\n  }, isInvalid() ? {\n    className: 'is-invalid'\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })), field_type === 'select' && __jsx(SelectWidget, _extends({\n    id: name,\n    name: name,\n    title: label,\n    description: description,\n    getVocabulary: () => {},\n    getVocabularyTokenTitle: () => {},\n    choices: [...((_input_values$map = input_values === null || input_values === void 0 ? void 0 : input_values.map(v => [v, v])) !== null && _input_values$map !== void 0 ? _input_values$map : [])],\n    value: value,\n    onChange: onChange,\n    placeholder: intl.formatMessage(messages.select_a_value),\n    \"aria-label\": intl.formatMessage(messages.select_a_value),\n    classNamePrefix: \"react-select\",\n    isDisabled: disabled,\n    invalid: isInvalid().toString(),\n    required: required\n  }, isInvalid() ? {\n    className: 'is-invalid'\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })), field_type === 'single_choice' && __jsx(RadioWidget, _extends({\n    id: name,\n    title: label,\n    description: description,\n    required: required,\n    onChange: onChange,\n    valueList: [...((_input_values$map2 = input_values === null || input_values === void 0 ? void 0 : input_values.map(v => ({\n      value: v,\n      label: v\n    }))) !== null && _input_values$map2 !== void 0 ? _input_values$map2 : [])],\n    value: value,\n    isDisabled: disabled,\n    invalid: isInvalid().toString()\n  }, isInvalid() ? {\n    className: 'is-invalid'\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  })), field_type === 'multiple_choice' && __jsx(CheckboxListWidget, _extends({\n    id: name,\n    name: name,\n    title: label,\n    description: description,\n    required: required,\n    onChange: onChange,\n    valueList: [...((_input_values$map3 = input_values === null || input_values === void 0 ? void 0 : input_values.map(v => ({\n      value: v,\n      label: v\n    }))) !== null && _input_values$map3 !== void 0 ? _input_values$map3 : [])],\n    value: value,\n    isDisabled: disabled,\n    invalid: isInvalid().toString()\n  }, isInvalid() ? {\n    className: 'is-invalid'\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  })), field_type === 'checkbox' && __jsx(CheckboxWidget, _extends({\n    id: name,\n    name: name,\n    title: label,\n    description: description,\n    required: required,\n    onChange: onChange,\n    value: !!value,\n    isDisabled: disabled,\n    invalid: isInvalid().toString()\n  }, isInvalid() ? {\n    className: 'is-invalid'\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  })), field_type === 'date' && __jsx(DatetimeWidget, _extends({\n    id: name,\n    name: name,\n    title: label,\n    description: description,\n    dateOnly: true,\n    noPastDates: false,\n    resettable: false,\n    onChange: onChange,\n    value: value,\n    isDisabled: disabled,\n    required: required,\n    invalid: isInvalid().toString()\n  }, isInvalid() ? {\n    className: 'is-invalid'\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  })), field_type === 'attachment' && __jsx(FileWidget, {\n    id: name,\n    name: name,\n    title: label,\n    description: description,\n    type: \"file\",\n    required: required,\n    invalid: isInvalid().toString(),\n    isDisabled: disabled,\n    onChange: onChange,\n    value: value,\n    multiple: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }), (field_type === 'from' || field_type === 'email') && __jsx(EmailWidget, _extends({\n    id: name,\n    name: name,\n    title: label,\n    description: description,\n    required: required,\n    onChange: onChange,\n    value: value,\n    isDisabled: disabled,\n    invalid: isInvalid().toString()\n  }, isInvalid() ? {\n    className: 'is-invalid'\n  } : {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  })), field_type === 'static_text' && (isOnEdit ? __jsx(WysiwygWidget, {\n    wrapped: false,\n    id: name,\n    name: name,\n    title: label,\n    description: description,\n    onChange: onChange,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }) : value !== null && value !== void 0 && value.data ? __jsx(\"div\", {\n    className: \"static-text\",\n    dangerouslySetInnerHTML: {\n      __html: value.data\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }) : __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  })), (_config$blocks$blocks = (_config$blocks$blocks2 = config.blocks.blocksConfig.form.additionalFields) === null || _config$blocks$blocks2 === void 0 ? void 0 : _config$blocks$blocks2.reduce((acc, val) => {\n    if (val.id === field_type) return [...acc, __jsx(val.component, _extends({\n      id: name,\n      name: name,\n      title: label,\n      description: description,\n      required: required,\n      onChange: onChange,\n      value: value,\n      isDisabled: disabled,\n      formHasErrors: formHasErrors,\n      invalid: isInvalid().toString()\n    }, isInvalid() ? {\n      className: 'is-invalid'\n    } : {}, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }))];\n    return acc;\n  }, [])) !== null && _config$blocks$blocks !== void 0 ? _config$blocks$blocks : []);\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nField.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  field_type: PropTypes.string,\n  input_values: PropTypes.any,\n  value: PropTypes.any,\n  formHasErrors: PropTypes.bool,\n  onChange: PropTypes.func\n};\nexport default Field;","map":{"version":3,"names":["React","PropTypes","useIntl","defineMessages","WysiwygWidget","EmailWidget","FileWidget","DatetimeWidget","CheckboxWidget","SelectWidget","TextWidget","TextareaWidget","CheckboxListWidget","RadioWidget","config","messages","select_a_value","Field","label","description","name","field_type","required","input_values","value","onChange","isOnEdit","valid","disabled","formHasErrors","id","intl","isInvalid","toString","className","map","v","formatMessage","data","__html","blocks","blocksConfig","form","additionalFields","reduce","acc","val","propTypes","string","bool","any","func"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-form-block/src/components/Field.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl, defineMessages } from 'react-intl';\nimport WysiwygWidget from '@plone/volto/components/manage/Widgets/WysiwygWidget';\nimport {\n  EmailWidget,\n  FileWidget,\n  DatetimeWidget,\n  CheckboxWidget,\n  SelectWidget,\n  TextWidget,\n  TextareaWidget,\n  CheckboxListWidget,\n  RadioWidget,\n} from 'volto-form-block/components/Widget';\nimport config from '@plone/volto/registry';\n\n/* Style */\nimport 'volto-form-block/components/Field.css';\n\nconst messages = defineMessages({\n  select_a_value: {\n    id: 'form_select_a_value',\n    defaultMessage: 'Select a value',\n  },\n});\n\n/**\n * Field class.\n * @class View\n * @extends Component\n */\nconst Field = ({\n  label,\n  description,\n  name,\n  field_type,\n  required,\n  input_values,\n  value,\n  onChange,\n  isOnEdit,\n  valid,\n  disabled = false,\n  formHasErrors = false,\n  id,\n}) => {\n  const intl = useIntl();\n\n  const isInvalid = () => {\n    return !isOnEdit && !valid;\n  };\n\n  return (\n    <div className=\"field\">\n      {field_type === 'text' && (\n        <TextWidget\n          id={name}\n          name={name}\n          title={label}\n          description={description}\n          required={required}\n          onChange={onChange}\n          value={value}\n          isDisabled={disabled}\n          invalid={isInvalid().toString()}\n          {...(isInvalid() ? { className: 'is-invalid' } : {})}\n        />\n      )}\n      {field_type === 'textarea' && (\n        <TextareaWidget\n          id={name}\n          name={name}\n          title={label}\n          description={description}\n          required={required}\n          onChange={onChange}\n          value={value}\n          rows={10}\n          isDisabled={disabled}\n          invalid={isInvalid().toString()}\n          {...(isInvalid() ? { className: 'is-invalid' } : {})}\n        />\n      )}\n      {field_type === 'select' && (\n        <SelectWidget\n          id={name}\n          name={name}\n          title={label}\n          description={description}\n          getVocabulary={() => {}}\n          getVocabularyTokenTitle={() => {}}\n          choices={[...(input_values?.map((v) => [v, v]) ?? [])]}\n          value={value}\n          onChange={onChange}\n          placeholder={intl.formatMessage(messages.select_a_value)}\n          aria-label={intl.formatMessage(messages.select_a_value)}\n          classNamePrefix=\"react-select\"\n          isDisabled={disabled}\n          invalid={isInvalid().toString()}\n          required={required}\n          {...(isInvalid() ? { className: 'is-invalid' } : {})}\n        />\n      )}\n      {field_type === 'single_choice' && (\n        <RadioWidget\n          id={name}\n          title={label}\n          description={description}\n          required={required}\n          onChange={onChange}\n          valueList={[\n            ...(input_values?.map((v) => ({ value: v, label: v })) ?? []),\n          ]}\n          value={value}\n          isDisabled={disabled}\n          invalid={isInvalid().toString()}\n          {...(isInvalid() ? { className: 'is-invalid' } : {})}\n        />\n      )}\n      {field_type === 'multiple_choice' && (\n        <CheckboxListWidget\n          id={name}\n          name={name}\n          title={label}\n          description={description}\n          required={required}\n          onChange={onChange}\n          valueList={[\n            ...(input_values?.map((v) => ({ value: v, label: v })) ?? []),\n          ]}\n          value={value}\n          isDisabled={disabled}\n          invalid={isInvalid().toString()}\n          {...(isInvalid() ? { className: 'is-invalid' } : {})}\n        />\n      )}\n      {field_type === 'checkbox' && (\n        <CheckboxWidget\n          id={name}\n          name={name}\n          title={label}\n          description={description}\n          required={required}\n          onChange={onChange}\n          value={!!value}\n          isDisabled={disabled}\n          invalid={isInvalid().toString()}\n          {...(isInvalid() ? { className: 'is-invalid' } : {})}\n        />\n      )}\n      {field_type === 'date' && (\n        <DatetimeWidget\n          id={name}\n          name={name}\n          title={label}\n          description={description}\n          dateOnly={true}\n          noPastDates={false}\n          resettable={false}\n          onChange={onChange}\n          value={value}\n          isDisabled={disabled}\n          required={required}\n          invalid={isInvalid().toString()}\n          {...(isInvalid() ? { className: 'is-invalid' } : {})}\n        />\n      )}\n      {field_type === 'attachment' && (\n        <FileWidget\n          id={name}\n          name={name}\n          title={label}\n          description={description}\n          type=\"file\"\n          required={required}\n          invalid={isInvalid().toString()}\n          isDisabled={disabled}\n          onChange={onChange}\n          value={value}\n          multiple={false}\n        />\n      )}\n      {(field_type === 'from' || field_type === 'email') && (\n        <EmailWidget\n          id={name}\n          name={name}\n          title={label}\n          description={description}\n          required={required}\n          onChange={onChange}\n          value={value}\n          isDisabled={disabled}\n          invalid={isInvalid().toString()}\n          {...(isInvalid() ? { className: 'is-invalid' } : {})}\n        />\n      )}\n      {field_type === 'static_text' &&\n        (isOnEdit ? (\n          <WysiwygWidget\n            wrapped={false}\n            id={name}\n            name={name}\n            title={label}\n            description={description}\n            onChange={onChange}\n            value={value}\n          />\n        ) : value?.data ? (\n          <div\n            className=\"static-text\"\n            dangerouslySetInnerHTML={{ __html: value.data }}\n          />\n        ) : (\n          <br />\n        ))}\n      {config.blocks.blocksConfig.form.additionalFields?.reduce((acc, val) => {\n        if (val.id === field_type)\n          return [\n            ...acc,\n            <val.component\n              id={name}\n              name={name}\n              title={label}\n              description={description}\n              required={required}\n              onChange={onChange}\n              value={value}\n              isDisabled={disabled}\n              formHasErrors={formHasErrors}\n              invalid={isInvalid().toString()}\n              {...(isInvalid() ? { className: 'is-invalid' } : {})}\n            />,\n          ];\n\n        return acc;\n      }, []) ?? []}\n    </div>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nField.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  field_type: PropTypes.string,\n  input_values: PropTypes.any,\n  value: PropTypes.any,\n  formHasErrors: PropTypes.bool,\n  onChange: PropTypes.func,\n};\n\nexport default Field;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"form_select_a_value","defaultMessage":"Select a value"}]}},"sourceType":"module","externalDependencies":[]}