{"ast":null,"code":"import _extends from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/components/blocks/Listing/SliderListing.jsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport loadable from '@loadable/component';\nimport { ResponsiveContainer, ListingBlockHeader } from '@package/components';\nimport { Icon } from '@plone/volto/components';\nimport cx from 'classnames';\nimport UniversalCard from './ListingCard';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\n\n// import 'slick-carousel/slick/slick.css';\n// import 'slick-carousel/slick/slick-theme.css';\n\nimport './less/slider-listing.less';\nconst Slider = loadable({\n  resolved: {},\n  chunkName() {\n    return \"react-slick\";\n  },\n  isReady(props) {\n    const key = this.resolve(props);\n    if (this.resolved[key] !== true) {\n      return false;\n    }\n    if (typeof __webpack_modules__ !== 'undefined') {\n      return !!__webpack_modules__[key];\n    }\n    return false;\n  },\n  importAsync: () => import( /* webpackChunkName: \"react-slick\" */'react-slick'),\n  requireAsync(props) {\n    const key = this.resolve(props);\n    this.resolved[key] = false;\n    return this.importAsync(props).then(resolved => {\n      this.resolved[key] = true;\n      return resolved;\n    });\n  },\n  requireSync(props) {\n    const id = this.resolve(props);\n    if (typeof __webpack_require__ !== 'undefined') {\n      return __webpack_require__(id);\n    }\n    return eval('module.require')(id);\n  },\n  resolve() {\n    if (require.resolveWeak) {\n      return require.resolveWeak(\"react-slick\");\n    }\n    return eval('require.resolve')(\"react-slick\");\n  }\n});\n_c = Slider;\nconst getSliderSetting = (slider, settings, name) => {\n  var _slider$current, _slider$current$state, _settings$responsive$, _settings$responsive, _settings$responsive$2, _settings$responsive$3;\n  const curBreak = (_slider$current = slider.current) === null || _slider$current === void 0 ? void 0 : (_slider$current$state = _slider$current.state) === null || _slider$current$state === void 0 ? void 0 : _slider$current$state.breakpoint;\n  if (!curBreak) return settings[name];\n  const index = settings.responsive.findIndex(_ref => {\n    let {\n      breakpoint\n    } = _ref;\n    return breakpoint === curBreak;\n  });\n  return index > -1 ? (_settings$responsive$ = (_settings$responsive = settings.responsive) === null || _settings$responsive === void 0 ? void 0 : (_settings$responsive$2 = _settings$responsive[index]) === null || _settings$responsive$2 === void 0 ? void 0 : (_settings$responsive$3 = _settings$responsive$2.settings) === null || _settings$responsive$3 === void 0 ? void 0 : _settings$responsive$3[name]) !== null && _settings$responsive$ !== void 0 ? _settings$responsive$ : settings[name] : settings[name];\n};\nexport const SliderNavigation = _ref2 => {\n  let {\n    sliderRef,\n    count,\n    index,\n    settings,\n    slidesToShow\n  } = _ref2;\n  const slider = sliderRef.current;\n  const show = slidesToShow ? count > slidesToShow : true;\n  return show ? __jsx(\"div\", {\n    className: \"slider-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    className: cx({\n      hidden: index === 1\n    }, 'slider-nav-arrow slider-nav-arrow-prev'),\n    onClick: () => slider && slider.slickPrev(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    name: backSVG,\n    size: \"32px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), __jsx(\"button\", {\n    className: cx({\n      hidden: index >= count\n    }, 'slider-nav-arrow slider-nav-arrow-next'),\n    onClick: () => slider && slider.slickNext(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    name: aheadSVG,\n    size: \"32px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }))) : null;\n};\n\n// in this type of carousel, acts as Page navigation, rather then slide by\n// slide\n_c2 = SliderNavigation;\nexport const getPages = (sliderRef, slideIndex, settings, items) => {\n  const slidesToShow = getSliderSetting(sliderRef, settings, 'slidesToShow') || 1;\n  const totalPages = Math.ceil(Math.max(items.length / slidesToShow, 1));\n  const currentPage = Math.floor(slideIndex / slidesToShow) + 1; // humanize\n\n  return {\n    totalPages,\n    currentPage\n  };\n};\nexport const Pagination = _ref3 => {\n  let {\n    index,\n    count\n  } = _ref3;\n  return __jsx(\"div\", {\n    className: \"slider-pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, index, \" / \", count);\n};\n_c3 = Pagination;\nconst SliderListing = data => {\n  _s();\n  const {\n    items\n  } = data;\n  const [slideIndex, setSlideIndex] = React.useState(0);\n  const sliderRef = React.useRef();\n  const carouselSettings = React.useMemo(() => ({\n    afterChange: current => setSlideIndex(current),\n    dots: false,\n    arrows: false,\n    // we use custom navigation\n    lazyLoad: 'progressive',\n    autoplay: false,\n    infinite: false,\n    slidesToShow: 4,\n    slidesToScroll: 4,\n    draggable: false,\n    responsive: [{\n      breakpoint: 991,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3\n      }\n    }, {\n      breakpoint: 768,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 2\n      }\n    }, {\n      breakpoint: 340,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }]\n  }), []);\n  const {\n    totalPages,\n    currentPage\n  } = getPages(sliderRef, slideIndex, carouselSettings, items);\n\n  // TODO: add resize event watcher to update the pagination numbers\n\n  return __jsx(\"div\", {\n    className: \"slider-carousel-container slider-listing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, __jsx(ListingBlockHeader, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }), __jsx(ResponsiveContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, _ref4 => {\n    let {\n      parentWidth\n    } = _ref4;\n    return !!parentWidth && __jsx(\"div\", {\n      style: {\n        width: `${parentWidth}px`,\n        margin: '0 auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, __jsx(Slider, _extends({\n      ref: sliderRef\n    }, carouselSettings, {\n      className: \"slick-carousel slider-listing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }), items.map((item, i) => __jsx(UniversalCard, {\n      item: item,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }))), __jsx(\"div\", {\n      className: \"slider-carousel-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, __jsx(Pagination, {\n      index: currentPage,\n      count: totalPages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }), __jsx(SliderNavigation, {\n      sliderRef: sliderRef,\n      index: currentPage,\n      count: totalPages,\n      settings: carouselSettings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    })));\n  }));\n};\n_s(SliderListing, \"/FDxCKt9B0E3cNQoE7UfI/izv3Q=\");\n_c4 = SliderListing;\nexport default SliderListing;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Slider\");\n$RefreshReg$(_c2, \"SliderNavigation\");\n$RefreshReg$(_c3, \"Pagination\");\n$RefreshReg$(_c4, \"SliderListing\");","map":{"version":3,"names":["React","loadable","ResponsiveContainer","ListingBlockHeader","Icon","cx","UniversalCard","aheadSVG","backSVG","Slider","getSliderSetting","slider","settings","name","curBreak","current","state","breakpoint","index","responsive","findIndex","SliderNavigation","sliderRef","count","slidesToShow","show","hidden","slickPrev","slickNext","getPages","slideIndex","items","totalPages","Math","ceil","max","length","currentPage","floor","Pagination","SliderListing","data","setSlideIndex","useState","useRef","carouselSettings","useMemo","afterChange","dots","arrows","lazyLoad","autoplay","infinite","slidesToScroll","draggable","parentWidth","width","margin","map","item","i"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/components/blocks/Listing/SliderListing.jsx"],"sourcesContent":["import React from 'react';\nimport loadable from '@loadable/component';\nimport { ResponsiveContainer, ListingBlockHeader } from '@package/components';\nimport { Icon } from '@plone/volto/components';\nimport cx from 'classnames';\n\nimport UniversalCard from './ListingCard';\n\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\n\n// import 'slick-carousel/slick/slick.css';\n// import 'slick-carousel/slick/slick-theme.css';\n\nimport './less/slider-listing.less';\n\nconst Slider = loadable(() => import('react-slick'));\n\nconst getSliderSetting = (slider, settings, name) => {\n  const curBreak = slider.current?.state?.breakpoint;\n\n  if (!curBreak) return settings[name];\n\n  const index = settings.responsive.findIndex(\n    ({ breakpoint }) => breakpoint === curBreak,\n  );\n\n  return index > -1\n    ? settings.responsive?.[index]?.settings?.[name] ?? settings[name]\n    : settings[name];\n};\n\nexport const SliderNavigation = ({\n  sliderRef,\n  count,\n  index,\n  settings,\n  slidesToShow,\n}) => {\n  const slider = sliderRef.current;\n  const show = slidesToShow ? count > slidesToShow : true;\n\n  return show ? (\n    <div className=\"slider-nav\">\n      <button\n        className={cx(\n          { hidden: index === 1 },\n          'slider-nav-arrow slider-nav-arrow-prev',\n        )}\n        onClick={() => slider && slider.slickPrev()}\n      >\n        <Icon name={backSVG} size=\"32px\" />\n      </button>\n      <button\n        className={cx(\n          { hidden: index >= count },\n          'slider-nav-arrow slider-nav-arrow-next',\n        )}\n        onClick={() => slider && slider.slickNext()}\n      >\n        <Icon name={aheadSVG} size=\"32px\" />\n      </button>\n    </div>\n  ) : null;\n};\n\n// in this type of carousel, acts as Page navigation, rather then slide by\n// slide\nexport const getPages = (sliderRef, slideIndex, settings, items) => {\n  const slidesToShow =\n    getSliderSetting(sliderRef, settings, 'slidesToShow') || 1;\n\n  const totalPages = Math.ceil(Math.max(items.length / slidesToShow, 1));\n  const currentPage = Math.floor(slideIndex / slidesToShow) + 1; // humanize\n\n  return { totalPages, currentPage };\n};\n\nexport const Pagination = ({ index, count }) => {\n  return (\n    <div className=\"slider-pagination\">\n      {index} / {count}\n    </div>\n  );\n};\n\nconst SliderListing = (data) => {\n  const { items } = data;\n  const [slideIndex, setSlideIndex] = React.useState(0);\n  const sliderRef = React.useRef();\n\n  const carouselSettings = React.useMemo(\n    () => ({\n      afterChange: (current) => setSlideIndex(current),\n      dots: false,\n      arrows: false, // we use custom navigation\n      lazyLoad: 'progressive',\n      autoplay: false,\n      infinite: false,\n      slidesToShow: 4,\n      slidesToScroll: 4,\n      draggable: false,\n      responsive: [\n        {\n          breakpoint: 991,\n          settings: {\n            slidesToShow: 3,\n            slidesToScroll: 3,\n          },\n        },\n        {\n          breakpoint: 768,\n          settings: {\n            slidesToShow: 2,\n            slidesToScroll: 2,\n          },\n        },\n        {\n          breakpoint: 340,\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1,\n          },\n        },\n      ],\n    }),\n    [],\n  );\n\n  const { totalPages, currentPage } = getPages(\n    sliderRef,\n    slideIndex,\n    carouselSettings,\n    items,\n  );\n\n  // TODO: add resize event watcher to update the pagination numbers\n\n  return (\n    <div className=\"slider-carousel-container slider-listing\">\n      <ListingBlockHeader data={data} />\n      <ResponsiveContainer>\n        {({ parentWidth }) =>\n          !!parentWidth && (\n            <div style={{ width: `${parentWidth}px`, margin: '0 auto' }}>\n              <Slider\n                ref={sliderRef}\n                {...carouselSettings}\n                className=\"slick-carousel slider-listing\"\n              >\n                {items.map((item, i) => (\n                  <UniversalCard item={item} key={i} />\n                ))}\n              </Slider>\n              <div className=\"slider-carousel-footer\">\n                <Pagination index={currentPage} count={totalPages} />\n                <SliderNavigation\n                  sliderRef={sliderRef}\n                  index={currentPage}\n                  count={totalPages}\n                  settings={carouselSettings}\n                />\n              </div>\n            </div>\n          )\n        }\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default SliderListing;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,mBAAmB,EAAEC,kBAAkB,QAAQ,qBAAqB;AAC7E,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,OAAOC,EAAE,MAAM,YAAY;AAE3B,OAAOC,aAAa,MAAM,eAAe;AAEzC,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,OAAO,MAAM,6BAA6B;;AAEjD;AACA;;AAEA,OAAO,4BAA4B;AAEnC,MAAMC,MAAM,GAAGR,QAAQ;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;EAAA;EAAA,aAAC,MAAM,MAAM,uCAAC,aAAa,CAAC;EAAA;IAAA;IAAA;IAAA;MAAA;MAAA;IAAA;EAAA;EAAA;IAAA;IAAA;MAAA;IAAA;IAAA;EAAA;EAAA;IAAA;MAAA;IAAA;IAAA;EAAA;AAAA,EAAC;AAAC,KAA/CQ,MAAM;AAEZ,MAAMC,gBAAgB,GAAG,CAACC,MAAM,EAAEC,QAAQ,EAAEC,IAAI,KAAK;EAAA;EACnD,MAAMC,QAAQ,sBAAGH,MAAM,CAACI,OAAO,6EAAd,gBAAgBC,KAAK,0DAArB,sBAAuBC,UAAU;EAElD,IAAI,CAACH,QAAQ,EAAE,OAAOF,QAAQ,CAACC,IAAI,CAAC;EAEpC,MAAMK,KAAK,GAAGN,QAAQ,CAACO,UAAU,CAACC,SAAS,CACzC;IAAA,IAAC;MAAEH;IAAW,CAAC;IAAA,OAAKA,UAAU,KAAKH,QAAQ;EAAA,EAC5C;EAED,OAAOI,KAAK,GAAG,CAAC,CAAC,oDACbN,QAAQ,CAACO,UAAU,mFAAnB,qBAAsBD,KAAK,CAAC,qFAA5B,uBAA8BN,QAAQ,2DAAtC,uBAAyCC,IAAI,CAAC,yEAAID,QAAQ,CAACC,IAAI,CAAC,GAChED,QAAQ,CAACC,IAAI,CAAC;AACpB,CAAC;AAED,OAAO,MAAMQ,gBAAgB,GAAG,SAM1B;EAAA,IAN2B;IAC/BC,SAAS;IACTC,KAAK;IACLL,KAAK;IACLN,QAAQ;IACRY;EACF,CAAC;EACC,MAAMb,MAAM,GAAGW,SAAS,CAACP,OAAO;EAChC,MAAMU,IAAI,GAAGD,YAAY,GAAGD,KAAK,GAAGC,YAAY,GAAG,IAAI;EAEvD,OAAOC,IAAI,GACT;IAAK,SAAS,EAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACzB;IACE,SAAS,EAAEpB,EAAE,CACX;MAAEqB,MAAM,EAAER,KAAK,KAAK;IAAE,CAAC,EACvB,wCAAwC,CACxC;IACF,OAAO,EAAE,MAAMP,MAAM,IAAIA,MAAM,CAACgB,SAAS,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAE5C,MAAC,IAAI;IAAC,IAAI,EAAEnB,OAAQ;IAAC,IAAI,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAC5B,EACT;IACE,SAAS,EAAEH,EAAE,CACX;MAAEqB,MAAM,EAAER,KAAK,IAAIK;IAAM,CAAC,EAC1B,wCAAwC,CACxC;IACF,OAAO,EAAE,MAAMZ,MAAM,IAAIA,MAAM,CAACiB,SAAS,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAE5C,MAAC,IAAI;IAAC,IAAI,EAAErB,QAAS;IAAC,IAAI,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAC7B,CACL,GACJ,IAAI;AACV,CAAC;;AAED;AACA;AAAA,MAnCac,gBAAgB;AAoC7B,OAAO,MAAMQ,QAAQ,GAAG,CAACP,SAAS,EAAEQ,UAAU,EAAElB,QAAQ,EAAEmB,KAAK,KAAK;EAClE,MAAMP,YAAY,GAChBd,gBAAgB,CAACY,SAAS,EAAEV,QAAQ,EAAE,cAAc,CAAC,IAAI,CAAC;EAE5D,MAAMoB,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,GAAG,CAACJ,KAAK,CAACK,MAAM,GAAGZ,YAAY,EAAE,CAAC,CAAC,CAAC;EACtE,MAAMa,WAAW,GAAGJ,IAAI,CAACK,KAAK,CAACR,UAAU,GAAGN,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;;EAE/D,OAAO;IAAEQ,UAAU;IAAEK;EAAY,CAAC;AACpC,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,SAAsB;EAAA,IAArB;IAAErB,KAAK;IAAEK;EAAM,CAAC;EACzC,OACE;IAAK,SAAS,EAAC,mBAAmB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC/BL,KAAK,EAAC,KAAG,EAACK,KAAK,CACZ;AAEV,CAAC;AAAC,MANWgB,UAAU;AAQvB,MAAMC,aAAa,GAAIC,IAAI,IAAK;EAAA;EAC9B,MAAM;IAAEV;EAAM,CAAC,GAAGU,IAAI;EACtB,MAAM,CAACX,UAAU,EAAEY,aAAa,CAAC,GAAG1C,KAAK,CAAC2C,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAMrB,SAAS,GAAGtB,KAAK,CAAC4C,MAAM,EAAE;EAEhC,MAAMC,gBAAgB,GAAG7C,KAAK,CAAC8C,OAAO,CACpC,OAAO;IACLC,WAAW,EAAGhC,OAAO,IAAK2B,aAAa,CAAC3B,OAAO,CAAC;IAChDiC,IAAI,EAAE,KAAK;IACXC,MAAM,EAAE,KAAK;IAAE;IACfC,QAAQ,EAAE,aAAa;IACvBC,QAAQ,EAAE,KAAK;IACfC,QAAQ,EAAE,KAAK;IACf5B,YAAY,EAAE,CAAC;IACf6B,cAAc,EAAE,CAAC;IACjBC,SAAS,EAAE,KAAK;IAChBnC,UAAU,EAAE,CACV;MACEF,UAAU,EAAE,GAAG;MACfL,QAAQ,EAAE;QACRY,YAAY,EAAE,CAAC;QACf6B,cAAc,EAAE;MAClB;IACF,CAAC,EACD;MACEpC,UAAU,EAAE,GAAG;MACfL,QAAQ,EAAE;QACRY,YAAY,EAAE,CAAC;QACf6B,cAAc,EAAE;MAClB;IACF,CAAC,EACD;MACEpC,UAAU,EAAE,GAAG;MACfL,QAAQ,EAAE;QACRY,YAAY,EAAE,CAAC;QACf6B,cAAc,EAAE;MAClB;IACF,CAAC;EAEL,CAAC,CAAC,EACF,EAAE,CACH;EAED,MAAM;IAAErB,UAAU;IAAEK;EAAY,CAAC,GAAGR,QAAQ,CAC1CP,SAAS,EACTQ,UAAU,EACVe,gBAAgB,EAChBd,KAAK,CACN;;EAED;;EAEA,OACE;IAAK,SAAS,EAAC,0CAA0C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACvD,MAAC,kBAAkB;IAAC,IAAI,EAAEU,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAClC,MAAC,mBAAmB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjB;IAAA,IAAC;MAAEc;IAAY,CAAC;IAAA,OACf,CAAC,CAACA,WAAW,IACX;MAAK,KAAK,EAAE;QAAEC,KAAK,EAAG,GAAED,WAAY,IAAG;QAAEE,MAAM,EAAE;MAAS,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC1D,MAAC,MAAM;MACL,GAAG,EAAEnC;IAAU,GACXuB,gBAAgB;MACpB,SAAS,EAAC,+BAA+B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,IAExCd,KAAK,CAAC2B,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KACjB,MAAC,aAAa;MAAC,IAAI,EAAED,IAAK;MAAC,GAAG,EAAEC,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACnC,CAAC,CACK,EACT;MAAK,SAAS,EAAC,wBAAwB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACrC,MAAC,UAAU;MAAC,KAAK,EAAEvB,WAAY;MAAC,KAAK,EAAEL,UAAW;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,EACrD,MAAC,gBAAgB;MACf,SAAS,EAAEV,SAAU;MACrB,KAAK,EAAEe,WAAY;MACnB,KAAK,EAAEL,UAAW;MAClB,QAAQ,EAAEa,gBAAiB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAC3B,CACE,CAET;EAAA,EAEiB,CAClB;AAEV,CAAC;AAAC,GAnFIL,aAAa;AAAA,MAAbA,aAAa;AAqFnB,eAAeA,aAAa;AAAC;AAAA;AAAA;AAAA;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}