{"ast":null,"code":"import _objectSpread from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/theme/Icon/Icon.jsx\";\nvar __jsx = React.createElement;\n/**\n * Icon component.\n * @module components/theme/Icon/Icon\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nconst defaultSize = '36px';\n\n/**\n * Component to display an SVG as Icon.\n * @function Field\n * @param {Object} props Component properties.\n * @param {string} props.name Name source object.\n * @param {string} props.size Size of the Icon (in px).\n * @param {string} props.color Color of the Icon.\n * @param {string} props.className className to add to the component.\n * @param {string} props.title Title (a11y).\n * @returns {string} Markup of the component.\n *\n * Use:\n * drop icon to the icons folder (\"src/icons\")\n * import svg into the file\n * import this Icon component\n * add icon component with name = your imported svg\n *\n * Reasoning:\n * add a11y title to SVGs\n * load svg via webpack for optimization\n * Zero conf Inlined SVGs, as it is the best option when working with SVG\n * see razzle.config.js\n *\n * for further reference see {@link https://kitconcept.com/blog/pastanaga-icon-system/ | here}\n */\nconst Icon = _ref => {\n  let {\n    name,\n    size,\n    color,\n    className,\n    title,\n    onClick,\n    style = {},\n    id,\n    ariaHidden\n  } = _ref;\n  return __jsx(\"svg\", {\n    xmlns: name.attributes && name.attributes.xmlns,\n    viewBox: name.attributes && name.attributes.viewBox,\n    style: _objectSpread({\n      height: size,\n      width: 'auto',\n      fill: color || 'currentColor'\n    }, style),\n    className: className ? `icon ${className}` : 'icon',\n    onClick: onClick,\n    id: id,\n    \"aria-hidden\": ariaHidden,\n    dangerouslySetInnerHTML: {\n      __html: title ? `<title>${title}</title>${name.content}` : name.content\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  });\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_c = Icon;\nIcon.propTypes = {\n  name: PropTypes.shape({\n    xmlns: PropTypes.string,\n    viewBox: PropTypes.string,\n    content: PropTypes.string\n  }).isRequired,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  title: PropTypes.string,\n  onClick: PropTypes.func\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nIcon.defaultProps = {\n  size: defaultSize,\n  color: null,\n  className: null,\n  title: null,\n  onClick: null\n};\nexport default Icon;\nvar _c;\n$RefreshReg$(_c, \"Icon\");","map":{"version":3,"names":["React","PropTypes","defaultSize","Icon","name","size","color","className","title","onClick","style","id","ariaHidden","attributes","xmlns","viewBox","height","width","fill","__html","content","propTypes","shape","string","isRequired","func","defaultProps"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/theme/Icon/Icon.jsx"],"sourcesContent":["/**\n * Icon component.\n * @module components/theme/Icon/Icon\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst defaultSize = '36px';\n\n/**\n * Component to display an SVG as Icon.\n * @function Field\n * @param {Object} props Component properties.\n * @param {string} props.name Name source object.\n * @param {string} props.size Size of the Icon (in px).\n * @param {string} props.color Color of the Icon.\n * @param {string} props.className className to add to the component.\n * @param {string} props.title Title (a11y).\n * @returns {string} Markup of the component.\n *\n * Use:\n * drop icon to the icons folder (\"src/icons\")\n * import svg into the file\n * import this Icon component\n * add icon component with name = your imported svg\n *\n * Reasoning:\n * add a11y title to SVGs\n * load svg via webpack for optimization\n * Zero conf Inlined SVGs, as it is the best option when working with SVG\n * see razzle.config.js\n *\n * for further reference see {@link https://kitconcept.com/blog/pastanaga-icon-system/ | here}\n */\nconst Icon = ({\n  name,\n  size,\n  color,\n  className,\n  title,\n  onClick,\n  style = {},\n  id,\n  ariaHidden,\n}) => (\n  <svg\n    xmlns={name.attributes && name.attributes.xmlns}\n    viewBox={name.attributes && name.attributes.viewBox}\n    style={{\n      height: size,\n      width: 'auto',\n      fill: color || 'currentColor',\n      ...style,\n    }}\n    className={className ? `icon ${className}` : 'icon'}\n    onClick={onClick}\n    id={id}\n    aria-hidden={ariaHidden}\n    dangerouslySetInnerHTML={{\n      __html: title ? `<title>${title}</title>${name.content}` : name.content,\n    }}\n  />\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nIcon.propTypes = {\n  name: PropTypes.shape({\n    xmlns: PropTypes.string,\n    viewBox: PropTypes.string,\n    content: PropTypes.string,\n  }).isRequired,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  title: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nIcon.defaultProps = {\n  size: defaultSize,\n  color: null,\n  className: null,\n  title: null,\n  onClick: null,\n};\n\nexport default Icon;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAElC,MAAMC,WAAW,GAAG,MAAM;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,IAAI,GAAG;EAAA,IAAC;IACZC,IAAI;IACJC,IAAI;IACJC,KAAK;IACLC,SAAS;IACTC,KAAK;IACLC,OAAO;IACPC,KAAK,GAAG,CAAC,CAAC;IACVC,EAAE;IACFC;EACF,CAAC;EAAA,OACC;IACE,KAAK,EAAER,IAAI,CAACS,UAAU,IAAIT,IAAI,CAACS,UAAU,CAACC,KAAM;IAChD,OAAO,EAAEV,IAAI,CAACS,UAAU,IAAIT,IAAI,CAACS,UAAU,CAACE,OAAQ;IACpD,KAAK;MACHC,MAAM,EAAEX,IAAI;MACZY,KAAK,EAAE,MAAM;MACbC,IAAI,EAAEZ,KAAK,IAAI;IAAc,GAC1BI,KAAK,CACR;IACF,SAAS,EAAEH,SAAS,GAAI,QAAOA,SAAU,EAAC,GAAG,MAAO;IACpD,OAAO,EAAEE,OAAQ;IACjB,EAAE,EAAEE,EAAG;IACP,eAAaC,UAAW;IACxB,uBAAuB,EAAE;MACvBO,MAAM,EAAEX,KAAK,GAAI,UAASA,KAAM,WAAUJ,IAAI,CAACgB,OAAQ,EAAC,GAAGhB,IAAI,CAACgB;IAClE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACF;AAAA,CACH;;AAED;AACA;AACA;AACA;AACA;AAJA,KA9BMjB,IAAI;AAmCVA,IAAI,CAACkB,SAAS,GAAG;EACfjB,IAAI,EAAEH,SAAS,CAACqB,KAAK,CAAC;IACpBR,KAAK,EAAEb,SAAS,CAACsB,MAAM;IACvBR,OAAO,EAAEd,SAAS,CAACsB,MAAM;IACzBH,OAAO,EAAEnB,SAAS,CAACsB;EACrB,CAAC,CAAC,CAACC,UAAU;EACbnB,IAAI,EAAEJ,SAAS,CAACsB,MAAM;EACtBjB,KAAK,EAAEL,SAAS,CAACsB,MAAM;EACvBhB,SAAS,EAAEN,SAAS,CAACsB,MAAM;EAC3Bf,KAAK,EAAEP,SAAS,CAACsB,MAAM;EACvBd,OAAO,EAAER,SAAS,CAACwB;AACrB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAtB,IAAI,CAACuB,YAAY,GAAG;EAClBrB,IAAI,EAAEH,WAAW;EACjBI,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE,IAAI;EACfC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE;AACX,CAAC;AAED,eAAeN,IAAI;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}