{"ast":null,"code":"import _extends from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/components/blocks/Image/ImageBlockView.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { ConditionalLink } from '@plone/volto/components';\nimport cx from 'classnames';\nimport { flattenToAppURL, isInternalURL } from '@plone/volto/helpers';\nimport { Link } from 'react-router-dom';\nconst Source = _ref => {\n  let {\n    source = '',\n    sourceHref\n  } = _ref;\n  return __jsx(\"div\", {\n    className: \"image-source\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 3\n    }\n  }, __jsx(ConditionalLink, {\n    condition: sourceHref,\n    to: sourceHref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, source));\n};\n_c = Source;\nconst sizes = {\n  l: 'huge',\n  m: 'huge',\n  s: 'preview',\n  fallback: 'huge'\n};\n\n//                      if (data.size === 'l')\n//                        return `${flattenToAppURL(\n//                          data.url,\n//                        )}/@@images/image/large`;\n//                      if (data.size === 'm')\n//                        return `${flattenToAppURL(\n//                          data.url,\n//                        )}/@@images/image/preview`;\n//                      if (data.size === 's')\n//                        return `${flattenToAppURL(\n//                          data.url,\n//                        )}/@@images/image/mini`;\n//                      return `${flattenToAppURL(\n//                        data.url,\n//                      )}/@@images/image/huge`;\n//                    }\n\nconst Image = _ref2 => {\n  var _href$;\n  let {\n    data\n  } = _ref2;\n  const {\n    href\n  } = data;\n  const url = href !== null && href !== void 0 && href[0] ? (_href$ = href[0]) === null || _href$ === void 0 ? void 0 : _href$['@id'] : data.sourceHref;\n  const {\n    source,\n    sourceHref,\n    imageCaption\n  } = data;\n  // const showAlign = data.size === 's';\n\n  const image = __jsx(\"div\", {\n    className: cx('img-wrapper', {\n      'full-width': data.align === 'full',\n      large: data.size === 'l',\n      medium: data.size === 'm',\n      small: data.size === 's'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: isInternalURL(data.url) ?\n    // Backwards compat in the case that the block is storing the full server URL\n    (() => `${flattenToAppURL(data.url)}/@@images/image/${sizes[data.size || 'fallback']}`)() : data.url,\n    alt: data.alt || '',\n    loading: \"lazy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), source && __jsx(Source, {\n    source: source,\n    sourceHref: sourceHref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 18\n    }\n  }), imageCaption && __jsx(\"span\", {\n    className: \"image-caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 24\n    }\n  }, imageCaption));\n  if (url) {\n    if (!isInternalURL(url)) {\n      return __jsx(\"a\", {\n        target: data.openLinkInNewTab ? '_blank' : null,\n        href: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, image);\n    } else {\n      return __jsx(Link, {\n        to: flattenToAppURL(url),\n        target: data.openLinkInNewTab ? '_blank' : null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, image);\n    }\n  } else {\n    return image;\n  }\n};\n_c2 = Image;\nconst ViewImage = props => {\n  const {\n    data = {},\n    detached\n  } = props;\n\n  // className={cx('block image align', {\n  //   center: !showAlign,\n  //   detached,\n  //   [data.align]: showAlign,\n  // })}\n\n  return __jsx(\"p\", {\n    className: cx('block image align', {\n      center: !Boolean(data.align),\n      detached\n    }, data.align),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, !!data.url && __jsx(Image, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 22\n    }\n  })));\n};\n_c3 = ViewImage;\nexport default (props => {\n  const {\n    data = {}\n  } = props;\n  return __jsx(ViewImage, _extends({}, props, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 10\n    }\n  }));\n});\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Source\");\n$RefreshReg$(_c2, \"Image\");\n$RefreshReg$(_c3, \"ViewImage\");","map":{"version":3,"names":["React","ConditionalLink","cx","flattenToAppURL","isInternalURL","Link","Source","source","sourceHref","sizes","l","m","s","fallback","Image","data","href","url","imageCaption","image","align","large","size","medium","small","alt","openLinkInNewTab","ViewImage","props","detached","center","Boolean"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/components/blocks/Image/ImageBlockView.jsx"],"sourcesContent":["import React from 'react';\nimport { ConditionalLink } from '@plone/volto/components';\nimport cx from 'classnames';\nimport { flattenToAppURL, isInternalURL } from '@plone/volto/helpers';\nimport { Link } from 'react-router-dom';\n\nconst Source = ({ source = '', sourceHref }) => (\n  <div className=\"image-source\">\n    <ConditionalLink condition={sourceHref} to={sourceHref}>\n      {source}\n    </ConditionalLink>\n  </div>\n);\n\nconst sizes = {\n  l: 'huge',\n  m: 'huge',\n  s: 'preview',\n  fallback: 'huge',\n};\n\n//                      if (data.size === 'l')\n//                        return `${flattenToAppURL(\n//                          data.url,\n//                        )}/@@images/image/large`;\n//                      if (data.size === 'm')\n//                        return `${flattenToAppURL(\n//                          data.url,\n//                        )}/@@images/image/preview`;\n//                      if (data.size === 's')\n//                        return `${flattenToAppURL(\n//                          data.url,\n//                        )}/@@images/image/mini`;\n//                      return `${flattenToAppURL(\n//                        data.url,\n//                      )}/@@images/image/huge`;\n//                    }\n\nconst Image = ({ data }) => {\n  const { href } = data;\n  const url = href?.[0] ? href[0]?.['@id'] : data.sourceHref;\n  const { source, sourceHref, imageCaption } = data;\n  // const showAlign = data.size === 's';\n\n  const image = (\n    <div\n      className={cx('img-wrapper', {\n        'full-width': data.align === 'full',\n        large: data.size === 'l',\n        medium: data.size === 'm',\n        small: data.size === 's',\n      })}\n    >\n      <img\n        src={\n          isInternalURL(data.url)\n            ? // Backwards compat in the case that the block is storing the full server URL\n              (() =>\n                `${flattenToAppURL(data.url)}/@@images/image/${\n                  sizes[data.size || 'fallback']\n                }`)()\n            : data.url\n        }\n        alt={data.alt || ''}\n        loading=\"lazy\"\n      />\n      {source && <Source source={source} sourceHref={sourceHref} />}\n      {imageCaption && <span className=\"image-caption\">{imageCaption}</span>}\n    </div>\n  );\n\n  if (url) {\n    if (!isInternalURL(url)) {\n      return (\n        <a target={data.openLinkInNewTab ? '_blank' : null} href={url}>\n          {image}\n        </a>\n      );\n    } else {\n      return (\n        <Link\n          to={flattenToAppURL(url)}\n          target={data.openLinkInNewTab ? '_blank' : null}\n        >\n          {image}\n        </Link>\n      );\n    }\n  } else {\n    return image;\n  }\n};\n\nconst ViewImage = (props) => {\n  const { data = {}, detached } = props;\n\n  // className={cx('block image align', {\n  //   center: !showAlign,\n  //   detached,\n  //   [data.align]: showAlign,\n  // })}\n\n  return (\n    <p\n      className={cx(\n        'block image align',\n        {\n          center: !Boolean(data.align),\n          detached,\n        },\n        data.align,\n      )}\n    >\n      {!!data.url && <Image {...props} />}\n    </p>\n  );\n};\n\nexport default (props) => {\n  const { data = {} } = props;\n  return <ViewImage {...props} data={data} />;\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}