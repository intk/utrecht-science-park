{"ast":null,"code":"export default function (config) {\n  if (__SERVER__) {\n    const express = require('express');\n    const {\n      getAPIResourceWithAuth\n    } = require('@plone/volto/helpers');\n    const HEADERS = ['content-type', 'content-disposition', 'cache-control'];\n    function imageMiddleware(req, res, next) {\n      getAPIResourceWithAuth(req).then(resource => {\n        // Just forward the headers that we need\n        HEADERS.forEach(header => {\n          if (resource.headers[header]) {\n            res.set(header, resource.headers[header]);\n          }\n        });\n        res.send(resource.body);\n      }).catch(next);\n    }\n    const middleware = express.Router();\n    middleware.all(['**/@@fallback-image/*'], imageMiddleware);\n    middleware.id = 'fallbackImageResourcesProcessor';\n    config.settings.expressMiddleware.push(middleware);\n  }\n  return config;\n}","map":{"version":3,"names":["config","__SERVER__","express","require","getAPIResourceWithAuth","HEADERS","imageMiddleware","req","res","next","then","resource","forEach","header","headers","set","send","body","catch","middleware","Router","all","id","settings","expressMiddleware","push"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/express-middleware.js"],"sourcesContent":["export default function (config) {\n  if (__SERVER__) {\n    const express = require('express');\n    const { getAPIResourceWithAuth } = require('@plone/volto/helpers');\n\n    const HEADERS = ['content-type', 'content-disposition', 'cache-control'];\n\n    function imageMiddleware(req, res, next) {\n      getAPIResourceWithAuth(req)\n        .then((resource) => {\n          // Just forward the headers that we need\n          HEADERS.forEach((header) => {\n            if (resource.headers[header]) {\n              res.set(header, resource.headers[header]);\n            }\n          });\n          res.send(resource.body);\n        })\n        .catch(next);\n    }\n\n    const middleware = express.Router();\n\n    middleware.all(['**/@@fallback-image/*'], imageMiddleware);\n    middleware.id = 'fallbackImageResourcesProcessor';\n    config.settings.expressMiddleware.push(middleware);\n  }\n  return config;\n}\n"],"mappings":"AAAA,eAAe,UAAUA,MAAM,EAAE;EAC/B,IAAIC,UAAU,EAAE;IACd,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;IAClC,MAAM;MAAEC;IAAuB,CAAC,GAAGD,OAAO,CAAC,sBAAsB,CAAC;IAElE,MAAME,OAAO,GAAG,CAAC,cAAc,EAAE,qBAAqB,EAAE,eAAe,CAAC;IAExE,SAASC,eAAe,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAE;MACvCL,sBAAsB,CAACG,GAAG,CAAC,CACxBG,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACAN,OAAO,CAACO,OAAO,CAAEC,MAAM,IAAK;UAC1B,IAAIF,QAAQ,CAACG,OAAO,CAACD,MAAM,CAAC,EAAE;YAC5BL,GAAG,CAACO,GAAG,CAACF,MAAM,EAAEF,QAAQ,CAACG,OAAO,CAACD,MAAM,CAAC,CAAC;UAC3C;QACF,CAAC,CAAC;QACFL,GAAG,CAACQ,IAAI,CAACL,QAAQ,CAACM,IAAI,CAAC;MACzB,CAAC,CAAC,CACDC,KAAK,CAACT,IAAI,CAAC;IAChB;IAEA,MAAMU,UAAU,GAAGjB,OAAO,CAACkB,MAAM,EAAE;IAEnCD,UAAU,CAACE,GAAG,CAAC,CAAC,uBAAuB,CAAC,EAAEf,eAAe,CAAC;IAC1Da,UAAU,CAACG,EAAE,GAAG,iCAAiC;IACjDtB,MAAM,CAACuB,QAAQ,CAACC,iBAAiB,CAACC,IAAI,CAACN,UAAU,CAAC;EACpD;EACA,OAAOnB,MAAM;AACf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}