{"ast":null,"code":"import { toggleList } from './utils';\nimport { isBlockActive } from '@plone/volto-slate/utils';\nimport { UL, OL, LI } from '@plone/volto-slate/constants';\n\n/**\n * Uses the old toggleList function to toggle lists on or off or from a type to another.\n * @param {Editor} editor The editor to which to apply the change.\n * @param {string} format A list type.\n */\nexport const localToggleList = (editor, format) => {\n  toggleList(editor, {\n    typeList: format,\n    isBulletedActive: !!isBlockActive(editor, UL),\n    isNumberedActive: !!isBlockActive(editor, OL)\n  });\n};\n\n/**\n * The autoformat rules created by this plugin for the Markdown language.\n *\n * @todo Use constants instead of the remaining hard-coded types (h2, h3 etc.).\n */\nexport const autoformatRules = [{\n  type: 'h2',\n  markup: '#'\n}, {\n  type: 'h3',\n  markup: '##'\n}, {\n  type: LI,\n  markup: ['*', '-', '+'],\n  format: editor => {\n    localToggleList(editor, 'ul');\n  }\n}, {\n  type: LI,\n  markup: ['1.', '1)'],\n  format: editor => {\n    localToggleList(editor, 'ol');\n  }\n}, {\n  type: 'blockquote',\n  markup: ['>']\n  // preFormat,\n}, {\n  type: 'bold',\n  between: ['**', '**'],\n  mode: 'inline',\n  insertTrigger: true\n}, {\n  type: 'bold',\n  between: ['__', '__'],\n  mode: 'inline',\n  insertTrigger: true\n}, {\n  type: 'italic',\n  between: ['*', '*'],\n  mode: 'inline',\n  insertTrigger: true\n}, {\n  type: 'italic',\n  between: ['_', '_'],\n  mode: 'inline',\n  insertTrigger: true\n}, {\n  type: 'strikethrough',\n  between: ['~~', '~~'],\n  mode: 'inline',\n  insertTrigger: true\n}];","map":{"version":3,"names":["toggleList","isBlockActive","UL","OL","LI","localToggleList","editor","format","typeList","isBulletedActive","isNumberedActive","autoformatRules","type","markup","between","mode","insertTrigger"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/packages/volto-slate/src/editor/plugins/Markdown/constants.js"],"sourcesContent":["import { toggleList, unwrapList } from './utils';\nimport { isBlockActive } from '@plone/volto-slate/utils';\nimport { UL, OL, LI } from '@plone/volto-slate/constants';\n\n/**\n * Uses the old toggleList function to toggle lists on or off or from a type to another.\n * @param {Editor} editor The editor to which to apply the change.\n * @param {string} format A list type.\n */\nexport const localToggleList = (editor, format) => {\n  toggleList(editor, {\n    typeList: format,\n    isBulletedActive: !!isBlockActive(editor, UL),\n    isNumberedActive: !!isBlockActive(editor, OL),\n  });\n};\n\n/**\n * The autoformat rules created by this plugin for the Markdown language.\n *\n * @todo Use constants instead of the remaining hard-coded types (h2, h3 etc.).\n */\nexport const autoformatRules = [\n  {\n    type: 'h2',\n    markup: '#',\n  },\n  {\n    type: 'h3',\n    markup: '##',\n  },\n  {\n    type: LI,\n    markup: ['*', '-', '+'],\n    format: (editor) => {\n      localToggleList(editor, 'ul');\n    },\n  },\n  {\n    type: LI,\n    markup: ['1.', '1)'],\n    format: (editor) => {\n      localToggleList(editor, 'ol');\n    },\n  },\n  {\n    type: 'blockquote',\n    markup: ['>'],\n    // preFormat,\n  },\n  {\n    type: 'bold',\n    between: ['**', '**'],\n    mode: 'inline',\n    insertTrigger: true,\n  },\n  {\n    type: 'bold',\n    between: ['__', '__'],\n    mode: 'inline',\n    insertTrigger: true,\n  },\n  {\n    type: 'italic',\n    between: ['*', '*'],\n    mode: 'inline',\n    insertTrigger: true,\n  },\n  {\n    type: 'italic',\n    between: ['_', '_'],\n    mode: 'inline',\n    insertTrigger: true,\n  },\n  {\n    type: 'strikethrough',\n    between: ['~~', '~~'],\n    mode: 'inline',\n    insertTrigger: true,\n  },\n];\n"],"mappings":"AAAA,SAASA,UAAU,QAAoB,SAAS;AAChD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,EAAE,EAAEC,EAAE,EAAEC,EAAE,QAAQ,8BAA8B;;AAEzD;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAG,CAACC,MAAM,EAAEC,MAAM,KAAK;EACjDP,UAAU,CAACM,MAAM,EAAE;IACjBE,QAAQ,EAAED,MAAM;IAChBE,gBAAgB,EAAE,CAAC,CAACR,aAAa,CAACK,MAAM,EAAEJ,EAAE,CAAC;IAC7CQ,gBAAgB,EAAE,CAAC,CAACT,aAAa,CAACK,MAAM,EAAEH,EAAE;EAC9C,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMQ,eAAe,GAAG,CAC7B;EACEC,IAAI,EAAE,IAAI;EACVC,MAAM,EAAE;AACV,CAAC,EACD;EACED,IAAI,EAAE,IAAI;EACVC,MAAM,EAAE;AACV,CAAC,EACD;EACED,IAAI,EAAER,EAAE;EACRS,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACvBN,MAAM,EAAGD,MAAM,IAAK;IAClBD,eAAe,CAACC,MAAM,EAAE,IAAI,CAAC;EAC/B;AACF,CAAC,EACD;EACEM,IAAI,EAAER,EAAE;EACRS,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;EACpBN,MAAM,EAAGD,MAAM,IAAK;IAClBD,eAAe,CAACC,MAAM,EAAE,IAAI,CAAC;EAC/B;AACF,CAAC,EACD;EACEM,IAAI,EAAE,YAAY;EAClBC,MAAM,EAAE,CAAC,GAAG;EACZ;AACF,CAAC,EACD;EACED,IAAI,EAAE,MAAM;EACZE,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;EACrBC,IAAI,EAAE,QAAQ;EACdC,aAAa,EAAE;AACjB,CAAC,EACD;EACEJ,IAAI,EAAE,MAAM;EACZE,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;EACrBC,IAAI,EAAE,QAAQ;EACdC,aAAa,EAAE;AACjB,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdE,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACnBC,IAAI,EAAE,QAAQ;EACdC,aAAa,EAAE;AACjB,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdE,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACnBC,IAAI,EAAE,QAAQ;EACdC,aAAa,EAAE;AACjB,CAAC,EACD;EACEJ,IAAI,EAAE,eAAe;EACrBE,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;EACrBC,IAAI,EAAE,QAAQ;EACdC,aAAa,EAAE;AACjB,CAAC,CACF"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}