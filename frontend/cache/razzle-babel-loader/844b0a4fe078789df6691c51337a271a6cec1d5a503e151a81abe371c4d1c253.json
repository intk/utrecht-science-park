{"ast":null,"code":"var _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/components/theme/Navigation/NavItem.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { isInternalURL } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nimport cx from 'classnames';\nconst NavItem = _ref => {\n  let {\n    item,\n    lang,\n    onClose,\n    level = 0\n  } = _ref;\n  const {\n    settings\n  } = config;\n  // The item.url in the root is ''\n  // TODO: make more consistent it everywhere (eg. reducers to return '/' instead of '')\n  if (isInternalURL(item.url) || item.url === '') {\n    var _item$items;\n    return __jsx(\"div\", {\n      className: cx('item', `level-${level}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, __jsx(NavLink, {\n      to: item.url === '' ? '/' : item.url,\n      key: item.url,\n      activeClassName: \"active\",\n      exact: settings.isMultilingual ? item.url === `/${lang}` : item.url === '',\n      onClick: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, item.title), (_item$items = item.items) === null || _item$items === void 0 ? void 0 : _item$items.map(child => __jsx(NavItem, {\n      item: child,\n      lang: lang,\n      level: level + 1,\n      key: child.url,\n      onClose: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    var _item$items2;\n    return __jsx(React.Fragment, null, __jsx(\"a\", {\n      href: item.url,\n      key: item.url,\n      className: \"item\",\n      rel: \"noopener noreferrer\",\n      level: level,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, item.title), (_item$items2 = item.items) === null || _item$items2 === void 0 ? void 0 : _item$items2.map(child => __jsx(NavItem, {\n      item: child,\n      lang: lang,\n      level: level + 1,\n      key: child.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    })));\n  }\n};\n_c = NavItem;\nexport default NavItem;\nvar _c;\n$RefreshReg$(_c, \"NavItem\");","map":{"version":3,"names":["React","NavLink","isInternalURL","config","cx","NavItem","item","lang","onClose","level","settings","url","isMultilingual","title","items","map","child"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/components/theme/Navigation/NavItem.jsx"],"sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { isInternalURL } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nimport cx from 'classnames';\n\nconst NavItem = ({ item, lang, onClose, level = 0 }) => {\n  const { settings } = config;\n  // The item.url in the root is ''\n  // TODO: make more consistent it everywhere (eg. reducers to return '/' instead of '')\n  if (isInternalURL(item.url) || item.url === '') {\n    return (\n      <div className={cx('item', `level-${level}`)}>\n        <NavLink\n          to={item.url === '' ? '/' : item.url}\n          key={item.url}\n          activeClassName=\"active\"\n          exact={\n            settings.isMultilingual ? item.url === `/${lang}` : item.url === ''\n          }\n          onClick={onClose}\n        >\n          {item.title}\n        </NavLink>\n        {item.items?.map((child) => (\n          <NavItem\n            item={child}\n            lang={lang}\n            level={level + 1}\n            key={child.url}\n            onClose={onClose}\n          />\n        ))}\n      </div>\n    );\n  } else {\n    return (\n      <>\n        <a\n          href={item.url}\n          key={item.url}\n          className=\"item\"\n          rel=\"noopener noreferrer\"\n          level={level}\n        >\n          {item.title}\n        </a>\n        {item.items?.map((child) => (\n          <NavItem item={child} lang={lang} level={level + 1} key={child.url} />\n        ))}\n      </>\n    );\n  }\n};\n\nexport default NavItem;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,aAAa,QAAQ,sBAAsB;AACpD,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,EAAE,MAAM,YAAY;AAE3B,MAAMC,OAAO,GAAG,QAAwC;EAAA,IAAvC;IAAEC,IAAI;IAAEC,IAAI;IAAEC,OAAO;IAAEC,KAAK,GAAG;EAAE,CAAC;EACjD,MAAM;IAAEC;EAAS,CAAC,GAAGP,MAAM;EAC3B;EACA;EACA,IAAID,aAAa,CAACI,IAAI,CAACK,GAAG,CAAC,IAAIL,IAAI,CAACK,GAAG,KAAK,EAAE,EAAE;IAAA;IAC9C,OACE;MAAK,SAAS,EAAEP,EAAE,CAAC,MAAM,EAAG,SAAQK,KAAM,EAAC,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC3C,MAAC,OAAO;MACN,EAAE,EAAEH,IAAI,CAACK,GAAG,KAAK,EAAE,GAAG,GAAG,GAAGL,IAAI,CAACK,GAAI;MACrC,GAAG,EAAEL,IAAI,CAACK,GAAI;MACd,eAAe,EAAC,QAAQ;MACxB,KAAK,EACHD,QAAQ,CAACE,cAAc,GAAGN,IAAI,CAACK,GAAG,KAAM,IAAGJ,IAAK,EAAC,GAAGD,IAAI,CAACK,GAAG,KAAK,EAClE;MACD,OAAO,EAAEH,OAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAEhBF,IAAI,CAACO,KAAK,CACH,iBACTP,IAAI,CAACQ,KAAK,gDAAV,YAAYC,GAAG,CAAEC,KAAK,IACrB,MAAC,OAAO;MACN,IAAI,EAAEA,KAAM;MACZ,IAAI,EAAET,IAAK;MACX,KAAK,EAAEE,KAAK,GAAG,CAAE;MACjB,GAAG,EAAEO,KAAK,CAACL,GAAI;MACf,OAAO,EAAEH,OAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAEpB,CAAC,CACE;EAEV,CAAC,MAAM;IAAA;IACL,OACE,4BACE;MACE,IAAI,EAAEF,IAAI,CAACK,GAAI;MACf,GAAG,EAAEL,IAAI,CAACK,GAAI;MACd,SAAS,EAAC,MAAM;MAChB,GAAG,EAAC,qBAAqB;MACzB,KAAK,EAAEF,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAEZH,IAAI,CAACO,KAAK,CACT,kBACHP,IAAI,CAACQ,KAAK,iDAAV,aAAYC,GAAG,CAAEC,KAAK,IACrB,MAAC,OAAO;MAAC,IAAI,EAAEA,KAAM;MAAC,IAAI,EAAET,IAAK;MAAC,KAAK,EAAEE,KAAK,GAAG,CAAE;MAAC,GAAG,EAAEO,KAAK,CAACL,GAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACpE,CAAC,CACD;EAEP;AACF,CAAC;AAAC,KA/CIN,OAAO;AAiDb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}