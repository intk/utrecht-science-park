{"ast":null,"code":"var _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Widgets/NumberWidget.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n/**\n * NumberWidget component.\n * @module components/manage/Widgets/PassswordWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'semantic-ui-react';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport { injectIntl } from 'react-intl';\n\n/**\n * NumberWidget component class.\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Number\",\n *  type: 'number',\n * }\n * ```\n */\nconst NumberWidget = props => {\n  const {\n    id,\n    value,\n    onChange,\n    onBlur,\n    onClick,\n    isDisabled,\n    maximum,\n    minimum,\n    placeholder,\n    step\n  } = props;\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), __jsx(Input, {\n    id: `field-${id}`,\n    name: id,\n    type: \"number\",\n    disabled: isDisabled,\n    min: minimum || null,\n    max: maximum || null,\n    step: step,\n    value: value !== null && value !== void 0 ? value : '',\n    placeholder: placeholder,\n    onChange: ({\n      target\n    }) => onChange(id, target.value === '' ? undefined : target.value),\n    onBlur: ({\n      target\n    }) => onBlur(id, target.value === '' ? undefined : target.value),\n    onClick: () => onClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nNumberWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func.isRequired,\n  wrapped: PropTypes.bool,\n  maximum: PropTypes.number,\n  minimum: PropTypes.number,\n  step: PropTypes.number,\n  placeholder: PropTypes.string\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nNumberWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {}\n};\nexport default injectIntl(NumberWidget);","map":{"version":3,"names":["React","PropTypes","Input","FormFieldWrapper","injectIntl","NumberWidget","props","id","value","onChange","onBlur","onClick","isDisabled","maximum","minimum","placeholder","step","target","undefined","propTypes","string","isRequired","title","description","oneOfType","object","required","bool","error","arrayOf","number","func","wrapped","defaultProps"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Widgets/NumberWidget.jsx"],"sourcesContent":["/**\n * NumberWidget component.\n * @module components/manage/Widgets/PassswordWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'semantic-ui-react';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport { injectIntl } from 'react-intl';\n\n/**\n * NumberWidget component class.\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Number\",\n *  type: 'number',\n * }\n * ```\n */\nconst NumberWidget = (props) => {\n  const {\n    id,\n    value,\n    onChange,\n    onBlur,\n    onClick,\n    isDisabled,\n    maximum,\n    minimum,\n    placeholder,\n    step,\n  } = props;\n\n  return (\n    <FormFieldWrapper {...props}>\n      <Input\n        id={`field-${id}`}\n        name={id}\n        type=\"number\"\n        disabled={isDisabled}\n        min={minimum || null}\n        max={maximum || null}\n        step={step}\n        value={value ?? ''}\n        placeholder={placeholder}\n        onChange={({ target }) =>\n          onChange(id, target.value === '' ? undefined : target.value)\n        }\n        onBlur={({ target }) =>\n          onBlur(id, target.value === '' ? undefined : target.value)\n        }\n        onClick={() => onClick()}\n      />\n    </FormFieldWrapper>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nNumberWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func.isRequired,\n  wrapped: PropTypes.bool,\n  maximum: PropTypes.number,\n  minimum: PropTypes.number,\n  step: PropTypes.number,\n  placeholder: PropTypes.string,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nNumberWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {},\n};\n\nexport default injectIntl(NumberWidget);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}