{"ast":null,"code":"import _defineProperty from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/theme/Login/Login.jsx\";\nvar __jsx = React.createElement;\n/**\n * Login container.\n * @module components/theme/Login/Login\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Button, Form, Input, Segment, Grid } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport qs from 'query-string';\nimport { withRouter } from 'react-router-dom';\nimport { Icon } from '@plone/volto/components';\nimport { login } from '@plone/volto/actions';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport config from '@plone/volto/registry';\nconst messages = defineMessages({\n  login: {\n    \"id\": \"Log in\",\n    \"defaultMessage\": \"Log in\"\n  },\n  loginName: {\n    \"id\": \"Login Name\",\n    \"defaultMessage\": \"Login Name\"\n  },\n  Login: {\n    \"id\": \"Login\",\n    \"defaultMessage\": \"Login\"\n  },\n  password: {\n    \"id\": \"Password\",\n    \"defaultMessage\": \"Password\"\n  },\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  },\n  error: {\n    \"id\": \"Error\",\n    \"defaultMessage\": \"Error\"\n  },\n  loginFailed: {\n    \"id\": \"Login Failed\",\n    \"defaultMessage\": \"Login Failed\"\n  },\n  loginFailedContent: {\n    \"id\": \"Both email address and password are case sensitive, check that caps lock is not enabled.\",\n    \"defaultMessage\": \"Both email address and password are case sensitive, check that caps lock is not enabled.\"\n  },\n  register: {\n    \"id\": \"Register\",\n    \"defaultMessage\": \"Register\"\n  },\n  forgotPassword: {\n    \"id\": \"box_forgot_password_option\",\n    \"defaultMessage\": \"Forgot your password?\"\n  }\n});\n\n/**\n * Login class.\n * @class Login\n * @extends Component\n */\nclass Login extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.onLogin = this.onLogin.bind(this);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.token) {\n      this.props.history.push(this.props.returnUrl || '/');\n      if (toast.isActive('loggedOut')) {\n        toast.dismiss('loggedOut');\n      }\n      if (toast.isActive('loginFailed')) {\n        toast.dismiss('loginFailed');\n      }\n    }\n    if (nextProps.error) {\n      if (toast.isActive('loggedOut')) {\n        toast.dismiss('loggedOut');\n      }\n      if (!toast.isActive('loginFailed')) {\n        toast.error(__jsx(Toast, {\n          error: true,\n          title: this.props.intl.formatMessage(messages.loginFailed),\n          content: this.props.intl.formatMessage(messages.loginFailedContent),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }\n        }), {\n          autoClose: false,\n          toastId: 'loginFailed'\n        });\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (toast.isActive('loginFailed')) {\n      toast.dismiss('loginFailed');\n    }\n  }\n\n  /**\n   * On login handler\n   * @method onLogin\n   * @param {Object} event Event object.\n   * @returns {undefined}\n   */\n  onLogin(event) {\n    this.props.login(document.getElementsByName('login')[0].value, document.getElementsByName('password')[0].value);\n    event.preventDefault();\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return __jsx(\"div\", {\n      id: \"page-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.Login),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }), __jsx(Container, {\n      text: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }, __jsx(Form, {\n      method: \"post\",\n      onSubmit: this.onLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, __jsx(Segment, {\n      className: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Log In\",\n      defaultMessage: \"Login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      secondary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Sign in to start session\",\n      defaultMessage: \"Sign in to start session\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Field, {\n      inline: true,\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    }, __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, __jsx(Grid.Column, {\n      width: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 23\n      }\n    }, __jsx(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 27\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Login Name\",\n      defaultMessage: \"Login Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 29\n      }\n    })))), __jsx(Grid.Column, {\n      width: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 23\n      }\n    }, __jsx(Input, {\n      id: \"login\",\n      name: \"login\",\n      placeholder: this.props.intl.formatMessage(messages.loginName),\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }))))), __jsx(Form.Field, {\n      inline: true,\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 19\n      }\n    }, __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }, __jsx(Grid.Column, {\n      stretched: true,\n      width: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 23\n      }\n    }, __jsx(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 27\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Password\",\n      defaultMessage: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 29\n      }\n    })))), __jsx(Grid.Column, {\n      stretched: true,\n      width: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 23\n      }\n    }, __jsx(Input, {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      placeholder: this.props.intl.formatMessage(messages.password),\n      tabIndex: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 25\n      }\n    }))))), __jsx(Form.Field, {\n      inline: true,\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 19\n      }\n    }, __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }\n    }, config.settings.showSelfRegistration && __jsx(Grid.Column, {\n      stretched: true,\n      width: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 25\n      }\n    }, __jsx(\"p\", {\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 27\n      }\n    }, __jsx(Link, {\n      to: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage(messages.register)))), __jsx(Grid.Column, {\n      stretched: true,\n      width: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 23\n      }\n    }, __jsx(\"p\", {\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 25\n      }\n    }, __jsx(Link, {\n      to: \"/passwordreset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 27\n      }\n    }, this.props.intl.formatMessage(messages.forgotPassword)))))))), __jsx(Segment, {\n      className: \"actions\",\n      clearing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      basic: true,\n      primary: true,\n      icon: true,\n      floated: \"right\",\n      type: \"submit\",\n      id: \"login-form-submit\",\n      \"aria-label\": this.props.intl.formatMessage(messages.login),\n      title: this.props.intl.formatMessage(messages.login),\n      loading: this.props.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      className: \"circled\",\n      name: aheadSVG,\n      size: \"30px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 19\n      }\n    })), __jsx(Button, {\n      basic: true,\n      secondary: true,\n      icon: true,\n      floated: \"right\",\n      id: \"login-form-cancel\",\n      as: Link,\n      to: \"/\",\n      \"aria-label\": this.props.intl.formatMessage(messages.cancel),\n      title: this.props.intl.formatMessage(messages.cancel),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      className: \"circled\",\n      name: clearSVG,\n      size: \"30px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 19\n      }\n    })))))));\n  }\n}\n_defineProperty(Login, \"propTypes\", {\n  login: PropTypes.func.isRequired,\n  error: PropTypes.shape({\n    message: PropTypes.string\n  }),\n  loading: PropTypes.bool,\n  token: PropTypes.string,\n  // eslint-disable-line react/no-unused-prop-types\n  returnUrl: PropTypes.string\n});\n_defineProperty(Login, \"defaultProps\", {\n  error: null,\n  loading: null,\n  token: null,\n  returnUrl: null\n});\nexport default compose(withRouter, injectIntl, connect((state, props) => ({\n  error: state.userSession.login.error,\n  loading: state.userSession.login.loading,\n  token: state.userSession.token,\n  returnUrl: qs.parse(props.location.search).return_url || props.location.pathname.replace(/\\/login\\/?$/, '').replace(/\\/logout\\/?$/, '') || '/'\n}), {\n  login\n}))(Login);","map":{"version":3,"names":["React","Component","PropTypes","Helmet","connect","compose","Link","Container","Button","Form","Input","Segment","Grid","FormattedMessage","defineMessages","injectIntl","qs","withRouter","Icon","login","toast","Toast","aheadSVG","clearSVG","config","messages","loginName","Login","password","cancel","error","loginFailed","loginFailedContent","register","forgotPassword","constructor","props","onLogin","bind","UNSAFE_componentWillReceiveProps","nextProps","token","history","push","returnUrl","isActive","dismiss","intl","formatMessage","autoClose","toastId","componentWillUnmount","event","document","getElementsByName","value","preventDefault","render","settings","showSelfRegistration","loading","func","isRequired","shape","message","string","bool","state","userSession","parse","location","search","return_url","pathname","replace"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/theme/Login/Login.jsx"],"sourcesContent":["/**\n * Login container.\n * @module components/theme/Login/Login\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport {\n  Container,\n  Button,\n  Form,\n  Input,\n  Segment,\n  Grid,\n} from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport qs from 'query-string';\nimport { withRouter } from 'react-router-dom';\n\nimport { Icon } from '@plone/volto/components';\nimport { login } from '@plone/volto/actions';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\n\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  login: {\n    id: 'Log in',\n    defaultMessage: 'Log in',\n  },\n  loginName: {\n    id: 'Login Name',\n    defaultMessage: 'Login Name',\n  },\n  Login: {\n    id: 'Login',\n    defaultMessage: 'Login',\n  },\n  password: {\n    id: 'Password',\n    defaultMessage: 'Password',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  loginFailed: {\n    id: 'Login Failed',\n    defaultMessage: 'Login Failed',\n  },\n  loginFailedContent: {\n    id:\n      'Both email address and password are case sensitive, check that caps lock is not enabled.',\n    defaultMessage:\n      'Both email address and password are case sensitive, check that caps lock is not enabled.',\n  },\n  register: {\n    id: 'Register',\n    defaultMessage: 'Register',\n  },\n  forgotPassword: {\n    id: 'box_forgot_password_option',\n    defaultMessage: 'Forgot your password?',\n  },\n});\n\n/**\n * Login class.\n * @class Login\n * @extends Component\n */\nclass Login extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    login: PropTypes.func.isRequired,\n    error: PropTypes.shape({\n      message: PropTypes.string,\n    }),\n    loading: PropTypes.bool,\n    token: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\n    returnUrl: PropTypes.string,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    error: null,\n    loading: null,\n    token: null,\n    returnUrl: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.onLogin = this.onLogin.bind(this);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.token) {\n      this.props.history.push(this.props.returnUrl || '/');\n      if (toast.isActive('loggedOut')) {\n        toast.dismiss('loggedOut');\n      }\n      if (toast.isActive('loginFailed')) {\n        toast.dismiss('loginFailed');\n      }\n    }\n    if (nextProps.error) {\n      if (toast.isActive('loggedOut')) {\n        toast.dismiss('loggedOut');\n      }\n      if (!toast.isActive('loginFailed')) {\n        toast.error(\n          <Toast\n            error\n            title={this.props.intl.formatMessage(messages.loginFailed)}\n            content={this.props.intl.formatMessage(messages.loginFailedContent)}\n          />,\n          { autoClose: false, toastId: 'loginFailed' },\n        );\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (toast.isActive('loginFailed')) {\n      toast.dismiss('loginFailed');\n    }\n  }\n\n  /**\n   * On login handler\n   * @method onLogin\n   * @param {Object} event Event object.\n   * @returns {undefined}\n   */\n  onLogin(event) {\n    this.props.login(\n      document.getElementsByName('login')[0].value,\n      document.getElementsByName('password')[0].value,\n    );\n    event.preventDefault();\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <div id=\"page-login\">\n        <Helmet title={this.props.intl.formatMessage(messages.Login)} />\n        <Container text>\n          <Form method=\"post\" onSubmit={this.onLogin}>\n            <Segment.Group raised>\n              <Segment className=\"primary\">\n                <FormattedMessage id=\"Log In\" defaultMessage=\"Login\" />\n              </Segment>\n              <Segment secondary>\n                <FormattedMessage\n                  id=\"Sign in to start session\"\n                  defaultMessage=\"Sign in to start session\"\n                />\n              </Segment>\n              <Segment className=\"form\">\n                <Form.Field inline className=\"help\">\n                  <Grid>\n                    <Grid.Row stretched>\n                      <Grid.Column width=\"4\">\n                        <div className=\"wrapper\">\n                          <label htmlFor=\"login\">\n                            <FormattedMessage\n                              id=\"Login Name\"\n                              defaultMessage=\"Login Name\"\n                            />\n                          </label>\n                        </div>\n                      </Grid.Column>\n                      <Grid.Column width=\"8\">\n                        {/* eslint-disable jsx-a11y/no-autofocus */}\n                        <Input\n                          id=\"login\"\n                          name=\"login\"\n                          placeholder={this.props.intl.formatMessage(\n                            messages.loginName,\n                          )}\n                          autoFocus\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Form.Field>\n                <Form.Field inline className=\"help\">\n                  <Grid>\n                    <Grid.Row stretched>\n                      <Grid.Column stretched width=\"4\">\n                        <div className=\"wrapper\">\n                          <label htmlFor=\"password\">\n                            <FormattedMessage\n                              id=\"Password\"\n                              defaultMessage=\"Password\"\n                            />\n                          </label>\n                        </div>\n                      </Grid.Column>\n                      <Grid.Column stretched width=\"8\">\n                        <Input\n                          type=\"password\"\n                          id=\"password\"\n                          name=\"password\"\n                          placeholder={this.props.intl.formatMessage(\n                            messages.password,\n                          )}\n                          tabIndex={0}\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Form.Field>\n                <Form.Field inline className=\"help\">\n                  <Grid>\n                    <Grid.Row stretched>\n                      {config.settings.showSelfRegistration && (\n                        <Grid.Column stretched width=\"12\">\n                          <p className=\"help\">\n                            <Link to=\"/register\">\n                              {this.props.intl.formatMessage(messages.register)}\n                            </Link>\n                          </p>\n                        </Grid.Column>\n                      )}\n                      <Grid.Column stretched width=\"12\">\n                        <p className=\"help\">\n                          <Link to=\"/passwordreset\">\n                            {this.props.intl.formatMessage(\n                              messages.forgotPassword,\n                            )}\n                          </Link>\n                        </p>\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Form.Field>\n              </Segment>\n              <Segment className=\"actions\" clearing>\n                <Button\n                  basic\n                  primary\n                  icon\n                  floated=\"right\"\n                  type=\"submit\"\n                  id=\"login-form-submit\"\n                  aria-label={this.props.intl.formatMessage(messages.login)}\n                  title={this.props.intl.formatMessage(messages.login)}\n                  loading={this.props.loading}\n                >\n                  <Icon className=\"circled\" name={aheadSVG} size=\"30px\" />\n                </Button>\n\n                <Button\n                  basic\n                  secondary\n                  icon\n                  floated=\"right\"\n                  id=\"login-form-cancel\"\n                  as={Link}\n                  to=\"/\"\n                  aria-label={this.props.intl.formatMessage(messages.cancel)}\n                  title={this.props.intl.formatMessage(messages.cancel)}\n                >\n                  <Icon className=\"circled\" name={clearSVG} size=\"30px\" />\n                </Button>\n              </Segment>\n            </Segment.Group>\n          </Form>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state, props) => ({\n      error: state.userSession.login.error,\n      loading: state.userSession.login.loading,\n      token: state.userSession.token,\n      returnUrl:\n        qs.parse(props.location.search).return_url ||\n        props.location.pathname\n          .replace(/\\/login\\/?$/, '')\n          .replace(/\\/logout\\/?$/, '') ||\n        '/',\n    }),\n    { login },\n  ),\n)(Login);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Log in","defaultMessage":"Log in"},{"id":"Login Name","defaultMessage":"Login Name"},{"id":"Login","defaultMessage":"Login"},{"id":"Password","defaultMessage":"Password"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Error","defaultMessage":"Error"},{"id":"Login Failed","defaultMessage":"Login Failed"},{"id":"Both email address and password are case sensitive, check that caps lock is not enabled.","defaultMessage":"Both email address and password are case sensitive, check that caps lock is not enabled."},{"id":"Register","defaultMessage":"Register"},{"id":"box_forgot_password_option","defaultMessage":"Forgot your password?"},{"id":"Log In","defaultMessage":"Login"},{"id":"Sign in to start session","defaultMessage":"Sign in to start session"}]}},"sourceType":"module","externalDependencies":[]}