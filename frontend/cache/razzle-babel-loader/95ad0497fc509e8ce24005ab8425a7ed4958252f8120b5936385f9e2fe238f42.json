{"ast":null,"code":"import _omit from \"lodash/omit\";\nconst _excluded = [\"icon\", \"active\"],\n  _excluded2 = [\"editor\", \"toSelect\", \"option\"];\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/packages/volto-slate/src/editor/plugins/StyleMenu/StyleMenu.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport { useSlate } from 'slate-react';\nimport { Dropdown } from 'semantic-ui-react';\nimport { useIntl, defineMessages } from 'react-intl';\nimport cx from 'classnames';\nimport { isBlockStyleActive, isInlineStyleActive, toggleStyle } from './utils';\nimport config from '@plone/volto/registry';\nimport { ToolbarButton } from '@plone/volto-slate/editor/ui';\nimport paintSVG from '@plone/volto/icons/paint.svg';\nconst messages = defineMessages({\n  inlineStyle: {\n    \"id\": \"Inline Style\",\n    \"defaultMessage\": \"Inline Style\"\n  },\n  paragraphStyle: {\n    \"id\": \"Paragraph Style\",\n    \"defaultMessage\": \"Paragraph Style\"\n  },\n  additionalStyles: {\n    \"id\": \"Additional Styles\",\n    \"defaultMessage\": \"Additional Styles\"\n  }\n});\nconst StyleMenuButton = _ref => {\n  let {\n      icon,\n      active\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return __jsx(ToolbarButton, _extends({}, props, {\n    icon: icon,\n    active: active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  }));\n};\nconst MenuOpts = _ref2 => {\n  let {\n      editor,\n      toSelect,\n      option\n    } = _ref2,\n    rest = _objectWithoutProperties(_ref2, _excluded2);\n  const isActive = toSelect.includes(option);\n  return __jsx(Dropdown.Item, _extends({\n    as: \"span\",\n    active: isActive,\n    className: cx({\n      active: isActive\n    })\n  }, _omit(option, ['isBlock']), {\n    \"data-isblock\": option.isBlock,\n    onClick: (event, selItem) => {\n      toggleStyle(editor, {\n        cssClass: selItem.value,\n        isBlock: selItem.isBlock\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }));\n};\nconst StylingsButton = props => {\n  var _config$settings$slat;\n  const editor = useSlate();\n  const intl = useIntl();\n\n  // Converting the settings to a format that is required by dropdowns.\n  const inlineOpts = [...config.settings.slate.styleMenu.inlineStyles.map(def => {\n    return {\n      value: def.cssClass,\n      text: def.label,\n      icon: def.icon,\n      isBlock: false\n    };\n  })];\n  const blockOpts = [...config.settings.slate.styleMenu.blockStyles.map(def => {\n    return {\n      value: def.cssClass,\n      text: def.label,\n      icon: def.icon,\n      isBlock: true\n    };\n  })];\n\n  // Calculating the initial selection.\n  const toSelect = [];\n  // block styles\n  for (const val of blockOpts) {\n    const ia = isBlockStyleActive(editor, val.value);\n    if (ia) {\n      toSelect.push(val);\n    }\n  }\n  // inline styles\n  for (const val of inlineOpts) {\n    const ia = isInlineStyleActive(editor, val.value);\n    if (ia) {\n      toSelect.push(val);\n    }\n  }\n  const menuItemProps = {\n    toSelect,\n    editor\n  };\n  const showMenu = inlineOpts.length || blockOpts.length;\n  return showMenu ? __jsx(Dropdown, {\n    id: \"style-menu\",\n    pointing: \"top left\",\n    multiple: true,\n    value: toSelect,\n    disabled: (_config$settings$slat = config.settings.slate.styleMenu.disabled) !== null && _config$settings$slat !== void 0 ? _config$settings$slat : false,\n    additionLabel: intl.formatMessage(messages.additionalStyles),\n    trigger: __jsx(StyleMenuButton, {\n      title: intl.formatMessage(messages.additionalStyles),\n      icon: paintSVG,\n      active: toSelect.length > 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, __jsx(Dropdown.Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, inlineOpts.length && __jsx(React.Fragment, null, __jsx(Dropdown.Header, {\n    content: intl.formatMessage(messages.inlineStyle),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }), inlineOpts.map((option, index) => __jsx(MenuOpts, _extends({}, menuItemProps, {\n    option: option,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  })))), blockOpts.length && __jsx(React.Fragment, null, __jsx(Dropdown.Header, {\n    content: intl.formatMessage(messages.paragraphStyle),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), blockOpts.map((option, index) => __jsx(MenuOpts, _extends({}, menuItemProps, {\n    option: option,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  })))))) : '';\n};\nexport default StylingsButton;","map":{"version":3,"names":["React","useSlate","Dropdown","useIntl","defineMessages","cx","isBlockStyleActive","isInlineStyleActive","toggleStyle","config","ToolbarButton","paintSVG","messages","inlineStyle","paragraphStyle","additionalStyles","StyleMenuButton","icon","active","props","MenuOpts","editor","toSelect","option","rest","isActive","includes","isBlock","event","selItem","cssClass","value","StylingsButton","intl","inlineOpts","settings","slate","styleMenu","inlineStyles","map","def","text","label","blockOpts","blockStyles","val","ia","push","menuItemProps","showMenu","length","disabled","formatMessage","index"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/packages/volto-slate/src/editor/plugins/StyleMenu/StyleMenu.jsx"],"sourcesContent":["import React from 'react';\nimport { useSlate } from 'slate-react';\nimport { Dropdown } from 'semantic-ui-react';\nimport { useIntl, defineMessages } from 'react-intl';\nimport cx from 'classnames';\nimport { omit } from 'lodash';\nimport { isBlockStyleActive, isInlineStyleActive, toggleStyle } from './utils';\nimport config from '@plone/volto/registry';\nimport { ToolbarButton } from '@plone/volto-slate/editor/ui';\nimport paintSVG from '@plone/volto/icons/paint.svg';\n\nconst messages = defineMessages({\n  inlineStyle: {\n    id: 'Inline Style',\n    defaultMessage: 'Inline Style',\n  },\n  paragraphStyle: {\n    id: 'Paragraph Style',\n    defaultMessage: 'Paragraph Style',\n  },\n  additionalStyles: {\n    id: 'Additional Styles',\n    defaultMessage: 'Additional Styles',\n  },\n});\n\nconst StyleMenuButton = ({ icon, active, ...props }) => (\n  <ToolbarButton {...props} icon={icon} active={active} />\n);\n\nconst MenuOpts = ({ editor, toSelect, option, ...rest }) => {\n  const isActive = toSelect.includes(option);\n  return (\n    <Dropdown.Item\n      as=\"span\"\n      active={isActive}\n      className={cx({ active: isActive })}\n      {...omit(option, ['isBlock'])}\n      data-isblock={option.isBlock}\n      onClick={(event, selItem) => {\n        toggleStyle(editor, {\n          cssClass: selItem.value,\n          isBlock: selItem.isBlock,\n        });\n      }}\n    />\n  );\n};\n\nconst StylingsButton = (props) => {\n  const editor = useSlate();\n  const intl = useIntl();\n\n  // Converting the settings to a format that is required by dropdowns.\n  const inlineOpts = [\n    ...config.settings.slate.styleMenu.inlineStyles.map((def) => {\n      return {\n        value: def.cssClass,\n        text: def.label,\n        icon: def.icon,\n        isBlock: false,\n      };\n    }),\n  ];\n  const blockOpts = [\n    ...config.settings.slate.styleMenu.blockStyles.map((def) => {\n      return {\n        value: def.cssClass,\n        text: def.label,\n        icon: def.icon,\n        isBlock: true,\n      };\n    }),\n  ];\n\n  // Calculating the initial selection.\n  const toSelect = [];\n  // block styles\n  for (const val of blockOpts) {\n    const ia = isBlockStyleActive(editor, val.value);\n    if (ia) {\n      toSelect.push(val);\n    }\n  }\n  // inline styles\n  for (const val of inlineOpts) {\n    const ia = isInlineStyleActive(editor, val.value);\n    if (ia) {\n      toSelect.push(val);\n    }\n  }\n\n  const menuItemProps = {\n    toSelect,\n    editor,\n  };\n  const showMenu = inlineOpts.length || blockOpts.length;\n  return showMenu ? (\n    <Dropdown\n      id=\"style-menu\"\n      pointing=\"top left\"\n      multiple\n      value={toSelect}\n      disabled={config.settings.slate.styleMenu.disabled ?? false}\n      additionLabel={intl.formatMessage(messages.additionalStyles)}\n      trigger={\n        <StyleMenuButton\n          title={intl.formatMessage(messages.additionalStyles)}\n          icon={paintSVG}\n          active={toSelect.length > 0}\n        />\n      }\n    >\n      <Dropdown.Menu>\n        {inlineOpts.length && (\n          <>\n            <Dropdown.Header\n              content={intl.formatMessage(messages.inlineStyle)}\n            />\n            {inlineOpts.map((option, index) => (\n              <MenuOpts {...menuItemProps} option={option} key={index} />\n            ))}\n          </>\n        )}\n\n        {blockOpts.length && (\n          <>\n            <Dropdown.Header\n              content={intl.formatMessage(messages.paragraphStyle)}\n            />\n            {blockOpts.map((option, index) => (\n              <MenuOpts {...menuItemProps} option={option} key={index} />\n            ))}\n          </>\n        )}\n      </Dropdown.Menu>\n    </Dropdown>\n  ) : (\n    ''\n  );\n};\n\nexport default StylingsButton;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Inline Style","defaultMessage":"Inline Style"},{"id":"Paragraph Style","defaultMessage":"Paragraph Style"},{"id":"Additional Styles","defaultMessage":"Additional Styles"}]}},"sourceType":"module","externalDependencies":[]}