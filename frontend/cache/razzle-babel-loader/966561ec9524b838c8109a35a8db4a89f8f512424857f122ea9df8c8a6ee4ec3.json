{"ast":null,"code":"import _extends from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/addons/volto-block-image-cards/src/ImageCards/RoundTiled.jsx\";\nvar __jsx = React.createElement;\nimport cx from 'classnames';\nimport React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { LazyLoadComponent } from 'react-lazy-load-image-component';\nimport { UniversalLink } from '@plone/volto/components';\nimport { BodyClass } from '@plone/volto/helpers';\nimport { getScaleUrl, getPath } from './utils';\nimport './css/roundtiled.less';\nexport const Card = props => {\n  const {\n    title,\n    link,\n    attachedimage,\n    image_scale\n  } = props;\n  return __jsx(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, link ? __jsx(React.Fragment, null, __jsx(UniversalLink, {\n    className: 'card-link',\n    href: link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, __jsx(LazyLoadComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"card-image\",\n    style: attachedimage ? {\n      backgroundImage: `url(${getScaleUrl(getPath(attachedimage), image_scale || 'preview')})`\n    } : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  })), __jsx(\"span\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, title))) : __jsx(React.Fragment, null, __jsx(LazyLoadComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"card-image\",\n    style: attachedimage ? {\n      backgroundImage: `url(${getScaleUrl(getPath(attachedimage), image_scale || 'preview')})`\n    } : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  })), __jsx(\"span\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, title)));\n};\n_c = Card;\nconst RoundTiled = _ref => {\n  let {\n    data\n  } = _ref;\n  const {\n    title,\n    cards,\n    image_scale\n  } = data;\n  return __jsx(\"div\", {\n    className: cx('block align imagecards-block', {\n      center: !Boolean(data.align)\n    }, data.align),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(BodyClass, {\n    className: \"has-card-tiles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: cx({\n      'full-width': data.align === 'full'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: 'roundtiled',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: 'roundtiled-title',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, title), __jsx(\"div\", {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    className: 'cards-grid',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, (cards || []).map((card, i) => __jsx(Grid.Column, {\n    key: i,\n    mobile: 12,\n    tablet: 6,\n    computer: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, __jsx(Card, _extends({}, card, {\n    image_scale: image_scale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  })))))))));\n};\n_c2 = RoundTiled;\nexport default RoundTiled;\nvar _c, _c2;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"RoundTiled\");","map":{"version":3,"names":["cx","React","Grid","LazyLoadComponent","UniversalLink","BodyClass","getScaleUrl","getPath","Card","props","title","link","attachedimage","image_scale","backgroundImage","RoundTiled","data","cards","center","Boolean","align","map","card","i"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/addons/volto-block-image-cards/src/ImageCards/RoundTiled.jsx"],"sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { LazyLoadComponent } from 'react-lazy-load-image-component';\nimport { UniversalLink } from '@plone/volto/components';\nimport { BodyClass } from '@plone/volto/helpers';\n\nimport { getScaleUrl, getPath } from './utils';\n\nimport './css/roundtiled.less';\n\nexport const Card = (props) => {\n  const { title, link, attachedimage, image_scale } = props;\n\n  return (\n    <div className=\"card\">\n      {link ? (\n        <>\n          <UniversalLink className={'card-link'} href={link}>\n            <LazyLoadComponent>\n              <div\n                className=\"card-image\"\n                style={\n                  attachedimage\n                    ? {\n                        backgroundImage: `url(${getScaleUrl(\n                          getPath(attachedimage),\n                          image_scale || 'preview',\n                        )})`,\n                      }\n                    : {}\n                }\n              ></div>\n            </LazyLoadComponent>\n            <span className=\"card-title\">{title}</span>\n          </UniversalLink>\n        </>\n      ) : (\n        <>\n          <LazyLoadComponent>\n            <div\n              className=\"card-image\"\n              style={\n                attachedimage\n                  ? {\n                      backgroundImage: `url(${getScaleUrl(\n                        getPath(attachedimage),\n                        image_scale || 'preview',\n                      )})`,\n                    }\n                  : {}\n              }\n            ></div>\n          </LazyLoadComponent>\n          <span className=\"card-title\">{title}</span>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst RoundTiled = ({ data }) => {\n  const { title, cards, image_scale } = data;\n  return (\n    <div\n      className={cx(\n        'block align imagecards-block',\n        {\n          center: !Boolean(data.align),\n        },\n        data.align,\n      )}\n    >\n      <BodyClass className=\"has-card-tiles\" />\n      <div\n        className={cx({\n          'full-width': data.align === 'full',\n        })}\n      >\n        <div className={'roundtiled'}>\n          <h2 className={'roundtiled-title'}>{title}</h2>\n          <div className=\"cards\">\n            <Grid className={'cards-grid'}>\n              {(cards || []).map((card, i) => (\n                <Grid.Column key={i} mobile={12} tablet={6} computer={3}>\n                  <Card {...card} image_scale={image_scale} />\n                </Grid.Column>\n              ))}\n            </Grid>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RoundTiled;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}