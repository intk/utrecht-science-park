{"ast":null,"code":"import _isBoolean from \"lodash/isBoolean\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/theme/Widgets/BooleanWidget.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport cx from 'classnames';\nimport { defineMessages, injectIntl } from 'react-intl';\nconst messages = defineMessages({\n  yes: {\n    \"id\": \"yes\",\n    \"defaultMessage\": \"Yes\"\n  },\n  no: {\n    \"id\": \"no\",\n    \"defaultMessage\": \"No\"\n  }\n});\nconst BooleanWidget = _ref => {\n  let {\n    value,\n    children,\n    className,\n    intl\n  } = _ref;\n  return _isBoolean(value) ? __jsx(\"span\", {\n    className: cx(className, 'boolean', 'widget'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, children ? children(value ? intl.formatMessage(messages.yes) : intl.formatMessage(messages.no)) : value ? intl.formatMessage(messages.yes) : intl.formatMessage(messages.no)) : '';\n};\n_c = BooleanWidget;\nexport default _c2 = injectIntl(BooleanWidget);\nvar _c, _c2;\n$RefreshReg$(_c, \"BooleanWidget\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","cx","defineMessages","injectIntl","messages","yes","no","BooleanWidget","value","children","className","intl","formatMessage"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/theme/Widgets/BooleanWidget.jsx"],"sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport { isBoolean } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  yes: {\n    id: 'yes',\n    defaultMessage: 'Yes',\n  },\n  no: {\n    id: 'no',\n    defaultMessage: 'No',\n  },\n});\n\nconst BooleanWidget = ({ value, children, className, intl }) => {\n  return isBoolean(value) ? (\n    <span className={cx(className, 'boolean', 'widget')}>\n      {children\n        ? children(\n            value\n              ? intl.formatMessage(messages.yes)\n              : intl.formatMessage(messages.no),\n          )\n        : value\n        ? intl.formatMessage(messages.yes)\n        : intl.formatMessage(messages.no)}\n    </span>\n  ) : (\n    ''\n  );\n};\n\nexport default injectIntl(BooleanWidget);\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,YAAY;AAE3B,SAASC,cAAc,EAAEC,UAAU,QAAQ,YAAY;AAEvD,MAAMC,QAAQ,GAAGF,cAAc,CAAC;EAC9BG,GAAG;IAAA;IAAA;EAAA,CAGF;EACDC,EAAE;IAAA;IAAA;EAAA;AAIJ,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAG,QAA0C;EAAA,IAAzC;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,SAAS;IAAEC;EAAK,CAAC;EACzD,OAAO,WAAUH,KAAK,CAAC,GACrB;IAAM,SAAS,EAAEP,EAAE,CAACS,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjDD,QAAQ,GACLA,QAAQ,CACND,KAAK,GACDG,IAAI,CAACC,aAAa,CAACR,QAAQ,CAACC,GAAG,CAAC,GAChCM,IAAI,CAACC,aAAa,CAACR,QAAQ,CAACE,EAAE,CAAC,CACpC,GACDE,KAAK,GACLG,IAAI,CAACC,aAAa,CAACR,QAAQ,CAACC,GAAG,CAAC,GAChCM,IAAI,CAACC,aAAa,CAACR,QAAQ,CAACE,EAAE,CAAC,CAC9B,GAEP,EACD;AACH,CAAC;AAAC,KAhBIC,aAAa;AAkBnB,qBAAeJ,UAAU,CAACI,aAAa,CAAC;AAAC;AAAA;AAAA"},"metadata":{"react-intl":{"messages":[{"id":"yes","defaultMessage":"Yes"},{"id":"no","defaultMessage":"No"}]}},"sourceType":"module","externalDependencies":[]}