{"ast":null,"code":"var _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/addons/volto-block-image-cards/src/ImageCards/ImageCardsView.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport config from '@plone/volto/registry';\nconst ImageCardView = props => {\n  const byDisplayType = {};\n  const blockConfig = config.blocks.blocksConfig.imagecards;\n  const {\n    blockRenderers,\n    defaultRendererName\n  } = blockConfig;\n  const block_renderers_ids = Object.keys(blockRenderers);\n  block_renderers_ids.forEach(function (value) {\n    byDisplayType[value] = blockRenderers[value].view;\n  });\n  const Impl = byDisplayType[props.data.display || defaultRendererName];\n  if (!Impl) {\n    console.warn('Renderer not found', props.data);\n  }\n  return Impl ? __jsx(Impl, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  })) : null;\n};\nexport default ImageCardView;","map":{"version":3,"names":["React","config","ImageCardView","props","byDisplayType","blockConfig","blocks","blocksConfig","imagecards","blockRenderers","defaultRendererName","block_renderers_ids","Object","keys","forEach","value","view","Impl","data","display","console","warn"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/addons/volto-block-image-cards/src/ImageCards/ImageCardsView.jsx"],"sourcesContent":["import React from 'react';\nimport config from '@plone/volto/registry';\n\nconst ImageCardView = (props) => {\n  const byDisplayType = {};\n  const blockConfig = config.blocks.blocksConfig.imagecards;\n  const { blockRenderers, defaultRendererName } = blockConfig;\n\n  const block_renderers_ids = Object.keys(blockRenderers);\n  block_renderers_ids.forEach(function (value) {\n    byDisplayType[value] = blockRenderers[value].view;\n  });\n\n  const Impl = byDisplayType[props.data.display || defaultRendererName];\n\n  if (!Impl) {\n    console.warn('Renderer not found', props.data);\n  }\n  return Impl ? <Impl {...props} /> : null;\n};\n\nexport default ImageCardView;\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC/B,MAAMC,aAAa,GAAG,CAAC,CAAC;EACxB,MAAMC,WAAW,GAAGJ,MAAM,CAACK,MAAM,CAACC,YAAY,CAACC,UAAU;EACzD,MAAM;IAAEC,cAAc;IAAEC;EAAoB,CAAC,GAAGL,WAAW;EAE3D,MAAMM,mBAAmB,GAAGC,MAAM,CAACC,IAAI,CAACJ,cAAc,CAAC;EACvDE,mBAAmB,CAACG,OAAO,CAAC,UAAUC,KAAK,EAAE;IAC3CX,aAAa,CAACW,KAAK,CAAC,GAAGN,cAAc,CAACM,KAAK,CAAC,CAACC,IAAI;EACnD,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAGb,aAAa,CAACD,KAAK,CAACe,IAAI,CAACC,OAAO,IAAIT,mBAAmB,CAAC;EAErE,IAAI,CAACO,IAAI,EAAE;IACTG,OAAO,CAACC,IAAI,CAAC,oBAAoB,EAAElB,KAAK,CAACe,IAAI,CAAC;EAChD;EACA,OAAOD,IAAI,GAAG,MAAC,IAAI,eAAKd,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,GAAG,IAAI;AAC1C,CAAC;AAED,eAAeD,aAAa"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}