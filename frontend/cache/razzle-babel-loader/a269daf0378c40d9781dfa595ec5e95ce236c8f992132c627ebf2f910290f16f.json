{"ast":null,"code":"import _objectSpread from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/**\n * Controlpanels reducer.\n * @module reducers/controlpanels/controlpanels\n */\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport { GET_CONTROLPANEL, POST_CONTROLPANEL, DELETE_CONTROLPANEL, LIST_CONTROLPANELS, UPDATE_CONTROLPANEL, SYSTEM_INFORMATION, DATABASE_INFORMATION } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  get: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  list: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  update: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  post: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  delete: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  controlpanel: null,\n  controlpanels: [],\n  systeminformation: null,\n  databaseinformation: null\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Controlpanels reducer.\n * @function controlpanels\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function controlpanels() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  switch (action.type) {\n    case `${GET_CONTROLPANEL}_PENDING`:\n    case `${LIST_CONTROLPANELS}_PENDING`:\n    case `${SYSTEM_INFORMATION}_PENDING`:\n    case `${DATABASE_INFORMATION}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        controlpanel: null,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null\n        }\n      });\n    case `${POST_CONTROLPANEL}_PENDING`:\n    case `${UPDATE_CONTROLPANEL}_PENDING`:\n    case `${DELETE_CONTROLPANEL}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null\n        }\n      });\n    case `${GET_CONTROLPANEL}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        controlpanel: _objectSpread(_objectSpread({}, action.result), {}, {\n          '@id': flattenToAppURL(action.result['@id'])\n        }),\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n    case `${POST_CONTROLPANEL}_SUCCESS`:\n    case `${UPDATE_CONTROLPANEL}_SUCCESS`:\n    case `${DELETE_CONTROLPANEL}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n    case `${LIST_CONTROLPANELS}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        },\n        controlpanels: action.result\n      });\n    case `${SYSTEM_INFORMATION}_SUCCESS`:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          [getRequestKey(action.type)]: {\n            loading: false,\n            loaded: true,\n            error: null\n          },\n          systeminformation: action.result\n        });\n      }\n    case `${SYSTEM_INFORMATION}_FAIL`:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          [getRequestKey(action.type)]: {\n            loading: false,\n            loaded: true,\n            error: action.error\n          }\n        });\n      }\n    case `${DATABASE_INFORMATION}_SUCCESS`:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          [getRequestKey(action.type)]: {\n            loading: false,\n            loaded: true,\n            error: null\n          },\n          databaseinformation: action.result\n        });\n      }\n    case `${DATABASE_INFORMATION}_FAIL`:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          [getRequestKey(action.type)]: {\n            loading: false,\n            loaded: true,\n            error: action.error\n          }\n        });\n      }\n    case `${GET_CONTROLPANEL}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        controlpanel: null,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n    case `${LIST_CONTROLPANELS}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        controlpanels: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n    case `${POST_CONTROLPANEL}_FAIL`:\n    case `${UPDATE_CONTROLPANEL}_FAIL`:\n    case `${DELETE_CONTROLPANEL}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["flattenToAppURL","GET_CONTROLPANEL","POST_CONTROLPANEL","DELETE_CONTROLPANEL","LIST_CONTROLPANELS","UPDATE_CONTROLPANEL","SYSTEM_INFORMATION","DATABASE_INFORMATION","initialState","get","loaded","loading","error","list","update","post","delete","controlpanel","controlpanels","systeminformation","databaseinformation","getRequestKey","actionType","split","toLowerCase","state","action","type","result"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/reducers/controlpanels/controlpanels.js"],"sourcesContent":["/**\n * Controlpanels reducer.\n * @module reducers/controlpanels/controlpanels\n */\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport {\n  GET_CONTROLPANEL,\n  POST_CONTROLPANEL,\n  DELETE_CONTROLPANEL,\n  LIST_CONTROLPANELS,\n  UPDATE_CONTROLPANEL,\n  SYSTEM_INFORMATION,\n  DATABASE_INFORMATION,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  get: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  list: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  update: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  post: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  delete: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  controlpanel: null,\n  controlpanels: [],\n  systeminformation: null,\n  databaseinformation: null,\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Controlpanels reducer.\n * @function controlpanels\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function controlpanels(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_CONTROLPANEL}_PENDING`:\n    case `${LIST_CONTROLPANELS}_PENDING`:\n    case `${SYSTEM_INFORMATION}_PENDING`:\n    case `${DATABASE_INFORMATION}_PENDING`:\n      return {\n        ...state,\n        controlpanel: null,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${POST_CONTROLPANEL}_PENDING`:\n    case `${UPDATE_CONTROLPANEL}_PENDING`:\n    case `${DELETE_CONTROLPANEL}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${GET_CONTROLPANEL}_SUCCESS`:\n      return {\n        ...state,\n        controlpanel: {\n          ...action.result,\n          '@id': flattenToAppURL(action.result['@id']),\n        },\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${POST_CONTROLPANEL}_SUCCESS`:\n    case `${UPDATE_CONTROLPANEL}_SUCCESS`:\n    case `${DELETE_CONTROLPANEL}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${LIST_CONTROLPANELS}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n        controlpanels: action.result,\n      };\n    case `${SYSTEM_INFORMATION}_SUCCESS`: {\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n        systeminformation: action.result,\n      };\n    }\n    case `${SYSTEM_INFORMATION}_FAIL`: {\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: action.error,\n        },\n      };\n    }\n    case `${DATABASE_INFORMATION}_SUCCESS`: {\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n        databaseinformation: action.result,\n      };\n    }\n    case `${DATABASE_INFORMATION}_FAIL`: {\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: action.error,\n        },\n      };\n    }\n    case `${GET_CONTROLPANEL}_FAIL`:\n      return {\n        ...state,\n        controlpanel: null,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${LIST_CONTROLPANELS}_FAIL`:\n      return {\n        ...state,\n        controlpanels: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${POST_CONTROLPANEL}_FAIL`:\n    case `${UPDATE_CONTROLPANEL}_FAIL`:\n    case `${DELETE_CONTROLPANEL}_FAIL`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}