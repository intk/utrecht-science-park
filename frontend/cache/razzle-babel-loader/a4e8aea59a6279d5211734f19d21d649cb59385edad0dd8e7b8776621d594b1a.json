{"ast":null,"code":"import config from '@plone/volto/registry';\nimport { defineMessages } from 'react-intl';\nconst messages = defineMessages({\n  // icon: {\n  //   id: 'icon',\n  //   defaultMessage: 'Icon',\n  // },\n  title: {\n    \"id\": \"title\",\n    \"defaultMessage\": \"Title\"\n  },\n  LinkTo: {\n    \"id\": \"LinkTo\",\n    \"defaultMessage\": \"Action link\"\n  },\n  Actions: {\n    \"id\": \"Actions\",\n    \"defaultMessage\": \"Actions\"\n  },\n  Action: {\n    \"id\": \"Action\",\n    \"defaultMessage\": \"Action\"\n  }\n});\nconst ActionSchema = _ref => {\n  let {\n    onChangeBlock,\n    intl,\n    data,\n    openObjectBrowser\n  } = _ref;\n  return {\n    title: intl.formatMessage(messages.Action),\n    fieldsets: [{\n      id: 'default',\n      fields: ['title', 'href'],\n      //  'url'\n      title: 'Default'\n    }],\n    properties: {\n      title: {\n        title: intl.formatMessage(messages.title)\n      },\n      href: {\n        title: 'Link',\n        description: 'Internal page or path',\n        widget: 'url'\n      }\n    },\n    required: []\n  };\n};\n_c = ActionSchema;\nconst schema = _ref2 => {\n  let {\n    onChangeBlock,\n    intl,\n    data,\n    openObjectBrowser\n  } = _ref2;\n  return {\n    fieldsets: [{\n      id: 'default',\n      fields: ['globalId', 'actions'],\n      // 'title', 'linkTitle', 'linkHref', 'cards'\n      title: 'Default'\n    }],\n    properties: {\n      globalId: {\n        title: 'Global ID',\n        description: 'The global block is uniquely identifies this actions block and allows its use in the website.',\n        // TODO: filter the available ids based on existing blocks in data\n        choices: config.settings.actionBlockIds || []\n      },\n      actions: {\n        title: intl.formatMessage(messages.Actions),\n        widget: 'object_list',\n        schema: ActionSchema({\n          onChangeBlock,\n          intl,\n          data,\n          openObjectBrowser\n        })\n      }\n    },\n    required: []\n  };\n};\nexport default schema;\nvar _c;\n$RefreshReg$(_c, \"ActionSchema\");","map":{"version":3,"names":["config","defineMessages","messages","title","LinkTo","Actions","Action","ActionSchema","onChangeBlock","intl","data","openObjectBrowser","formatMessage","fieldsets","id","fields","properties","href","description","widget","required","schema","globalId","choices","settings","actionBlockIds","actions"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/components/blocks/ActionLinks/schema.js"],"sourcesContent":["import config from '@plone/volto/registry';\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  // icon: {\n  //   id: 'icon',\n  //   defaultMessage: 'Icon',\n  // },\n  title: {\n    id: 'title',\n    defaultMessage: 'Title',\n  },\n  LinkTo: {\n    id: 'LinkTo',\n    defaultMessage: 'Action link',\n  },\n  Actions: {\n    id: 'Actions',\n    defaultMessage: 'Actions',\n  },\n  Action: {\n    id: 'Action',\n    defaultMessage: 'Action',\n  },\n});\n\nconst ActionSchema = ({ onChangeBlock, intl, data, openObjectBrowser }) => ({\n  title: intl.formatMessage(messages.Action),\n  fieldsets: [\n    {\n      id: 'default',\n      fields: ['title', 'href'], //  'url'\n      title: 'Default',\n    },\n  ],\n\n  properties: {\n    title: {\n      title: intl.formatMessage(messages.title),\n    },\n    href: {\n      title: 'Link',\n      description: 'Internal page or path',\n      widget: 'url',\n    },\n  },\n  required: [],\n});\n\nconst schema = ({ onChangeBlock, intl, data, openObjectBrowser }) => ({\n  fieldsets: [\n    {\n      id: 'default',\n      fields: ['globalId', 'actions'], // 'title', 'linkTitle', 'linkHref', 'cards'\n      title: 'Default',\n    },\n  ],\n\n  properties: {\n    globalId: {\n      title: 'Global ID',\n      description:\n        'The global block is uniquely identifies this actions block and allows its use in the website.',\n      // TODO: filter the available ids based on existing blocks in data\n      choices: config.settings.actionBlockIds || [],\n    },\n    actions: {\n      title: intl.formatMessage(messages.Actions),\n      widget: 'object_list',\n      schema: ActionSchema({ onChangeBlock, intl, data, openObjectBrowser }),\n    },\n  },\n  required: [],\n});\n\nexport default schema;\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,uBAAuB;AAC1C,SAASC,cAAc,QAAQ,YAAY;AAE3C,MAAMC,QAAQ,GAAGD,cAAc,CAAC;EAC9B;EACA;EACA;EACA;EACAE,KAAK;IAAA;IAAA;EAAA,CAGJ;EACDC,MAAM;IAAA;IAAA;EAAA,CAGL;EACDC,OAAO;IAAA;IAAA;EAAA,CAGN;EACDC,MAAM;IAAA;IAAA;EAAA;AAIR,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAG;EAAA,IAAC;IAAEC,aAAa;IAAEC,IAAI;IAAEC,IAAI;IAAEC;EAAkB,CAAC;EAAA,OAAM;IAC1ER,KAAK,EAAEM,IAAI,CAACG,aAAa,CAACV,QAAQ,CAACI,MAAM,CAAC;IAC1CO,SAAS,EAAE,CACT;MACEC,EAAE,EAAE,SAAS;MACbC,MAAM,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC;MAAE;MAC3BZ,KAAK,EAAE;IACT,CAAC,CACF;IAEDa,UAAU,EAAE;MACVb,KAAK,EAAE;QACLA,KAAK,EAAEM,IAAI,CAACG,aAAa,CAACV,QAAQ,CAACC,KAAK;MAC1C,CAAC;MACDc,IAAI,EAAE;QACJd,KAAK,EAAE,MAAM;QACbe,WAAW,EAAE,uBAAuB;QACpCC,MAAM,EAAE;MACV;IACF,CAAC;IACDC,QAAQ,EAAE;EACZ,CAAC;AAAA,CAAC;AAAC,KArBGb,YAAY;AAuBlB,MAAMc,MAAM,GAAG;EAAA,IAAC;IAAEb,aAAa;IAAEC,IAAI;IAAEC,IAAI;IAAEC;EAAkB,CAAC;EAAA,OAAM;IACpEE,SAAS,EAAE,CACT;MACEC,EAAE,EAAE,SAAS;MACbC,MAAM,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC;MAAE;MACjCZ,KAAK,EAAE;IACT,CAAC,CACF;IAEDa,UAAU,EAAE;MACVM,QAAQ,EAAE;QACRnB,KAAK,EAAE,WAAW;QAClBe,WAAW,EACT,+FAA+F;QACjG;QACAK,OAAO,EAAEvB,MAAM,CAACwB,QAAQ,CAACC,cAAc,IAAI;MAC7C,CAAC;MACDC,OAAO,EAAE;QACPvB,KAAK,EAAEM,IAAI,CAACG,aAAa,CAACV,QAAQ,CAACG,OAAO,CAAC;QAC3Cc,MAAM,EAAE,aAAa;QACrBE,MAAM,EAAEd,YAAY,CAAC;UAAEC,aAAa;UAAEC,IAAI;UAAEC,IAAI;UAAEC;QAAkB,CAAC;MACvE;IACF,CAAC;IACDS,QAAQ,EAAE;EACZ,CAAC;AAAA,CAAC;AAEF,eAAeC,MAAM;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[{"id":"title","defaultMessage":"Title"},{"id":"LinkTo","defaultMessage":"Action link"},{"id":"Actions","defaultMessage":"Actions"},{"id":"Action","defaultMessage":"Action"}]}},"sourceType":"module","externalDependencies":[]}