{"ast":null,"code":"import _isMatch from \"lodash/isMatch\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/components/theme/Navigation/Navigation.jsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nimport { getNavigation } from '@plone/volto/actions';\nimport TopLevelItems from './TopLevelItems';\nimport MobileNavItems from './MobileNavItems';\nconst messages = defineMessages({\n  closeMobileMenu: {\n    \"id\": \"Close menu\",\n    \"defaultMessage\": \"Close menu\"\n  },\n  openMobileMenu: {\n    \"id\": \"Open menu\",\n    \"defaultMessage\": \"Open menu\"\n  }\n});\nfunction isActive(url, pathname) {\n  return url === '' && pathname === '/' || url !== '' && _isMatch(pathname.split('/'), url.split('/'));\n}\nfunction LocalDimmer(_ref) {\n  let {\n    active\n  } = _ref;\n  return active ? __jsx(\"div\", {\n    className: \"ui dimmer\",\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }) : null;\n}\n_c = LocalDimmer;\nfunction Navigation(_ref2) {\n  _s();\n  let {\n    pathname,\n    intl,\n    items,\n    token,\n    lang,\n    getNavigation\n  } = _ref2;\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = React.useState();\n  React.useEffect(() => {\n    const {\n      settings\n    } = config;\n    getNavigation(getBaseUrl(pathname), settings.navDepth);\n  }, [pathname, token, lang, getNavigation]);\n  return __jsx(\"nav\", {\n    className: \"navigation\",\n    id: \"navigation\",\n    \"aria-label\": \"navigation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(LocalDimmer, {\n    active: isMobileMenuOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"hamburger-wrapper mobile tablet only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    className: cx('hamburger hamburger--spin', {\n      'is-active': isMobileMenuOpen\n    }),\n    \"aria-label\": isMobileMenuOpen ? intl.formatMessage(messages.closeMobileMenu) : intl.formatMessage(messages.openMobileMenu),\n    title: isMobileMenuOpen ? intl.formatMessage(messages.closeMobileMenu) : intl.formatMessage(messages.openMobileMenu),\n    type: \"button\",\n    onClick: () => setIsMobileMenuOpen(!isMobileMenuOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"hamburger-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"hamburger-inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })))), __jsx(TopLevelItems, {\n    items: items,\n    lang: lang,\n    closeMobileMenu: () => setIsMobileMenuOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), __jsx(MobileNavItems, {\n    lang: lang,\n    items: items,\n    open: isMobileMenuOpen,\n    closeMobileMenu: () => setIsMobileMenuOpen(false),\n    isActive: isActive,\n    pathname: pathname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }));\n}\n_s(Navigation, \"e3HlWg1BntWMpIVBqT8R53rp7hU=\");\n_c2 = Navigation;\nexport default compose(injectIntl, connect(state => ({\n  token: state.userSession.token,\n  items: state.navigation.items,\n  lang: state.intl.locale\n}), {\n  getNavigation\n}))(Navigation);\nvar _c, _c2;\n$RefreshReg$(_c, \"LocalDimmer\");\n$RefreshReg$(_c2, \"Navigation\");","map":{"version":3,"names":["React","connect","compose","defineMessages","injectIntl","cx","getBaseUrl","config","getNavigation","TopLevelItems","MobileNavItems","messages","closeMobileMenu","openMobileMenu","isActive","url","pathname","split","LocalDimmer","active","display","Navigation","intl","items","token","lang","isMobileMenuOpen","setIsMobileMenuOpen","useState","useEffect","settings","navDepth","formatMessage","state","userSession","navigation","locale"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/components/theme/Navigation/Navigation.jsx"],"sourcesContent":["/**\n * Navigation components.\n * @module components/theme/Navigation/Navigation\n */\n\nimport { isMatch } from 'lodash';\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nimport { getNavigation } from '@plone/volto/actions';\n\nimport TopLevelItems from './TopLevelItems';\nimport MobileNavItems from './MobileNavItems';\n\nconst messages = defineMessages({\n  closeMobileMenu: {\n    id: 'Close menu',\n    defaultMessage: 'Close menu',\n  },\n  openMobileMenu: {\n    id: 'Open menu',\n    defaultMessage: 'Open menu',\n  },\n});\n\nfunction isActive(url, pathname) {\n  return (\n    (url === '' && pathname === '/') ||\n    (url !== '' && isMatch(pathname.split('/'), url.split('/')))\n  );\n}\n\nfunction LocalDimmer({ active }) {\n  return active ? (\n    <div className=\"ui dimmer\" style={{ display: 'block' }}></div>\n  ) : null;\n}\n\nfunction Navigation({ pathname, intl, items, token, lang, getNavigation }) {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = React.useState();\n\n  React.useEffect(() => {\n    const { settings } = config;\n    getNavigation(getBaseUrl(pathname), settings.navDepth);\n  }, [pathname, token, lang, getNavigation]);\n\n  return (\n    <nav className=\"navigation\" id=\"navigation\" aria-label=\"navigation\">\n      <LocalDimmer active={isMobileMenuOpen} />\n      <div className=\"hamburger-wrapper mobile tablet only\">\n        <button\n          className={cx('hamburger hamburger--spin', {\n            'is-active': isMobileMenuOpen,\n          })}\n          aria-label={\n            isMobileMenuOpen\n              ? intl.formatMessage(messages.closeMobileMenu)\n              : intl.formatMessage(messages.openMobileMenu)\n          }\n          title={\n            isMobileMenuOpen\n              ? intl.formatMessage(messages.closeMobileMenu)\n              : intl.formatMessage(messages.openMobileMenu)\n          }\n          type=\"button\"\n          onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n        >\n          <span className=\"hamburger-box\">\n            <span className=\"hamburger-inner\" />\n          </span>\n        </button>\n      </div>\n      <TopLevelItems\n        items={items}\n        lang={lang}\n        closeMobileMenu={() => setIsMobileMenuOpen(false)}\n      />\n\n      <MobileNavItems\n        lang={lang}\n        items={items}\n        open={isMobileMenuOpen}\n        closeMobileMenu={() => setIsMobileMenuOpen(false)}\n        isActive={isActive}\n        pathname={pathname}\n      />\n    </nav>\n  );\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      token: state.userSession.token,\n      items: state.navigation.items,\n      lang: state.intl.locale,\n    }),\n    { getNavigation },\n  ),\n)(Navigation);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Close menu","defaultMessage":"Close menu"},{"id":"Open menu","defaultMessage":"Open menu"}]}},"sourceType":"module","externalDependencies":[]}