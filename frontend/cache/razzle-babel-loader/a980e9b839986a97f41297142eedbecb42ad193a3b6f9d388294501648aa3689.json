{"ast":null,"code":"var _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/customizations/components/manage/Widgets/ObjectListWidget.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Accordion, Button, Segment } from 'semantic-ui-react';\nimport { DragDropList, FormFieldWrapper, Icon } from '@plone/volto/components';\nimport { applySchemaDefaults } from '@plone/volto/helpers';\nimport { reorderArray } from '@plone/volto/helpers/Utils/Utils';\nimport ObjectWidget from '@plone/volto/components/manage/Widgets/ObjectWidget';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport addSVG from '@plone/volto/icons/add.svg';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport { v4 as uuid } from 'uuid';\nconst messages = defineMessages({\n  labelRemoveItem: {\n    \"id\": \"Remove item\",\n    \"defaultMessage\": \"Remove item\"\n  },\n  labelCollapseItem: {\n    \"id\": \"Collapse item\",\n    \"defaultMessage\": \"Collapse item\"\n  },\n  labelShowItem: {\n    \"id\": \"Show item\",\n    \"defaultMessage\": \"Show item\"\n  },\n  emptyObjectList: {\n    \"id\": \"Empty object list\",\n    \"defaultMessage\": \"Empty object list\"\n  },\n  add: {\n    \"id\": \"Add (object list)\",\n    \"defaultMessage\": \"Add\"\n  }\n});\n\n/**\n * This is a DataGridField-equivalent widget for schema-based values.\n * The shape of the items in the array is defined using a schema.\n *\n * ObjectListWidget can receive an optional `schemaExtender` prop which is\n * a function that can mutate the schema for each individual item in the array.\n * An example schema definition of the a field that renders with the\n * ObjectListWidget:\n *\n * ```jsx\n *  columns: {\n *    title: 'Columns',\n *    description: 'Leave empty to show all columns',\n *    schema: SomeItemSchema,\n *    widget: 'object_list',\n *    schemaExtender: (schema, data) => {\n *      const mutated = lodash.cloneDeep(schema);\n *      mutated.properties.extraField = {\n *        title: 'Extra field',\n *      }\n *      mutated.fieldsets[0].fields.push('extraField');\n *      return mutated;\n *    },\n *    activeObject: 0, // Current active object drilled down from the schema (if present)\n *    setActiveObject: () => {} // The current active object state updater function drilled down from the schema (if present)\n *  },\n * ```\n */\nconst ObjectListWidget = props => {\n  var _props$activeObject;\n  const {\n    block,\n    fieldSet,\n    id,\n    schema,\n    value = [],\n    onChange,\n    schemaExtender\n  } = props;\n  const [localActiveObject, setLocalActiveObject] = React.useState((_props$activeObject = props.activeObject) !== null && _props$activeObject !== void 0 ? _props$activeObject : value.length - 1);\n  let activeObject, setActiveObject;\n  if ((props.activeObject || props.activeObject === 0) && props.setActiveObject) {\n    activeObject = props.activeObject;\n    setActiveObject = props.setActiveObject;\n  } else {\n    activeObject = localActiveObject;\n    setActiveObject = setLocalActiveObject;\n  }\n  const intl = useIntl();\n  function handleChangeActiveObject(e, blockProps) {\n    const {\n      index\n    } = blockProps;\n    const newIndex = activeObject === index ? -1 : index;\n    setActiveObject(newIndex);\n  }\n  const objectSchema = typeof schema === 'function' ? schema(props) : schema;\n  const topLayerShadow = '0 1px 1px rgba(0,0,0,0.15)';\n  const secondLayer = ', 0 10px 0 -5px #eee, 0 10px 1px -4px rgba(0,0,0,0.15)';\n  const thirdLayer = ', 0 20px 0 -10px #eee, 0 20px 1px -9px rgba(0,0,0,0.15)';\n  return __jsx(\"div\", {\n    className: \"objectlist-widget\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, __jsx(FormFieldWrapper, _extends({}, props, {\n    noForInFieldLabel: true,\n    className: \"objectlist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"add-item-button-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    compact: true,\n    icon: true,\n    \"aria-label\": objectSchema.addMessage || `${intl.formatMessage(messages.add)} ${objectSchema.title}`,\n    onClick: e => {\n      e.preventDefault();\n      const data = {\n        '@id': uuid()\n      };\n      const objSchema = schemaExtender ? schemaExtender(schema, data, intl) : objectSchema;\n      const dataWithDefaults = applySchemaDefaults({\n        data,\n        schema: objSchema,\n        intl\n      });\n      onChange(id, [...value, dataWithDefaults]);\n      setActiveObject(value.length);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: addSVG,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }), \"\\xA0\", objectSchema.addMessage || `${intl.formatMessage(messages.add)} ${objectSchema.title}`)), value.length === 0 && __jsx(\"input\", {\n    \"aria-labelledby\": `fieldset-${fieldSet || 'default'}-field-label-${id}`,\n    type: \"hidden\",\n    value: intl.formatMessage(messages.emptyObjectList),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  })), __jsx(DragDropList, {\n    style: {\n      boxShadow: `${topLayerShadow}${value.length > 1 ? secondLayer : ''}${value.length > 2 ? thirdLayer : ''}`\n    },\n    forwardedAriaLabelledBy: `fieldset-${fieldSet || 'default'}-field-label-${id}`,\n    childList: value.map(o => [o['@id'], o]),\n    onMoveItem: result => {\n      const {\n        source,\n        destination\n      } = result;\n      if (!destination) {\n        return;\n      }\n      const newValue = reorderArray(value, source.index, destination.index);\n      onChange(id, newValue);\n      return true;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, ({\n    child,\n    childId,\n    index,\n    draginfo\n  }) => {\n    return __jsx(\"div\", _extends({\n      ref: draginfo.innerRef\n    }, draginfo.draggableProps, {\n      key: childId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }), __jsx(Accordion, {\n      key: index,\n      fluid: true,\n      styled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, __jsx(Accordion.Title, {\n      active: activeObject === index,\n      index: index,\n      onClick: handleChangeActiveObject,\n      \"aria-label\": `${activeObject === index ? intl.formatMessage(messages.labelCollapseItem) : intl.formatMessage(messages.labelShowItem)} #${index + 1}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, __jsx(\"button\", _extends({\n      style: {\n        visibility: 'visible',\n        display: 'inline-block'\n      }\n    }, draginfo.dragHandleProps, {\n      className: \"drag handle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }\n    }), __jsx(Icon, {\n      name: dragSVG,\n      size: \"18px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"accordion-title-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 19\n      }\n    }, `${objectSchema.title} #${index + 1}`), __jsx(\"div\", {\n      className: \"accordion-tools\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 19\n      }\n    }, __jsx(\"button\", {\n      \"aria-label\": `${intl.formatMessage(messages.labelRemoveItem)} #${index + 1}`,\n      onClick: () => {\n        onChange(id, value.filter((v, i) => i !== index));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }, __jsx(Icon, {\n      name: deleteSVG,\n      size: \"20px\",\n      color: \"#e40166\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 23\n      }\n    })), activeObject === index ? __jsx(Icon, {\n      name: upSVG,\n      size: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 23\n      }\n    }) : __jsx(Icon, {\n      name: downSVG,\n      size: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 23\n      }\n    }))), __jsx(Accordion.Content, {\n      active: activeObject === index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 19\n      }\n    }, __jsx(ObjectWidget, {\n      id: `${id}-${index}`,\n      key: `ow-${id}-${index}`,\n      block: block,\n      schema: schemaExtender ? schemaExtender(schema, child, intl) : objectSchema,\n      value: child,\n      onChange: (fi, fv) => {\n        const newvalue = value.map((v, i) => i !== index ? v : fv);\n        onChange(id, newvalue);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    })))));\n  }));\n};\nexport default ObjectListWidget;","map":{"version":3,"names":["React","defineMessages","useIntl","Accordion","Button","Segment","DragDropList","FormFieldWrapper","Icon","applySchemaDefaults","reorderArray","ObjectWidget","upSVG","downSVG","deleteSVG","addSVG","dragSVG","v4","uuid","messages","labelRemoveItem","labelCollapseItem","labelShowItem","emptyObjectList","add","ObjectListWidget","props","block","fieldSet","id","schema","value","onChange","schemaExtender","localActiveObject","setLocalActiveObject","useState","activeObject","length","setActiveObject","intl","handleChangeActiveObject","e","blockProps","index","newIndex","objectSchema","topLayerShadow","secondLayer","thirdLayer","addMessage","formatMessage","title","preventDefault","data","objSchema","dataWithDefaults","boxShadow","map","o","result","source","destination","newValue","child","childId","draginfo","innerRef","draggableProps","visibility","display","dragHandleProps","filter","v","i","fi","fv","newvalue"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/customizations/components/manage/Widgets/ObjectListWidget.jsx"],"sourcesContent":["import React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Accordion, Button, Segment } from 'semantic-ui-react';\nimport { DragDropList, FormFieldWrapper, Icon } from '@plone/volto/components';\nimport { applySchemaDefaults } from '@plone/volto/helpers';\nimport { reorderArray } from '@plone/volto/helpers/Utils/Utils';\nimport ObjectWidget from '@plone/volto/components/manage/Widgets/ObjectWidget';\n\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport addSVG from '@plone/volto/icons/add.svg';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport { v4 as uuid } from 'uuid';\n\nconst messages = defineMessages({\n  labelRemoveItem: {\n    id: 'Remove item',\n    defaultMessage: 'Remove item',\n  },\n  labelCollapseItem: {\n    id: 'Collapse item',\n    defaultMessage: 'Collapse item',\n  },\n  labelShowItem: {\n    id: 'Show item',\n    defaultMessage: 'Show item',\n  },\n  emptyObjectList: {\n    id: 'Empty object list',\n    defaultMessage: 'Empty object list',\n  },\n  add: {\n    id: 'Add (object list)',\n    defaultMessage: 'Add',\n  },\n});\n\n/**\n * This is a DataGridField-equivalent widget for schema-based values.\n * The shape of the items in the array is defined using a schema.\n *\n * ObjectListWidget can receive an optional `schemaExtender` prop which is\n * a function that can mutate the schema for each individual item in the array.\n * An example schema definition of the a field that renders with the\n * ObjectListWidget:\n *\n * ```jsx\n *  columns: {\n *    title: 'Columns',\n *    description: 'Leave empty to show all columns',\n *    schema: SomeItemSchema,\n *    widget: 'object_list',\n *    schemaExtender: (schema, data) => {\n *      const mutated = lodash.cloneDeep(schema);\n *      mutated.properties.extraField = {\n *        title: 'Extra field',\n *      }\n *      mutated.fieldsets[0].fields.push('extraField');\n *      return mutated;\n *    },\n *    activeObject: 0, // Current active object drilled down from the schema (if present)\n *    setActiveObject: () => {} // The current active object state updater function drilled down from the schema (if present)\n *  },\n * ```\n */\nconst ObjectListWidget = (props) => {\n  const {\n    block,\n    fieldSet,\n    id,\n    schema,\n    value = [],\n    onChange,\n    schemaExtender,\n  } = props;\n  const [localActiveObject, setLocalActiveObject] = React.useState(\n    props.activeObject ?? value.length - 1,\n  );\n\n  let activeObject, setActiveObject;\n  if (\n    (props.activeObject || props.activeObject === 0) &&\n    props.setActiveObject\n  ) {\n    activeObject = props.activeObject;\n    setActiveObject = props.setActiveObject;\n  } else {\n    activeObject = localActiveObject;\n    setActiveObject = setLocalActiveObject;\n  }\n\n  const intl = useIntl();\n\n  function handleChangeActiveObject(e, blockProps) {\n    const { index } = blockProps;\n    const newIndex = activeObject === index ? -1 : index;\n\n    setActiveObject(newIndex);\n  }\n  const objectSchema = typeof schema === 'function' ? schema(props) : schema;\n\n  const topLayerShadow = '0 1px 1px rgba(0,0,0,0.15)';\n  const secondLayer = ', 0 10px 0 -5px #eee, 0 10px 1px -4px rgba(0,0,0,0.15)';\n  const thirdLayer = ', 0 20px 0 -10px #eee, 0 20px 1px -9px rgba(0,0,0,0.15)';\n\n  return (\n    <div className=\"objectlist-widget\">\n      <FormFieldWrapper {...props} noForInFieldLabel className=\"objectlist\">\n        <div className=\"add-item-button-wrapper\">\n          <Button\n            compact\n            icon\n            aria-label={\n              objectSchema.addMessage ||\n              `${intl.formatMessage(messages.add)} ${objectSchema.title}`\n            }\n            onClick={(e) => {\n              e.preventDefault();\n              const data = {\n                '@id': uuid(),\n              };\n              const objSchema = schemaExtender\n                ? schemaExtender(schema, data, intl)\n                : objectSchema;\n              const dataWithDefaults = applySchemaDefaults({\n                data,\n                schema: objSchema,\n                intl,\n              });\n\n              onChange(id, [...value, dataWithDefaults]);\n              setActiveObject(value.length);\n            }}\n          >\n            <Icon name={addSVG} size=\"18px\" />\n            &nbsp;\n            {/* Custom addMessage in schema, else default to English */}\n            {objectSchema.addMessage ||\n              `${intl.formatMessage(messages.add)} ${objectSchema.title}`}\n          </Button>\n        </div>\n        {value.length === 0 && (\n          <input\n            aria-labelledby={`fieldset-${\n              fieldSet || 'default'\n            }-field-label-${id}`}\n            type=\"hidden\"\n            value={intl.formatMessage(messages.emptyObjectList)}\n          />\n        )}\n      </FormFieldWrapper>\n      <DragDropList\n        style={{\n          boxShadow: `${topLayerShadow}${value.length > 1 ? secondLayer : ''}${\n            value.length > 2 ? thirdLayer : ''\n          }`,\n        }}\n        forwardedAriaLabelledBy={`fieldset-${\n          fieldSet || 'default'\n        }-field-label-${id}`}\n        childList={value.map((o) => [o['@id'], o])}\n        onMoveItem={(result) => {\n          const { source, destination } = result;\n          if (!destination) {\n            return;\n          }\n          const newValue = reorderArray(value, source.index, destination.index);\n          onChange(id, newValue);\n          return true;\n        }}\n      >\n        {({ child, childId, index, draginfo }) => {\n          return (\n            <div\n              ref={draginfo.innerRef}\n              {...draginfo.draggableProps}\n              key={childId}\n            >\n              <Accordion key={index} fluid styled>\n                <Accordion.Title\n                  active={activeObject === index}\n                  index={index}\n                  onClick={handleChangeActiveObject}\n                  aria-label={`${\n                    activeObject === index\n                      ? intl.formatMessage(messages.labelCollapseItem)\n                      : intl.formatMessage(messages.labelShowItem)\n                  } #${index + 1}`}\n                >\n                  <button\n                    style={{\n                      visibility: 'visible',\n                      display: 'inline-block',\n                    }}\n                    {...draginfo.dragHandleProps}\n                    className=\"drag handle\"\n                  >\n                    <Icon name={dragSVG} size=\"18px\" />\n                  </button>\n\n                  <div className=\"accordion-title-wrapper\">\n                    {`${objectSchema.title} #${index + 1}`}\n                  </div>\n                  <div className=\"accordion-tools\">\n                    <button\n                      aria-label={`${intl.formatMessage(\n                        messages.labelRemoveItem,\n                      )} #${index + 1}`}\n                      onClick={() => {\n                        onChange(\n                          id,\n                          value.filter((v, i) => i !== index),\n                        );\n                      }}\n                    >\n                      <Icon name={deleteSVG} size=\"20px\" color=\"#e40166\" />\n                    </button>\n                    {activeObject === index ? (\n                      <Icon name={upSVG} size=\"20px\" />\n                    ) : (\n                      <Icon name={downSVG} size=\"20px\" />\n                    )}\n                  </div>\n                </Accordion.Title>\n                <Accordion.Content active={activeObject === index}>\n                  <Segment>\n                    <ObjectWidget\n                      id={`${id}-${index}`}\n                      key={`ow-${id}-${index}`}\n                      block={block}\n                      schema={\n                        schemaExtender\n                          ? schemaExtender(schema, child, intl)\n                          : objectSchema\n                      }\n                      value={child}\n                      onChange={(fi, fv) => {\n                        const newvalue = value.map((v, i) =>\n                          i !== index ? v : fv,\n                        );\n                        onChange(id, newvalue);\n                      }}\n                    />\n                  </Segment>\n                </Accordion.Content>\n              </Accordion>\n            </div>\n          );\n        }}\n      </DragDropList>\n    </div>\n  );\n};\nexport default ObjectListWidget;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Remove item","defaultMessage":"Remove item"},{"id":"Collapse item","defaultMessage":"Collapse item"},{"id":"Show item","defaultMessage":"Show item"},{"id":"Empty object list","defaultMessage":"Empty object list"},{"id":"Add (object list)","defaultMessage":"Add"}]}},"sourceType":"module","externalDependencies":[]}