{"ast":null,"code":"import { isInternalURL } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nexport function getTeaserImageURL({\n  href,\n  image,\n  align\n}) {\n  // The default scale used in teasers is the 'teaser' scale\n  // except if it's customized otherwise in the teaser block settings\n  // or if the teaser is center (top)\n  const imageScale = align === 'center' ? 'great' : config.blocks.blocksConfig['teaser'].imageScale || 'teaser';\n  if (image) {\n    // If the image is overriden locally in the teaser block\n    if (isInternalURL(image['@id'])) {\n      var _image$image_scales;\n      // If it's internal check if image_scales catalog info is present\n      if (image !== null && image !== void 0 && (_image$image_scales = image.image_scales) !== null && _image$image_scales !== void 0 && _image$image_scales[image === null || image === void 0 ? void 0 : image.image_field]) {\n        var _image$image_scales$i, _image$image_scales$i2, _image$image_scales$i3;\n        return `${image['@id']}/${((_image$image_scales$i = image.image_scales[image.image_field]) === null || _image$image_scales$i === void 0 ? void 0 : (_image$image_scales$i2 = _image$image_scales$i[0].scales[imageScale]) === null || _image$image_scales$i2 === void 0 ? void 0 : _image$image_scales$i2.download) || ((_image$image_scales$i3 = image.image_scales[image.image_field]) === null || _image$image_scales$i3 === void 0 ? void 0 : _image$image_scales$i3[0].download)}`;\n      } else {\n        // If not, fallback to content scale URL shortcut\n        return `${image['@id']}/@@images/${image.image_field}/${imageScale}`;\n      }\n    } else {\n      // If it's external, return the plain URL\n      return image['@id'];\n    }\n  } else {\n    var _href$image_scales;\n    // If the image is not overriden\n    if (href !== null && href !== void 0 && (_href$image_scales = href.image_scales) !== null && _href$image_scales !== void 0 && _href$image_scales[href === null || href === void 0 ? void 0 : href.image_field]) {\n      var _href$image_scales$hr, _href$image_scales$hr2, _href$image_scales$hr3;\n      return `${href['@id']}/${((_href$image_scales$hr = href.image_scales[href.image_field]) === null || _href$image_scales$hr === void 0 ? void 0 : (_href$image_scales$hr2 = _href$image_scales$hr[0].scales[imageScale]) === null || _href$image_scales$hr2 === void 0 ? void 0 : _href$image_scales$hr2.download) || ((_href$image_scales$hr3 = href.image_scales[href.image_field]) === null || _href$image_scales$hr3 === void 0 ? void 0 : _href$image_scales$hr3[0].download)}`;\n    } else {\n      // If not, fallback to content scale URL shortcut\n      return `${href['@id']}/@@images/${href.image_field || 'preview_image'}/${imageScale}`;\n    }\n  }\n}","map":{"version":3,"names":["isInternalURL","config","getTeaserImageURL","href","image","align","imageScale","blocks","blocksConfig","image_scales","image_field","scales","download"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Blocks/Teaser/utils.js"],"sourcesContent":["import { isInternalURL } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nexport function getTeaserImageURL({ href, image, align }) {\n  // The default scale used in teasers is the 'teaser' scale\n  // except if it's customized otherwise in the teaser block settings\n  // or if the teaser is center (top)\n  const imageScale =\n    align === 'center'\n      ? 'great'\n      : config.blocks.blocksConfig['teaser'].imageScale || 'teaser';\n\n  if (image) {\n    // If the image is overriden locally in the teaser block\n    if (isInternalURL(image['@id'])) {\n      // If it's internal check if image_scales catalog info is present\n      if (image?.image_scales?.[image?.image_field]) {\n        return `${image['@id']}/${\n          image.image_scales[image.image_field]?.[0].scales[imageScale]\n            ?.download || image.image_scales[image.image_field]?.[0].download\n        }`;\n      } else {\n        // If not, fallback to content scale URL shortcut\n        return `${image['@id']}/@@images/${image.image_field}/${imageScale}`;\n      }\n    } else {\n      // If it's external, return the plain URL\n      return image['@id'];\n    }\n  } else {\n    // If the image is not overriden\n    if (href?.image_scales?.[href?.image_field]) {\n      return `${href['@id']}/${\n        href.image_scales[href.image_field]?.[0].scales[imageScale]?.download ||\n        href.image_scales[href.image_field]?.[0].download\n      }`;\n    } else {\n      // If not, fallback to content scale URL shortcut\n      return `${href['@id']}/@@images/${\n        href.image_field || 'preview_image'\n      }/${imageScale}`;\n    }\n  }\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,sBAAsB;AACpD,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,OAAO,SAASC,iBAAiB,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAM,CAAC,EAAE;EACxD;EACA;EACA;EACA,MAAMC,UAAU,GACdD,KAAK,KAAK,QAAQ,GACd,OAAO,GACPJ,MAAM,CAACM,MAAM,CAACC,YAAY,CAAC,QAAQ,CAAC,CAACF,UAAU,IAAI,QAAQ;EAEjE,IAAIF,KAAK,EAAE;IACT;IACA,IAAIJ,aAAa,CAACI,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;MAAA;MAC/B;MACA,IAAIA,KAAK,aAALA,KAAK,sCAALA,KAAK,CAAEK,YAAY,gDAAnB,oBAAsBL,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEM,WAAW,CAAC,EAAE;QAAA;QAC7C,OAAQ,GAAEN,KAAK,CAAC,KAAK,CAAE,IACrB,0BAAAA,KAAK,CAACK,YAAY,CAACL,KAAK,CAACM,WAAW,CAAC,oFAArC,sBAAwC,CAAC,CAAC,CAACC,MAAM,CAACL,UAAU,CAAC,2DAA7D,uBACIM,QAAQ,gCAAIR,KAAK,CAACK,YAAY,CAACL,KAAK,CAACM,WAAW,CAAC,2DAArC,uBAAwC,CAAC,CAAC,CAACE,QAAQ,CACpE,EAAC;MACJ,CAAC,MAAM;QACL;QACA,OAAQ,GAAER,KAAK,CAAC,KAAK,CAAE,aAAYA,KAAK,CAACM,WAAY,IAAGJ,UAAW,EAAC;MACtE;IACF,CAAC,MAAM;MACL;MACA,OAAOF,KAAK,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,MAAM;IAAA;IACL;IACA,IAAID,IAAI,aAAJA,IAAI,qCAAJA,IAAI,CAAEM,YAAY,+CAAlB,mBAAqBN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,WAAW,CAAC,EAAE;MAAA;MAC3C,OAAQ,GAAEP,IAAI,CAAC,KAAK,CAAE,IACpB,0BAAAA,IAAI,CAACM,YAAY,CAACN,IAAI,CAACO,WAAW,CAAC,oFAAnC,sBAAsC,CAAC,CAAC,CAACC,MAAM,CAACL,UAAU,CAAC,2DAA3D,uBAA6DM,QAAQ,gCACrET,IAAI,CAACM,YAAY,CAACN,IAAI,CAACO,WAAW,CAAC,2DAAnC,uBAAsC,CAAC,CAAC,CAACE,QAAQ,CAClD,EAAC;IACJ,CAAC,MAAM;MACL;MACA,OAAQ,GAAET,IAAI,CAAC,KAAK,CAAE,aACpBA,IAAI,CAACO,WAAW,IAAI,eACrB,IAAGJ,UAAW,EAAC;IAClB;EACF;AACF"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}