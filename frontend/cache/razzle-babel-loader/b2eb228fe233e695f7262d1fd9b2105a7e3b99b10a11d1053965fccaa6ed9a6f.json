{"ast":null,"code":"import _objectSpread from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n// import { flattenToAppURL } from '@plone/volto/helpers';\n//\n// import clearSVG from '@plone/volto/icons/clear.svg';\n// import navTreeSVG from '@plone/volto/icons/nav.svg';\n\nconst ImageSchema = _ref => {\n  let {\n    schema,\n    formData,\n    intl\n  } = _ref;\n  const showAlign = ['s', 'm'].includes(formData.size);\n\n  // remove the align field, we have a fixed policy of image behavior\n  schema.fieldsets[0].fields = [...schema.fieldsets[0].fields.filter(n => n !== 'align' ? true : showAlign), 'source', 'sourceHref', 'imageCaption'];\n  // schema.properties.align.description =\n  //   'Available only when the size is set to Small';\n\n  schema.properties = _objectSpread(_objectSpread({}, schema.properties), {}, {\n    source: {\n      title: 'Image source',\n      description: 'Write here the source/copyright of this image'\n    },\n    sourceHref: {\n      title: 'Source website',\n      widget: 'url'\n    },\n    imageCaption: {\n      type: 'richtext',\n      title: 'Image caption',\n      description: 'The image caption will be shown under the image'\n    }\n  });\n  return schema;\n\n  // return {\n  //   title: 'Image',\n  //   fieldsets: [\n  //     {\n  //       id: 'default',\n  //       title: 'Default',\n  //       fields: ['source', 'sourceHref', 'imageCaption'],\n  //     },\n  //   ],\n  //   properties: {\n  //     source: {\n  //       title: 'Image source',\n  //       description: 'Write here the source/copyright of this image',\n  //     },\n  //     // sourceHref: {\n  //     //   title: 'Source website',\n  //     //   icon: data.sourceHref ? clearSVG : navTreeSVG,\n  //     //   iconAction: data.sourceHref\n  //     //     ? () => {\n  //     //         onChangeBlock(block, {\n  //     //           ...data,\n  //     //           sourceHref: '',\n  //     //           title: '',\n  //     //           description: '',\n  //     //           preview_image: '',\n  //     //         });\n  //     //       }\n  //     //     : () => openObjectBrowser({ mode: 'link' }),\n  //     //   value: url && flattenToAppURL(url),\n  //     // },\n  //     imageCaption: {\n  //       type: 'richtext',\n  //       title: 'Image caption',\n  //       description: 'The image caption will be shown under the image',\n  //     },\n  //   },\n  //   required: [],\n  // };\n};\n_c = ImageSchema;\nexport default ImageSchema;\nvar _c;\n$RefreshReg$(_c, \"ImageSchema\");","map":{"version":3,"names":["ImageSchema","schema","formData","intl","showAlign","includes","size","fieldsets","fields","filter","n","properties","source","title","description","sourceHref","widget","imageCaption","type"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/components/blocks/Image/schema.js"],"sourcesContent":["// import { flattenToAppURL } from '@plone/volto/helpers';\n//\n// import clearSVG from '@plone/volto/icons/clear.svg';\n// import navTreeSVG from '@plone/volto/icons/nav.svg';\n\nconst ImageSchema = ({ schema, formData, intl }) => {\n  const showAlign = ['s', 'm'].includes(formData.size);\n\n  // remove the align field, we have a fixed policy of image behavior\n  schema.fieldsets[0].fields = [\n    ...schema.fieldsets[0].fields.filter((n) =>\n      n !== 'align' ? true : showAlign,\n    ),\n    'source',\n    'sourceHref',\n    'imageCaption',\n  ];\n  // schema.properties.align.description =\n  //   'Available only when the size is set to Small';\n\n  schema.properties = {\n    ...schema.properties,\n    source: {\n      title: 'Image source',\n      description: 'Write here the source/copyright of this image',\n    },\n    sourceHref: {\n      title: 'Source website',\n      widget: 'url',\n    },\n    imageCaption: {\n      type: 'richtext',\n      title: 'Image caption',\n      description: 'The image caption will be shown under the image',\n    },\n  };\n\n  return schema;\n\n  // return {\n  //   title: 'Image',\n  //   fieldsets: [\n  //     {\n  //       id: 'default',\n  //       title: 'Default',\n  //       fields: ['source', 'sourceHref', 'imageCaption'],\n  //     },\n  //   ],\n  //   properties: {\n  //     source: {\n  //       title: 'Image source',\n  //       description: 'Write here the source/copyright of this image',\n  //     },\n  //     // sourceHref: {\n  //     //   title: 'Source website',\n  //     //   icon: data.sourceHref ? clearSVG : navTreeSVG,\n  //     //   iconAction: data.sourceHref\n  //     //     ? () => {\n  //     //         onChangeBlock(block, {\n  //     //           ...data,\n  //     //           sourceHref: '',\n  //     //           title: '',\n  //     //           description: '',\n  //     //           preview_image: '',\n  //     //         });\n  //     //       }\n  //     //     : () => openObjectBrowser({ mode: 'link' }),\n  //     //   value: url && flattenToAppURL(url),\n  //     // },\n  //     imageCaption: {\n  //       type: 'richtext',\n  //       title: 'Image caption',\n  //       description: 'The image caption will be shown under the image',\n  //     },\n  //   },\n  //   required: [],\n  // };\n};\n\nexport default ImageSchema;\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA,MAAMA,WAAW,GAAG,QAAgC;EAAA,IAA/B;IAAEC,MAAM;IAAEC,QAAQ;IAAEC;EAAK,CAAC;EAC7C,MAAMC,SAAS,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAACC,QAAQ,CAACH,QAAQ,CAACI,IAAI,CAAC;;EAEpD;EACAL,MAAM,CAACM,SAAS,CAAC,CAAC,CAAC,CAACC,MAAM,GAAG,CAC3B,GAAGP,MAAM,CAACM,SAAS,CAAC,CAAC,CAAC,CAACC,MAAM,CAACC,MAAM,CAAEC,CAAC,IACrCA,CAAC,KAAK,OAAO,GAAG,IAAI,GAAGN,SAAS,CACjC,EACD,QAAQ,EACR,YAAY,EACZ,cAAc,CACf;EACD;EACA;;EAEAH,MAAM,CAACU,UAAU,mCACZV,MAAM,CAACU,UAAU;IACpBC,MAAM,EAAE;MACNC,KAAK,EAAE,cAAc;MACrBC,WAAW,EAAE;IACf,CAAC;IACDC,UAAU,EAAE;MACVF,KAAK,EAAE,gBAAgB;MACvBG,MAAM,EAAE;IACV,CAAC;IACDC,YAAY,EAAE;MACZC,IAAI,EAAE,UAAU;MAChBL,KAAK,EAAE,eAAe;MACtBC,WAAW,EAAE;IACf;EAAC,EACF;EAED,OAAOb,MAAM;;EAEb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAAC,KAxEID,WAAW;AA0EjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}