{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst initialState = {};\nexport default function slate_block_selections(state = initialState, action = {}) {\n  switch (action.type) {\n    case 'SAVE_SLATE_BLOCK_SELECTION':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [action.blockid]: action.selection\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["initialState","slate_block_selections","state","action","type","blockid","selection"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/packages/volto-slate/src/reducers/selection.js"],"sourcesContent":["const initialState = {};\n\nexport default function slate_block_selections(\n  state = initialState,\n  action = {},\n) {\n  switch (action.type) {\n    case 'SAVE_SLATE_BLOCK_SELECTION':\n      return {\n        ...state,\n        [action.blockid]: action.selection,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";;;;;AAAA,MAAMA,YAAY,GAAG,CAAC,CAAC;AAEvB,eAAe,SAASC,sBAAsB,CAC5CC,KAAK,GAAGF,YAAY,EACpBG,MAAM,GAAG,CAAC,CAAC,EACX;EACA,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,4BAA4B;MAC/B,uCACKF,KAAK;QACR,CAACC,MAAM,CAACE,OAAO,GAAGF,MAAM,CAACG;MAAS;IAEtC;MACE,OAAOJ,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}