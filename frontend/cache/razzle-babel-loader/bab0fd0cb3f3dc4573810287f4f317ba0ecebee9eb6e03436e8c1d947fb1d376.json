{"ast":null,"code":"import _extends from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Widgets/PasswordWidget.jsx\";\nvar __jsx = React.createElement;\n/**\n * PasswordWidget component.\n * @module components/manage/Widgets/PassswordWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'semantic-ui-react';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport { injectIntl } from 'react-intl';\n\n/**\n * PasswordWidget component class.\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Password\",\n *  type: 'password',\n * }\n * ```\n */\nconst PasswordWidget = props => {\n  const {\n    id,\n    value,\n    onChange,\n    onBlur,\n    onClick,\n    minLength,\n    maxLength,\n    placeholder,\n    isDisabled\n  } = props;\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), __jsx(Input, {\n    id: `field-${id}`,\n    name: id,\n    type: \"password\",\n    disabled: isDisabled,\n    value: value || '',\n    placeholder: placeholder,\n    onChange: _ref => {\n      let {\n        target\n      } = _ref;\n      return onChange(id, target.value === '' ? undefined : target.value);\n    },\n    onBlur: _ref2 => {\n      let {\n        target\n      } = _ref2;\n      return onBlur(id, target.value === '' ? undefined : target.value);\n    },\n    onClick: () => onClick(),\n    minLength: minLength || null,\n    maxLength: maxLength || null,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n};\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_c = PasswordWidget;\nPasswordWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  wrapped: PropTypes.bool,\n  placeholder: PropTypes.string\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nPasswordWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {},\n  minLength: null,\n  maxLength: null\n};\nexport default _c2 = injectIntl(PasswordWidget);\nvar _c, _c2;\n$RefreshReg$(_c, \"PasswordWidget\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","PropTypes","Input","FormFieldWrapper","injectIntl","PasswordWidget","props","id","value","onChange","onBlur","onClick","minLength","maxLength","placeholder","isDisabled","target","undefined","propTypes","string","isRequired","title","description","required","bool","error","arrayOf","func","number","wrapped","defaultProps"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Widgets/PasswordWidget.jsx"],"sourcesContent":["/**\n * PasswordWidget component.\n * @module components/manage/Widgets/PassswordWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'semantic-ui-react';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport { injectIntl } from 'react-intl';\n\n/**\n * PasswordWidget component class.\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Password\",\n *  type: 'password',\n * }\n * ```\n */\nconst PasswordWidget = (props) => {\n  const {\n    id,\n    value,\n    onChange,\n    onBlur,\n    onClick,\n    minLength,\n    maxLength,\n    placeholder,\n    isDisabled,\n  } = props;\n\n  return (\n    <FormFieldWrapper {...props}>\n      <Input\n        id={`field-${id}`}\n        name={id}\n        type=\"password\"\n        disabled={isDisabled}\n        value={value || ''}\n        placeholder={placeholder}\n        onChange={({ target }) =>\n          onChange(id, target.value === '' ? undefined : target.value)\n        }\n        onBlur={({ target }) =>\n          onBlur(id, target.value === '' ? undefined : target.value)\n        }\n        onClick={() => onClick()}\n        minLength={minLength || null}\n        maxLength={maxLength || null}\n        autoComplete=\"off\"\n      />\n    </FormFieldWrapper>\n  );\n};\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nPasswordWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  wrapped: PropTypes.bool,\n  placeholder: PropTypes.string,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nPasswordWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {},\n  minLength: null,\n  maxLength: null,\n};\n\nexport default injectIntl(PasswordWidget);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}