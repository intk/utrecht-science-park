{"ast":null,"code":"import _objectSpread from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-multilingual-widget/src/MultilingualWidget.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Tab, Grid, Form } from 'semantic-ui-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContent } from '@plone/volto/actions';\nimport { WysiwygWidget } from '@plone/volto/components';\nconst messages = defineMessages({\n  valueForLang: {\n    \"id\": \"value_for_lang\",\n    \"defaultMessage\": \"Value for language {lang}\"\n  },\n  placeholder: {\n    \"id\": \"multilingual_text_placeholder\",\n    \"defaultMessage\": \"Type some text...\"\n  }\n});\nconst srOnlyStyles = {\n  position: 'absolute',\n  width: '1px',\n  height: '1px',\n  padding: '0',\n  margin: '-1px',\n  overflow: 'hidden',\n  clip: 'rect(0, 0, 0, 0)',\n  whiteSpace: 'nowrap',\n  border: '0'\n};\nconst MultilingualWidget = function () {\n  var _s = $RefreshSig$();\n  let Widget = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : WysiwygWidget;\n  let defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return _s(_ref => {\n    _s();\n    let {\n      value = defaultValue,\n      id,\n      onChange,\n      required,\n      title,\n      description\n    } = _ref;\n    const intl = useIntl();\n    const availableLanguages = useSelector(state => {\n      var _state$content, _state$content$subreq, _state$content$subreq2, _state$content$subreq3, _state$content$subreq4;\n      return (_state$content = state.content) === null || _state$content === void 0 ? void 0 : (_state$content$subreq = _state$content.subrequests) === null || _state$content$subreq === void 0 ? void 0 : (_state$content$subreq2 = _state$content$subreq.languageControlpanel) === null || _state$content$subreq2 === void 0 ? void 0 : (_state$content$subreq3 = _state$content$subreq2.data) === null || _state$content$subreq3 === void 0 ? void 0 : (_state$content$subreq4 = _state$content$subreq3.data) === null || _state$content$subreq4 === void 0 ? void 0 : _state$content$subreq4.available_languages;\n    });\n    const dispatch = useDispatch();\n    const valueObj = typeof value === 'string' ? JSON.parse(value) : value;\n    const handleChangeLangValue = lang => (fid, v) => {\n      onChange(id, JSON.stringify(_objectSpread(_objectSpread({}, valueObj), {}, {\n        [lang]: Widget === WysiwygWidget ? v.data : v\n      })));\n    };\n    useEffect(() => {\n      dispatch(getContent('/@controlpanels/language', null, 'languageControlpanel'));\n    }, [dispatch]);\n    const tabPanes = availableLanguages === null || availableLanguages === void 0 ? void 0 : availableLanguages.map(_ref2 => {\n      let {\n        title,\n        token\n      } = _ref2;\n      return {\n        menuItem: title,\n        render: () => {\n          var _valueObj$token, _valueObj$token2;\n          return __jsx(Tab.Pane, {\n            id: `multilingual-item-${token}-${id}`,\n            key: `multilingual-item-${token}-${id}`,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 7\n            }\n          }, __jsx(\"label\", {\n            htmlFor: `multilingual-text-${token}-${id}`,\n            style: srOnlyStyles,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 9\n            }\n          }, intl.formatMessage(messages.valueForLang, {\n            lang: title\n          })), __jsx(Widget, {\n            id: `multilingual-text-${token}-${id}`,\n            placeholder: intl.formatMessage(messages.placeholder),\n            value: Widget === WysiwygWidget ? {\n              data: (_valueObj$token = valueObj[token]) !== null && _valueObj$token !== void 0 ? _valueObj$token : defaultValue\n            } : (_valueObj$token2 = valueObj[token]) !== null && _valueObj$token2 !== void 0 ? _valueObj$token2 : defaultValue,\n            title: title,\n            description: description,\n            onChange: handleChangeLangValue(token),\n            wrapped: false,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 9\n            }\n          }));\n        }\n      };\n    });\n    return __jsx(Form.Field, {\n      inline: true,\n      required: required,\n      id: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }\n    }, __jsx(Grid, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, __jsx(Grid.Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, __jsx(Grid.Column, {\n      width: \"4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"wrapper\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"multilingual-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, title))), __jsx(Grid.Column, {\n      width: \"8\",\n      id: \"multilingual-item\",\n      className: \"multilingual-widget\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, availableLanguages && __jsx(Tab, {\n      panes: tabPanes,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 36\n      }\n    })))));\n  }, \"PuhaGCN0oJddnJ9YwB9BWjzkYE4=\", false, function () {\n    return [useIntl, useSelector, useDispatch];\n  });\n};\nexport default MultilingualWidget;","map":{"version":3,"names":["React","useEffect","defineMessages","useIntl","Tab","Grid","Form","useSelector","useDispatch","getContent","WysiwygWidget","messages","valueForLang","placeholder","srOnlyStyles","position","width","height","padding","margin","overflow","clip","whiteSpace","border","MultilingualWidget","Widget","defaultValue","value","id","onChange","required","title","description","intl","availableLanguages","state","content","subrequests","languageControlpanel","data","available_languages","dispatch","valueObj","JSON","parse","handleChangeLangValue","lang","fid","v","stringify","tabPanes","map","token","menuItem","render","formatMessage"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-multilingual-widget/src/MultilingualWidget.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Tab, Grid, Form } from 'semantic-ui-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContent } from '@plone/volto/actions';\n\nimport { WysiwygWidget } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  valueForLang: {\n    id: 'value_for_lang',\n    defaultMessage: 'Value for language {lang}',\n  },\n  placeholder: {\n    id: 'multilingual_text_placeholder',\n    defaultMessage: 'Type some text...',\n  },\n});\n\nconst srOnlyStyles = {\n  position: 'absolute',\n  width: '1px',\n  height: '1px',\n  padding: '0',\n  margin: '-1px',\n  overflow: 'hidden',\n  clip: 'rect(0, 0, 0, 0)',\n  whiteSpace: 'nowrap',\n  border: '0',\n};\n\nconst MultilingualWidget = (Widget = WysiwygWidget, defaultValue = '') => ({\n  value = defaultValue,\n  id,\n  onChange,\n  required,\n  title,\n  description,\n}) => {\n  const intl = useIntl();\n  const availableLanguages = useSelector(\n    (state) =>\n      state.content?.subrequests?.languageControlpanel?.data?.data\n        ?.available_languages,\n  );\n  const dispatch = useDispatch();\n\n  const valueObj = typeof value === 'string' ? JSON.parse(value) : value;\n\n  const handleChangeLangValue = (lang) => (fid, v) => {\n    onChange(\n      id,\n      JSON.stringify({\n        ...valueObj,\n        [lang]: Widget === WysiwygWidget ? v.data : v,\n      }),\n    );\n  };\n\n  useEffect(() => {\n    dispatch(\n      getContent('/@controlpanels/language', null, 'languageControlpanel'),\n    );\n  }, [dispatch]);\n\n  const tabPanes = availableLanguages?.map(({ title, token }) => ({\n    menuItem: title,\n    render: () => (\n      <Tab.Pane\n        id={`multilingual-item-${token}-${id}`}\n        key={`multilingual-item-${token}-${id}`}\n      >\n        <label\n          htmlFor={`multilingual-text-${token}-${id}`}\n          style={srOnlyStyles}\n        >\n          {intl.formatMessage(messages.valueForLang, { lang: title })}\n        </label>\n\n        <Widget\n          id={`multilingual-text-${token}-${id}`}\n          placeholder={intl.formatMessage(messages.placeholder)}\n          value={\n            Widget === WysiwygWidget\n              ? { data: valueObj[token] ?? defaultValue }\n              : valueObj[token] ?? defaultValue\n          }\n          title={title}\n          description={description}\n          onChange={handleChangeLangValue(token)}\n          wrapped={false}\n        />\n      </Tab.Pane>\n    ),\n  }));\n\n  return (\n    <Form.Field inline required={required} id={id}>\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width=\"4\">\n            <div className=\"wrapper\">\n              <label htmlFor=\"multilingual-item\">{title}</label>\n            </div>\n          </Grid.Column>\n          <Grid.Column\n            width=\"8\"\n            id=\"multilingual-item\"\n            className=\"multilingual-widget\"\n          >\n            {availableLanguages && <Tab panes={tabPanes} />}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Form.Field>\n  );\n};\n\nexport default MultilingualWidget;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,cAAc,EAAEC,OAAO,QAAQ,YAAY;AACpD,SAASC,GAAG,EAAEC,IAAI,EAAEC,IAAI,QAAQ,mBAAmB;AACnD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,sBAAsB;AAEjD,SAASC,aAAa,QAAQ,yBAAyB;AAEvD,MAAMC,QAAQ,GAAGT,cAAc,CAAC;EAC9BU,YAAY;IAAA;IAAA;EAAA,CAGX;EACDC,WAAW;IAAA;IAAA;EAAA;AAIb,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,UAAU;EACpBC,KAAK,EAAE,KAAK;EACZC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE,GAAG;EACZC,MAAM,EAAE,MAAM;EACdC,QAAQ,EAAE,QAAQ;EAClBC,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE,QAAQ;EACpBC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,kBAAkB,GAAG;EAAA;EAAA,IAACC,MAAM,uEAAGf,aAAa;EAAA,IAAEgB,YAAY,uEAAG,EAAE;EAAA,UAAK,QAOpE;IAAA;IAAA,IAPqE;MACzEC,KAAK,GAAGD,YAAY;MACpBE,EAAE;MACFC,QAAQ;MACRC,QAAQ;MACRC,KAAK;MACLC;IACF,CAAC;IACC,MAAMC,IAAI,GAAG9B,OAAO,EAAE;IACtB,MAAM+B,kBAAkB,GAAG3B,WAAW,CACnC4B,KAAK;MAAA;MAAA,yBACJA,KAAK,CAACC,OAAO,4EAAb,eAAeC,WAAW,oFAA1B,sBAA4BC,oBAAoB,qFAAhD,uBAAkDC,IAAI,qFAAtD,uBAAwDA,IAAI,2DAA5D,uBACIC,mBAAmB;IAAA,EAC1B;IACD,MAAMC,QAAQ,GAAGjC,WAAW,EAAE;IAE9B,MAAMkC,QAAQ,GAAG,OAAOf,KAAK,KAAK,QAAQ,GAAGgB,IAAI,CAACC,KAAK,CAACjB,KAAK,CAAC,GAAGA,KAAK;IAEtE,MAAMkB,qBAAqB,GAAIC,IAAI,IAAK,CAACC,GAAG,EAAEC,CAAC,KAAK;MAClDnB,QAAQ,CACND,EAAE,EACFe,IAAI,CAACM,SAAS,iCACTP,QAAQ;QACX,CAACI,IAAI,GAAGrB,MAAM,KAAKf,aAAa,GAAGsC,CAAC,CAACT,IAAI,GAAGS;MAAC,GAC7C,CACH;IACH,CAAC;IAED/C,SAAS,CAAC,MAAM;MACdwC,QAAQ,CACNhC,UAAU,CAAC,0BAA0B,EAAE,IAAI,EAAE,sBAAsB,CAAC,CACrE;IACH,CAAC,EAAE,CAACgC,QAAQ,CAAC,CAAC;IAEd,MAAMS,QAAQ,GAAGhB,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAEiB,GAAG,CAAC;MAAA,IAAC;QAAEpB,KAAK;QAAEqB;MAAM,CAAC;MAAA,OAAM;QAC9DC,QAAQ,EAAEtB,KAAK;QACfuB,MAAM,EAAE;UAAA;UAAA,OACN,MAAC,GAAG,CAAC,IAAI;YACP,EAAE,EAAG,qBAAoBF,KAAM,IAAGxB,EAAG,EAAE;YACvC,GAAG,EAAG,qBAAoBwB,KAAM,IAAGxB,EAAG,EAAE;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAExC;YACE,OAAO,EAAG,qBAAoBwB,KAAM,IAAGxB,EAAG,EAAE;YAC5C,KAAK,EAAEd,YAAa;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAEnBmB,IAAI,CAACsB,aAAa,CAAC5C,QAAQ,CAACC,YAAY,EAAE;YAAEkC,IAAI,EAAEf;UAAM,CAAC,CAAC,CACrD,EAER,MAAC,MAAM;YACL,EAAE,EAAG,qBAAoBqB,KAAM,IAAGxB,EAAG,EAAE;YACvC,WAAW,EAAEK,IAAI,CAACsB,aAAa,CAAC5C,QAAQ,CAACE,WAAW,CAAE;YACtD,KAAK,EACHY,MAAM,KAAKf,aAAa,GACpB;cAAE6B,IAAI,qBAAEG,QAAQ,CAACU,KAAK,CAAC,6DAAI1B;YAAa,CAAC,uBACzCgB,QAAQ,CAACU,KAAK,CAAC,+DAAI1B,YACxB;YACD,KAAK,EAAEK,KAAM;YACb,WAAW,EAAEC,WAAY;YACzB,QAAQ,EAAEa,qBAAqB,CAACO,KAAK,CAAE;YACvC,OAAO,EAAE,KAAM;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,EACf,CACO;QAAA;MAEf,CAAC;IAAA,CAAC,CAAC;IAEH,OACE,MAAC,IAAI,CAAC,KAAK;MAAC,MAAM;MAAC,QAAQ,EAAEtB,QAAS;MAAC,EAAE,EAAEF,EAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC5C,MAAC,IAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACH,MAAC,IAAI,CAAC,GAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACP,MAAC,IAAI,CAAC,MAAM;MAAC,KAAK,EAAC,GAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACpB;MAAK,SAAS,EAAC,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACtB;MAAO,OAAO,EAAC,mBAAmB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAEG,KAAK,CAAS,CAC9C,CACM,EACd,MAAC,IAAI,CAAC,MAAM;MACV,KAAK,EAAC,GAAG;MACT,EAAE,EAAC,mBAAmB;MACtB,SAAS,EAAC,qBAAqB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAE9BG,kBAAkB,IAAI,MAAC,GAAG;MAAC,KAAK,EAAEgB,QAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CACnC,CACL,CACN,CACI;EAEjB,CAAC;IAAA,QA7Ec/C,OAAO,EACOI,WAAW,EAKrBC,WAAW;EAAA;AAAA,CAuE7B;AAED,eAAegB,kBAAkB"},"metadata":{"react-intl":{"messages":[{"id":"value_for_lang","defaultMessage":"Value for language {lang}"},{"id":"multilingual_text_placeholder","defaultMessage":"Type some text..."}]}},"sourceType":"module","externalDependencies":[]}