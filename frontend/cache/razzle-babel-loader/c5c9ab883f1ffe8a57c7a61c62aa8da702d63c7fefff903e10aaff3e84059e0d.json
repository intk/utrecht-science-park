{"ast":null,"code":"import _extends from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Blocks/Listing/ListingBody.jsx\";\nvar __jsx = React.createElement;\nimport React, { createRef } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { Pagination, Dimmer, Loader } from 'semantic-ui-react';\nimport { Icon } from '@plone/volto/components';\nimport config from '@plone/volto/registry';\nimport withQuerystringResults from './withQuerystringResults';\nimport paginationLeftSVG from '@plone/volto/icons/left-key.svg';\nimport paginationRightSVG from '@plone/volto/icons/right-key.svg';\nconst ListingBody = withQuerystringResults(_c = props => {\n  var _config$blocks, _config$blocks$blocks, _variations$filter, _config$blocks2;\n  const {\n    data = {},\n    isEditMode,\n    listingItems,\n    totalPages,\n    onPaginationChange,\n    variation,\n    currentPage,\n    prevBatch,\n    nextBatch,\n    isFolderContentsListing,\n    hasLoaded\n  } = props;\n  let ListingBodyTemplate;\n  // Legacy support if template is present\n  const variations = ((_config$blocks = config.blocks) === null || _config$blocks === void 0 ? void 0 : (_config$blocks$blocks = _config$blocks.blocksConfig['listing']) === null || _config$blocks$blocks === void 0 ? void 0 : _config$blocks$blocks.variations) || [];\n  const defaultVariation = (_variations$filter = variations.filter(item => item.isDefault)) === null || _variations$filter === void 0 ? void 0 : _variations$filter[0];\n  if (data.template && !data.variation) {\n    const legacyTemplateConfig = variations.find(item => item.id === data.template);\n    ListingBodyTemplate = legacyTemplateConfig.template;\n  } else {\n    var _ref, _variation$template;\n    ListingBodyTemplate = (_ref = (_variation$template = variation === null || variation === void 0 ? void 0 : variation.template) !== null && _variation$template !== void 0 ? _variation$template : defaultVariation === null || defaultVariation === void 0 ? void 0 : defaultVariation.template) !== null && _ref !== void 0 ? _ref : null;\n  }\n  const listingRef = /*#__PURE__*/createRef();\n  const NoResults = variation !== null && variation !== void 0 && variation.noResultsComponent ? variation.noResultsComponent : (_config$blocks2 = config.blocks) === null || _config$blocks2 === void 0 ? void 0 : _config$blocks2.blocksConfig['listing'].noResultsComponent;\n  const HeadlineTag = data.headlineTag || 'h2';\n  return __jsx(React.Fragment, null, data.headline && __jsx(HeadlineTag, {\n    className: cx('headline', {\n      emptyListing: !(listingItems !== null && listingItems !== void 0 && listingItems.length) > 0\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, data.headline), (listingItems === null || listingItems === void 0 ? void 0 : listingItems.length) > 0 ? __jsx(\"div\", {\n    ref: listingRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(ListingBodyTemplate, _extends({\n    items: listingItems,\n    isEditMode: isEditMode\n  }, data, variation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })), totalPages > 1 && __jsx(\"div\", {\n    className: \"pagination-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, __jsx(Pagination, {\n    activePage: currentPage,\n    totalPages: totalPages,\n    onPageChange: (e, _ref2) => {\n      let {\n        activePage\n      } = _ref2;\n      !isEditMode && listingRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n      onPaginationChange(e, {\n        activePage\n      });\n    },\n    firstItem: null,\n    lastItem: null,\n    prevItem: {\n      content: __jsx(Icon, {\n        name: paginationLeftSVG,\n        size: \"18px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 28\n        }\n      }),\n      icon: true,\n      'aria-disabled': !prevBatch,\n      className: !prevBatch ? 'disabled' : null\n    },\n    nextItem: {\n      content: __jsx(Icon, {\n        name: paginationRightSVG,\n        size: \"18px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 28\n        }\n      }),\n      icon: true,\n      'aria-disabled': !nextBatch,\n      className: !nextBatch ? 'disabled' : null\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }))) : isEditMode ? __jsx(\"div\", {\n    className: \"listing message\",\n    ref: listingRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, isFolderContentsListing && __jsx(FormattedMessage, {\n    id: \"No items found in this container.\",\n    defaultMessage: \"No items found in this container.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), hasLoaded && NoResults && __jsx(NoResults, _extends({\n    isEditMode: isEditMode\n  }, data, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  })), __jsx(Dimmer, {\n    active: !hasLoaded,\n    inverted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, __jsx(Loader, {\n    indeterminate: true,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"loading\",\n    defaultMessage: \"Loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  })))) : __jsx(\"div\", {\n    className: \"emptyListing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, hasLoaded && NoResults && __jsx(NoResults, _extends({\n    isEditMode: isEditMode\n  }, data, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  })), __jsx(Dimmer, {\n    active: !hasLoaded,\n    inverted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, __jsx(Loader, {\n    indeterminate: true,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"loading\",\n    defaultMessage: \"Loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  })))));\n});\n_c2 = ListingBody;\nexport default _c3 = injectIntl(ListingBody);\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ListingBody$withQuerystringResults\");\n$RefreshReg$(_c2, \"ListingBody\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"names":["React","createRef","FormattedMessage","injectIntl","cx","Pagination","Dimmer","Loader","Icon","config","withQuerystringResults","paginationLeftSVG","paginationRightSVG","ListingBody","props","data","isEditMode","listingItems","totalPages","onPaginationChange","variation","currentPage","prevBatch","nextBatch","isFolderContentsListing","hasLoaded","ListingBodyTemplate","variations","blocks","blocksConfig","defaultVariation","filter","item","isDefault","template","legacyTemplateConfig","find","id","listingRef","NoResults","noResultsComponent","HeadlineTag","headlineTag","headline","emptyListing","length","e","activePage","current","scrollIntoView","behavior","content","icon","className"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Blocks/Listing/ListingBody.jsx"],"sourcesContent":["import React, { createRef } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { Pagination, Dimmer, Loader } from 'semantic-ui-react';\nimport { Icon } from '@plone/volto/components';\nimport config from '@plone/volto/registry';\nimport withQuerystringResults from './withQuerystringResults';\n\nimport paginationLeftSVG from '@plone/volto/icons/left-key.svg';\nimport paginationRightSVG from '@plone/volto/icons/right-key.svg';\n\nconst ListingBody = withQuerystringResults((props) => {\n  const {\n    data = {},\n    isEditMode,\n    listingItems,\n    totalPages,\n    onPaginationChange,\n    variation,\n    currentPage,\n    prevBatch,\n    nextBatch,\n    isFolderContentsListing,\n    hasLoaded,\n  } = props;\n\n  let ListingBodyTemplate;\n  // Legacy support if template is present\n  const variations = config.blocks?.blocksConfig['listing']?.variations || [];\n  const defaultVariation = variations.filter((item) => item.isDefault)?.[0];\n\n  if (data.template && !data.variation) {\n    const legacyTemplateConfig = variations.find(\n      (item) => item.id === data.template,\n    );\n    ListingBodyTemplate = legacyTemplateConfig.template;\n  } else {\n    ListingBodyTemplate =\n      variation?.template ?? defaultVariation?.template ?? null;\n  }\n\n  const listingRef = createRef();\n\n  const NoResults = variation?.noResultsComponent\n    ? variation.noResultsComponent\n    : config.blocks?.blocksConfig['listing'].noResultsComponent;\n\n  const HeadlineTag = data.headlineTag || 'h2';\n\n  return (\n    <>\n      {data.headline && (\n        <HeadlineTag\n          className={cx('headline', {\n            emptyListing: !listingItems?.length > 0,\n          })}\n        >\n          {data.headline}\n        </HeadlineTag>\n      )}\n      {listingItems?.length > 0 ? (\n        <div ref={listingRef}>\n          <ListingBodyTemplate\n            items={listingItems}\n            isEditMode={isEditMode}\n            {...data}\n            {...variation}\n          />\n          {totalPages > 1 && (\n            <div className=\"pagination-wrapper\">\n              <Pagination\n                activePage={currentPage}\n                totalPages={totalPages}\n                onPageChange={(e, { activePage }) => {\n                  !isEditMode &&\n                    listingRef.current.scrollIntoView({ behavior: 'smooth' });\n                  onPaginationChange(e, { activePage });\n                }}\n                firstItem={null}\n                lastItem={null}\n                prevItem={{\n                  content: <Icon name={paginationLeftSVG} size=\"18px\" />,\n                  icon: true,\n                  'aria-disabled': !prevBatch,\n                  className: !prevBatch ? 'disabled' : null,\n                }}\n                nextItem={{\n                  content: <Icon name={paginationRightSVG} size=\"18px\" />,\n                  icon: true,\n                  'aria-disabled': !nextBatch,\n                  className: !nextBatch ? 'disabled' : null,\n                }}\n              />\n            </div>\n          )}\n        </div>\n      ) : isEditMode ? (\n        <div className=\"listing message\" ref={listingRef}>\n          {isFolderContentsListing && (\n            <FormattedMessage\n              id=\"No items found in this container.\"\n              defaultMessage=\"No items found in this container.\"\n            />\n          )}\n          {hasLoaded && NoResults && (\n            <NoResults isEditMode={isEditMode} {...data} />\n          )}\n          <Dimmer active={!hasLoaded} inverted>\n            <Loader indeterminate size=\"small\">\n              <FormattedMessage id=\"loading\" defaultMessage=\"Loading\" />\n            </Loader>\n          </Dimmer>\n        </div>\n      ) : (\n        <div className=\"emptyListing\">\n          {hasLoaded && NoResults && (\n            <NoResults isEditMode={isEditMode} {...data} />\n          )}\n          <Dimmer active={!hasLoaded} inverted>\n            <Loader indeterminate size=\"small\">\n              <FormattedMessage id=\"loading\" defaultMessage=\"Loading\" />\n            </Loader>\n          </Dimmer>\n        </div>\n      )}\n    </>\n  );\n});\n\nexport default injectIntl(ListingBody);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"No items found in this container.","defaultMessage":"No items found in this container."},{"id":"loading","defaultMessage":"Loading"}]}},"sourceType":"module","externalDependencies":[]}