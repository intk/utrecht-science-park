{"ast":null,"code":"import _defineProperty from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/customizations/components/theme/Search/SearchTags.jsx\";\nvar __jsx = React.createElement;\n/**\n * Search tags components.\n * @module components/theme/Search/SearchTags\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getVocabulary } from '@plone/volto/actions';\nconst vocabulary = 'plone.app.vocabularies.Keywords';\n\n/**\n * Search tags container class.\n * @class SearchTags\n * @extends Component\n */\nclass SearchTags extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  componentDidMount() {\n    this.props.getVocabulary({\n      vocabNameOrURL: vocabulary\n    });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return this.props.terms && this.props.terms.length > 0 ? __jsx(\"div\", {\n      id: \"search-tags\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, this.props.terms.map(term => __jsx(Link, {\n      className: \"ui label\",\n      to: `/search?Subject=${encodeURIComponent(term.value)}`,\n      key: term.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, term.label))) : __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    });\n  }\n}\n_defineProperty(SearchTags, \"propTypes\", {\n  getVocabulary: PropTypes.func.isRequired,\n  terms: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string\n  })).isRequired\n});\nexport default connect(state => ({\n  terms: state.vocabularies[vocabulary] && state.vocabularies[vocabulary].items ? state.vocabularies[vocabulary].items : []\n}), {\n  getVocabulary\n})(SearchTags);","map":{"version":3,"names":["React","Component","PropTypes","connect","Link","getVocabulary","vocabulary","SearchTags","componentDidMount","props","vocabNameOrURL","render","terms","length","map","term","encodeURIComponent","value","label","func","isRequired","arrayOf","shape","title","string","state","vocabularies","items"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/customizations/components/theme/Search/SearchTags.jsx"],"sourcesContent":["/**\n * Search tags components.\n * @module components/theme/Search/SearchTags\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { getVocabulary } from '@plone/volto/actions';\n\nconst vocabulary = 'plone.app.vocabularies.Keywords';\n\n/**\n * Search tags container class.\n * @class SearchTags\n * @extends Component\n */\nclass SearchTags extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getVocabulary: PropTypes.func.isRequired,\n    terms: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n      }),\n    ).isRequired,\n  };\n\n  componentDidMount() {\n    this.props.getVocabulary({ vocabNameOrURL: vocabulary });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return this.props.terms && this.props.terms.length > 0 ? (\n      <div id=\"search-tags\">\n        {this.props.terms.map((term) => (\n          <Link\n            className=\"ui label\"\n            to={`/search?Subject=${encodeURIComponent(term.value)}`}\n            key={term.value}\n          >\n            {term.label}\n          </Link>\n        ))}\n      </div>\n    ) : (\n      <span />\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    terms:\n      state.vocabularies[vocabulary] && state.vocabularies[vocabulary].items\n        ? state.vocabularies[vocabulary].items\n        : [],\n  }),\n  { getVocabulary },\n)(SearchTags);\n"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,SAASC,aAAa,QAAQ,sBAAsB;AAEpD,MAAMC,UAAU,GAAG,iCAAiC;;AAEpD;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,SAASN,SAAS,CAAC;EACjC;AACF;AACA;AACA;AACA;;EAUEO,iBAAiB,GAAG;IAClB,IAAI,CAACC,KAAK,CAACJ,aAAa,CAAC;MAAEK,cAAc,EAAEJ;IAAW,CAAC,CAAC;EAC1D;;EAEA;AACF;AACA;AACA;AACA;EACEK,MAAM,GAAG;IACP,OAAO,IAAI,CAACF,KAAK,CAACG,KAAK,IAAI,IAAI,CAACH,KAAK,CAACG,KAAK,CAACC,MAAM,GAAG,CAAC,GACpD;MAAK,EAAE,EAAC,aAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAClB,IAAI,CAACJ,KAAK,CAACG,KAAK,CAACE,GAAG,CAAEC,IAAI,IACzB,MAAC,IAAI;MACH,SAAS,EAAC,UAAU;MACpB,EAAE,EAAG,mBAAkBC,kBAAkB,CAACD,IAAI,CAACE,KAAK,CAAE,EAAE;MACxD,GAAG,EAAEF,IAAI,CAACE,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAEfF,IAAI,CAACG,KAAK,CAEd,CAAC,CACE,GAEN;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACD;EACH;AACF;AAAC,gBAzCKX,UAAU,eAMK;EACjBF,aAAa,EAAEH,SAAS,CAACiB,IAAI,CAACC,UAAU;EACxCR,KAAK,EAAEV,SAAS,CAACmB,OAAO,CACtBnB,SAAS,CAACoB,KAAK,CAAC;IACdC,KAAK,EAAErB,SAAS,CAACsB;EACnB,CAAC,CAAC,CACH,CAACJ;AACJ,CAAC;AA8BH,eAAejB,OAAO,CACnBsB,KAAK,KAAM;EACVb,KAAK,EACHa,KAAK,CAACC,YAAY,CAACpB,UAAU,CAAC,IAAImB,KAAK,CAACC,YAAY,CAACpB,UAAU,CAAC,CAACqB,KAAK,GAClEF,KAAK,CAACC,YAAY,CAACpB,UAAU,CAAC,CAACqB,KAAK,GACpC;AACR,CAAC,CAAC,EACF;EAAEtB;AAAc,CAAC,CAClB,CAACE,UAAU,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}