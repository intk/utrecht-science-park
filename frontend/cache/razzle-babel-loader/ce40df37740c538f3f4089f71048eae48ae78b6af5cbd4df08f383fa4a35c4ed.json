{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/components/blocks/Quote/ColumnEdit.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport React, { useState } from 'react';\nimport { BlocksForm } from '@plone/volto/components';\nimport { emptyBlocksForm } from '@plone/volto/helpers';\nimport PropTypes from 'prop-types';\nimport EditBlockWrapper from './EditBlockWrapper';\nimport './editor.less';\nconst Edit = props => {\n  var _data$data;\n  const {\n    block,\n    data,\n    onChangeBlock,\n    onChangeField,\n    pathname,\n    selected,\n    manage,\n    title = 'Section'\n  } = props;\n  const metadata = props.metadata || props.properties;\n  const data_blocks = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.blocks;\n  const properties = _isEmpty(data_blocks) ? emptyBlocksForm() : data.data;\n  const {\n    0: selectedBlock,\n    1: setSelectedBlock\n  } = useState(properties.blocks_layout.items[0]);\n  React.useEffect(() => {\n    if (_isEmpty(data_blocks) && properties.blocks_layout.items[0] !== selectedBlock) {\n      setSelectedBlock(properties.blocks_layout.items[0]);\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        data: properties\n      }));\n    }\n  }, [onChangeBlock, properties, selectedBlock, block, data, data_blocks]);\n  const blockState = {};\n  return __jsx(\"fieldset\", {\n    className: \"section-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(\"legend\", {\n    onClick: () => {\n      setSelectedBlock();\n      props.setSidebarTab(1);\n    },\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, title), __jsx(BlocksForm, {\n    metadata: metadata,\n    properties: properties,\n    manage: manage,\n    selectedBlock: selected ? selectedBlock : null,\n    allowedBlocks: data.allowedBlocks,\n    title: data.placeholder,\n    onSelectBlock: id => {\n      setSelectedBlock(id);\n    },\n    onChangeFormData: newFormData => {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        data: newFormData\n      }));\n    },\n    onChangeField: (id, value) => {\n      if (['blocks', 'blocks_layout'].indexOf(id) > -1) {\n        blockState[id] = value;\n        onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n          data: _objectSpread(_objectSpread({}, data.data), blockState)\n        }));\n      } else {\n        onChangeField(id, value);\n      }\n    },\n    pathname: pathname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, ({\n    draginfo\n  }, editBlock, blockProps) => __jsx(EditBlockWrapper, {\n    draginfo: draginfo,\n    blockProps: blockProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, editBlock)));\n};\nEdit.propTypes = {\n  block: PropTypes.string.isRequired,\n  data: PropTypes.object.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  manage: PropTypes.bool.isRequired\n};\nexport default Edit;","map":{"version":3,"names":["React","useState","BlocksForm","emptyBlocksForm","PropTypes","EditBlockWrapper","Edit","props","block","data","onChangeBlock","onChangeField","pathname","selected","manage","title","metadata","properties","data_blocks","blocks","selectedBlock","setSelectedBlock","blocks_layout","items","useEffect","blockState","setSidebarTab","allowedBlocks","placeholder","id","newFormData","value","indexOf","draginfo","editBlock","blockProps","propTypes","string","isRequired","object","func","bool"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/components/blocks/Quote/ColumnEdit.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { isEmpty } from 'lodash';\nimport { BlocksForm } from '@plone/volto/components';\nimport { emptyBlocksForm } from '@plone/volto/helpers';\nimport PropTypes from 'prop-types';\nimport EditBlockWrapper from './EditBlockWrapper';\nimport './editor.less';\n\nconst Edit = (props) => {\n  const {\n    block,\n    data,\n    onChangeBlock,\n    onChangeField,\n    pathname,\n    selected,\n    manage,\n    title = 'Section',\n  } = props;\n\n  const metadata = props.metadata || props.properties;\n  const data_blocks = data?.data?.blocks;\n  const properties = isEmpty(data_blocks) ? emptyBlocksForm() : data.data;\n\n  const [selectedBlock, setSelectedBlock] = useState(\n    properties.blocks_layout.items[0],\n  );\n\n  React.useEffect(() => {\n    if (\n      isEmpty(data_blocks) &&\n      properties.blocks_layout.items[0] !== selectedBlock\n    ) {\n      setSelectedBlock(properties.blocks_layout.items[0]);\n      onChangeBlock(block, {\n        ...data,\n        data: properties,\n      });\n    }\n  }, [onChangeBlock, properties, selectedBlock, block, data, data_blocks]);\n\n  const blockState = {};\n\n  return (\n    <fieldset className=\"section-block\">\n      <legend\n        onClick={() => {\n          setSelectedBlock();\n          props.setSidebarTab(1);\n        }}\n        aria-hidden=\"true\"\n      >\n        {title}\n      </legend>\n      <BlocksForm\n        metadata={metadata}\n        properties={properties}\n        manage={manage}\n        selectedBlock={selected ? selectedBlock : null}\n        allowedBlocks={data.allowedBlocks}\n        title={data.placeholder}\n        onSelectBlock={(id) => {\n          setSelectedBlock(id);\n        }}\n        onChangeFormData={(newFormData) => {\n          onChangeBlock(block, {\n            ...data,\n            data: newFormData,\n          });\n        }}\n        onChangeField={(id, value) => {\n          if (['blocks', 'blocks_layout'].indexOf(id) > -1) {\n            blockState[id] = value;\n            onChangeBlock(block, {\n              ...data,\n              data: {\n                ...data.data,\n                ...blockState,\n              },\n            });\n          } else {\n            onChangeField(id, value);\n          }\n        }}\n        pathname={pathname}\n      >\n        {({ draginfo }, editBlock, blockProps) => (\n          <EditBlockWrapper draginfo={draginfo} blockProps={blockProps}>\n            {editBlock}\n          </EditBlockWrapper>\n        )}\n      </BlocksForm>\n    </fieldset>\n  );\n};\n\nEdit.propTypes = {\n  block: PropTypes.string.isRequired,\n  data: PropTypes.object.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  manage: PropTypes.bool.isRequired,\n};\n\nexport default Edit;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}