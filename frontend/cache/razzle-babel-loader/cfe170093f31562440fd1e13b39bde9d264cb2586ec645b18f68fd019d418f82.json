{"ast":null,"code":"import _extends from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/packages/volto-slate/src/editor/plugins/Link/index.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { defineMessages } from 'react-intl'; // , defineMessages\nimport { ReactEditor, useSlate } from 'slate-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AddLinkForm from '@plone/volto/components/manage/AnchorPlugin/components/LinkButton/AddLinkForm';\nimport { _insertElement, _unwrapElement, _isActiveElement, _getActiveElement } from '@plone/volto-slate/elementEditor/utils';\nimport { SIMPLELINK, LINK } from '@plone/volto-slate/constants';\nimport { LinkElement } from './render';\nimport { simpleLinkDeserializer, withSimpleLink } from './extensions';\nimport { setPluginOptions } from '@plone/volto-slate/actions';\nimport { ToolbarButton as UIToolbarButton, PositionedToolbar } from '@plone/volto-slate/editor/ui';\nimport { useSelectionPosition } from '@plone/volto-slate/hooks';\nimport linkSVG from '@plone/volto/icons/link.svg';\nimport unlinkSVG from '@plone/volto/icons/unlink.svg';\nconst messages = defineMessages({\n  add: {\n    \"id\": \"Add link\",\n    \"defaultMessage\": \"Add link\"\n  },\n  edit: {\n    \"id\": \"Edit link\",\n    \"defaultMessage\": \"Edit link\"\n  }\n});\nfunction getPositionStyle(rect) {\n  return {\n    style: {\n      opacity: 1,\n      top: rect.top + window.pageYOffset - 6,\n      left: rect.left + window.pageXOffset + rect.width / 2\n    }\n  };\n}\nconst LinkEditor = props => {\n  _s();\n  var _node$data;\n  const {\n    editor,\n    pluginId,\n    getActiveElement,\n    unwrapElement,\n    insertElement\n  } = props;\n  const pid = `${editor.uid}-${pluginId}`;\n  const showEditor = useSelector(state => {\n    var _state$slate_plugins, _state$slate_plugins$;\n    return (_state$slate_plugins = state['slate_plugins']) === null || _state$slate_plugins === void 0 ? void 0 : (_state$slate_plugins$ = _state$slate_plugins[pid]) === null || _state$slate_plugins$ === void 0 ? void 0 : _state$slate_plugins$.show_sidebar_editor;\n  });\n  const savedPosition = React.useRef();\n  const rect = useSelectionPosition();\n  const dispatch = useDispatch();\n  const active = getActiveElement(editor);\n  // console.log('active', active);\n  const [node] = active || [];\n  if (showEditor && !savedPosition.current) {\n    savedPosition.current = getPositionStyle(rect);\n  }\n  return showEditor ? __jsx(PositionedToolbar, {\n    className: \"add-link\",\n    position: savedPosition.current,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, __jsx(AddLinkForm, {\n    block: \"draft-js\",\n    placeholder: 'Add link',\n    data: {\n      url: (node === null || node === void 0 ? void 0 : (_node$data = node.data) === null || _node$data === void 0 ? void 0 : _node$data.url) || ''\n    },\n    theme: {},\n    onChangeValue: url => {\n      if (!active) {\n        if (!editor.selection) editor.selection = editor.savedSelection;\n        insertElement(editor, {\n          url\n        });\n      } else {\n        const selection = unwrapElement(editor);\n        editor.selection = selection;\n        insertElement(editor, {\n          url\n        });\n      }\n      ReactEditor.focus(editor);\n      dispatch(setPluginOptions(pid, {\n        show_sidebar_editor: false\n      }));\n      savedPosition.current = null;\n    },\n    onClear: () => {\n      // clear button was pressed in the link edit popup\n      const newSelection = JSON.parse(JSON.stringify(unwrapElement(editor)));\n      editor.selection = newSelection;\n      editor.savedSelection = newSelection;\n    },\n    onOverrideContent: c => {\n      dispatch(setPluginOptions(pid, {\n        show_sidebar_editor: false\n      }));\n      savedPosition.current = null;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  })) : null;\n};\n_s(LinkEditor, \"p/xcHW9ukSpiXRl9D/47JY5CDu4=\", false, function () {\n  return [useSelector, useSelectionPosition, useDispatch];\n});\n_c = LinkEditor;\nconst applyConfig = config => {\n  var _s2 = $RefreshSig$();\n  const {\n    slate\n  } = config.settings;\n  const PLUGINID = SIMPLELINK;\n  const linkBtnIndex = slate.toolbarButtons.findIndex(b => b === LINK);\n  slate.expandedToolbarButtons = slate.expandedToolbarButtons.filter(b => b !== LINK);\n  const insertElement = _insertElement(PLUGINID);\n  const getActiveElement = _getActiveElement(PLUGINID);\n  const isActiveElement = _isActiveElement(PLUGINID);\n  const unwrapElement = _unwrapElement(PLUGINID);\n  const ToolbarButton = props => {\n    _s2();\n    const dispatch = useDispatch();\n    const editor = useSlate();\n    const isElement = isActiveElement(editor);\n    return __jsx(UIToolbarButton, {\n      title: isElement ? messages.edit : messages.add,\n      icon: isElement ? unlinkSVG : linkSVG,\n      active: isElement,\n      onMouseDown: e => {\n        e.stopPropagation();\n        e.preventDefault();\n        const pid = `${editor.uid}-${PLUGINID}`;\n        editor.savedSelection = JSON.parse(JSON.stringify(editor.selection));\n        dispatch(setPluginOptions(pid, {\n          show_sidebar_editor: true\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    });\n  };\n  _s2(ToolbarButton, \"aAx7GXR7zpxEcsdQTzrRjyDVO9M=\", false, function () {\n    return [useDispatch, useSlate];\n  });\n  const pluginOptions = {\n    insertElement,\n    getActiveElement,\n    isActiveElement,\n    unwrapElement\n  };\n  slate.buttons[PLUGINID] = ToolbarButton;\n  slate.toolbarButtons[linkBtnIndex] = PLUGINID;\n  slate.htmlTagsToSlate.A = simpleLinkDeserializer;\n  slate.extensions.push(withSimpleLink);\n  slate.elements[PLUGINID] = LinkElement;\n  slate.nodeTypesToHighlight.push(PLUGINID);\n  slate.persistentHelpers.push(props => __jsx(LinkEditor, _extends({}, props, {\n    pluginId: PLUGINID\n  }, pluginOptions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  })));\n  return config;\n};\nexport default applyConfig;\nvar _c;\n$RefreshReg$(_c, \"LinkEditor\");","map":{"version":3,"names":["React","defineMessages","ReactEditor","useSlate","useSelector","useDispatch","AddLinkForm","_insertElement","_unwrapElement","_isActiveElement","_getActiveElement","SIMPLELINK","LINK","LinkElement","simpleLinkDeserializer","withSimpleLink","setPluginOptions","ToolbarButton","UIToolbarButton","PositionedToolbar","useSelectionPosition","linkSVG","unlinkSVG","messages","add","edit","getPositionStyle","rect","style","opacity","top","window","pageYOffset","left","pageXOffset","width","LinkEditor","props","editor","pluginId","getActiveElement","unwrapElement","insertElement","pid","uid","showEditor","state","show_sidebar_editor","savedPosition","useRef","dispatch","active","node","current","url","data","selection","savedSelection","focus","newSelection","JSON","parse","stringify","c","applyConfig","config","slate","settings","PLUGINID","linkBtnIndex","toolbarButtons","findIndex","b","expandedToolbarButtons","filter","isActiveElement","isElement","e","stopPropagation","preventDefault","pluginOptions","buttons","htmlTagsToSlate","A","extensions","push","elements","nodeTypesToHighlight","persistentHelpers"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/packages/volto-slate/src/editor/plugins/Link/index.js"],"sourcesContent":["import React from 'react';\nimport { defineMessages } from 'react-intl'; // , defineMessages\nimport { ReactEditor, useSlate } from 'slate-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AddLinkForm from '@plone/volto/components/manage/AnchorPlugin/components/LinkButton/AddLinkForm';\nimport {\n  _insertElement,\n  _unwrapElement,\n  _isActiveElement,\n  _getActiveElement,\n} from '@plone/volto-slate/elementEditor/utils';\nimport { SIMPLELINK, LINK } from '@plone/volto-slate/constants';\nimport { LinkElement } from './render';\nimport { simpleLinkDeserializer, withSimpleLink } from './extensions';\nimport { setPluginOptions } from '@plone/volto-slate/actions';\nimport {\n  ToolbarButton as UIToolbarButton,\n  PositionedToolbar,\n} from '@plone/volto-slate/editor/ui';\nimport { useSelectionPosition } from '@plone/volto-slate/hooks';\n\nimport linkSVG from '@plone/volto/icons/link.svg';\nimport unlinkSVG from '@plone/volto/icons/unlink.svg';\n\nconst messages = defineMessages({\n  add: {\n    id: 'Add link',\n    defaultMessage: 'Add link',\n  },\n  edit: {\n    id: 'Edit link',\n    defaultMessage: 'Edit link',\n  },\n});\n\nfunction getPositionStyle(rect) {\n  return {\n    style: {\n      opacity: 1,\n      top: rect.top + window.pageYOffset - 6,\n      left: rect.left + window.pageXOffset + rect.width / 2,\n    },\n  };\n}\n\nconst LinkEditor = (props) => {\n  const {\n    editor,\n    pluginId,\n    getActiveElement,\n    unwrapElement,\n    insertElement,\n  } = props;\n  const pid = `${editor.uid}-${pluginId}`;\n  const showEditor = useSelector((state) => {\n    return state['slate_plugins']?.[pid]?.show_sidebar_editor;\n  });\n  const savedPosition = React.useRef();\n  const rect = useSelectionPosition();\n\n  const dispatch = useDispatch();\n\n  const active = getActiveElement(editor);\n  // console.log('active', active);\n  const [node] = active || [];\n\n  if (showEditor && !savedPosition.current) {\n    savedPosition.current = getPositionStyle(rect);\n  }\n\n  return showEditor ? (\n    <PositionedToolbar className=\"add-link\" position={savedPosition.current}>\n      <AddLinkForm\n        block=\"draft-js\"\n        placeholder={'Add link'}\n        data={{ url: node?.data?.url || '' }}\n        theme={{}}\n        onChangeValue={(url) => {\n          if (!active) {\n            if (!editor.selection) editor.selection = editor.savedSelection;\n            insertElement(editor, { url });\n          } else {\n            const selection = unwrapElement(editor);\n            editor.selection = selection;\n            insertElement(editor, { url });\n          }\n          ReactEditor.focus(editor);\n          dispatch(setPluginOptions(pid, { show_sidebar_editor: false }));\n          savedPosition.current = null;\n        }}\n        onClear={() => {\n          // clear button was pressed in the link edit popup\n          const newSelection = JSON.parse(\n            JSON.stringify(unwrapElement(editor)),\n          );\n          editor.selection = newSelection;\n          editor.savedSelection = newSelection;\n        }}\n        onOverrideContent={(c) => {\n          dispatch(setPluginOptions(pid, { show_sidebar_editor: false }));\n          savedPosition.current = null;\n        }}\n      />\n    </PositionedToolbar>\n  ) : null;\n};\n\nconst applyConfig = (config) => {\n  const { slate } = config.settings;\n\n  const PLUGINID = SIMPLELINK;\n\n  const linkBtnIndex = slate.toolbarButtons.findIndex((b) => b === LINK);\n  slate.expandedToolbarButtons = slate.expandedToolbarButtons.filter(\n    (b) => b !== LINK,\n  );\n\n  const insertElement = _insertElement(PLUGINID);\n  const getActiveElement = _getActiveElement(PLUGINID);\n  const isActiveElement = _isActiveElement(PLUGINID);\n  const unwrapElement = _unwrapElement(PLUGINID);\n\n  const ToolbarButton = (props) => {\n    const dispatch = useDispatch();\n    const editor = useSlate();\n    const isElement = isActiveElement(editor);\n\n    return (\n      <UIToolbarButton\n        title={isElement ? messages.edit : messages.add}\n        icon={isElement ? unlinkSVG : linkSVG}\n        active={isElement}\n        onMouseDown={(e) => {\n          e.stopPropagation();\n          e.preventDefault();\n          const pid = `${editor.uid}-${PLUGINID}`;\n          editor.savedSelection = JSON.parse(JSON.stringify(editor.selection));\n          dispatch(setPluginOptions(pid, { show_sidebar_editor: true }));\n        }}\n      />\n    );\n  };\n\n  const pluginOptions = {\n    insertElement,\n    getActiveElement,\n    isActiveElement,\n    unwrapElement,\n  };\n\n  slate.buttons[PLUGINID] = ToolbarButton;\n  slate.toolbarButtons[linkBtnIndex] = PLUGINID;\n  slate.htmlTagsToSlate.A = simpleLinkDeserializer;\n  slate.extensions.push(withSimpleLink);\n  slate.elements[PLUGINID] = LinkElement;\n  slate.nodeTypesToHighlight.push(PLUGINID);\n  slate.persistentHelpers.push((props) => (\n    <LinkEditor {...props} pluginId={PLUGINID} {...pluginOptions} />\n  ));\n\n  return config;\n};\n\nexport default applyConfig;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Add link","defaultMessage":"Add link"},{"id":"Edit link","defaultMessage":"Edit link"}]}},"sourceType":"module","externalDependencies":[]}