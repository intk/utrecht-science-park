{"ast":null,"code":"import _extends from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-form-block/src/components/Widget/CheckboxListWidget.jsx\";\nvar __jsx = React.createElement;\n/**\n * CheckboxWidget component.\n * @module components/manage/Widgets/CheckboxWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'semantic-ui-react';\nimport { FormFieldWrapper } from '@plone/volto/components';\n\n/* Style */\nimport 'volto-form-block/components/Widget/CheckboxListWidget.css';\n\n/**\n * CheckboxListWidget component class.\n * @function CheckboxWidget\n * @returns {string} Markup of the component.\n */\nconst CheckboxListWidget = _ref => {\n  let {\n    id,\n    title,\n    required,\n    description,\n    error,\n    value = [],\n    valueList,\n    onChange,\n    fieldSet,\n    isDisabled,\n    wrapped,\n    invalid\n  } = _ref;\n  const updateValueList = (val, checked) => {\n    let newValue = new Set([...(value || [])]);\n    if (checked) newValue.add(val);else newValue.delete(val);\n    onChange(id, [...newValue]);\n  };\n  let attributes = {};\n  if (required) {\n    attributes.required = true;\n    attributes['aria-required'] = true;\n  }\n  const isInvalid = invalid === true || invalid === 'true';\n  if (isInvalid) {\n    attributes['aria-invalid'] = true;\n  }\n  return __jsx(FormFieldWrapper, {\n    id: id,\n    title: title,\n    description: description,\n    required: required || null,\n    error: error,\n    fieldSet: fieldSet,\n    wrapped: wrapped,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"checkbox-list-widget\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(\"fieldset\", {\n    className: \"checkbox-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(\"legend\", {\n    \"aria-hidden\": \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, title), valueList === null || valueList === void 0 ? void 0 : valueList.map(opt => __jsx(\"div\", {\n    className: \"checkbox-item\",\n    key: opt.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, __jsx(Checkbox, _extends({\n    id: `field-${id}-${opt.value}`,\n    name: `field-${id}-${opt.value}`,\n    checked: value === null || value === void 0 ? void 0 : value.includes(opt.value),\n    disabled: isDisabled,\n    onChange: (_event, _ref2) => {\n      let {\n        checked\n      } = _ref2;\n      return updateValueList(opt.value, checked);\n    },\n    label: __jsx(\"label\", {\n      htmlFor: `field-${id}-${opt.value}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }, opt.label)\n  }, attributes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  })))))));\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_c = CheckboxListWidget;\nCheckboxListWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  wrapped: PropTypes.bool\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nCheckboxListWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: [],\n  onChange: null,\n  onEdit: null,\n  onDelete: null\n};\nexport default CheckboxListWidget;\nvar _c;\n$RefreshReg$(_c, \"CheckboxListWidget\");","map":{"version":3,"names":["React","PropTypes","Checkbox","FormFieldWrapper","CheckboxListWidget","id","title","required","description","error","value","valueList","onChange","fieldSet","isDisabled","wrapped","invalid","updateValueList","val","checked","newValue","Set","add","delete","attributes","isInvalid","map","opt","includes","_event","label","propTypes","string","isRequired","bool","arrayOf","defaultProps","onEdit","onDelete"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-form-block/src/components/Widget/CheckboxListWidget.jsx"],"sourcesContent":["/**\n * CheckboxWidget component.\n * @module components/manage/Widgets/CheckboxWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'semantic-ui-react';\nimport { FormFieldWrapper } from '@plone/volto/components';\n\n/* Style */\nimport 'volto-form-block/components/Widget/CheckboxListWidget.css';\n\n/**\n * CheckboxListWidget component class.\n * @function CheckboxWidget\n * @returns {string} Markup of the component.\n */\nconst CheckboxListWidget = ({\n  id,\n  title,\n  required,\n  description,\n  error,\n  value = [],\n  valueList,\n  onChange,\n  fieldSet,\n  isDisabled,\n  wrapped,\n  invalid,\n}) => {\n  const updateValueList = (val, checked) => {\n    let newValue = new Set([...(value || [])]);\n    if (checked) newValue.add(val);\n    else newValue.delete(val);\n\n    onChange(id, [...newValue]);\n  };\n\n  let attributes = {};\n  if (required) {\n    attributes.required = true;\n    attributes['aria-required'] = true;\n  }\n\n  const isInvalid = invalid === true || invalid === 'true';\n  if (isInvalid) {\n    attributes['aria-invalid'] = true;\n  }\n\n  return (\n    <FormFieldWrapper\n      id={id}\n      title={title}\n      description={description}\n      required={required || null}\n      error={error}\n      fieldSet={fieldSet}\n      wrapped={wrapped}\n    >\n      <div className=\"checkbox-list-widget\">\n        <fieldset className=\"checkbox-group\">\n          <legend aria-hidden=\"false\">{title}</legend>\n          {valueList?.map((opt) => (\n            <div className=\"checkbox-item\" key={opt.value}>\n              <Checkbox\n                id={`field-${id}-${opt.value}`}\n                name={`field-${id}-${opt.value}`}\n                checked={value?.includes(opt.value)}\n                disabled={isDisabled}\n                onChange={(_event, { checked }) =>\n                  updateValueList(opt.value, checked)\n                }\n                label={\n                  <label htmlFor={`field-${id}-${opt.value}`}>\n                    {opt.label}\n                  </label>\n                }\n                {...attributes}\n              />\n            </div>\n          ))}\n        </fieldset>\n      </div>\n    </FormFieldWrapper>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nCheckboxListWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  wrapped: PropTypes.bool,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nCheckboxListWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: [],\n  onChange: null,\n  onEdit: null,\n  onDelete: null,\n};\n\nexport default CheckboxListWidget;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}