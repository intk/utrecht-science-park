{"ast":null,"code":"import _extends from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/components/blocks/ImageCards/VideoCarousel.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport loadable from '@loadable/component';\nimport { Message, Button } from 'semantic-ui-react';\nimport { Icon, UniversalLink } from '@plone/volto/components';\nimport { isInternalURL, flattenToAppURL } from '@plone/volto/helpers';\nimport YouTube from 'react-youtube';\nimport config from '@plone/volto/registry';\nimport playSVG from '@plone/volto/icons/play.svg';\nimport cx from 'classnames';\nimport 'slick-carousel/slick/slick.css';\nimport './less/video-carousel.less';\nimport { getPath } from './utils';\nimport { BodyClass } from '@plone/volto/helpers';\nconst VideoPlayer = _ref => {\n  _s();\n  let {\n    videoId,\n    width,\n    height\n  } = _ref;\n  const playerRef = React.useRef(null);\n  React.useEffect(() => {\n    if (playerRef.current) {\n      playerRef.current.internalPlayer.playVideo();\n    }\n  }, [playerRef]);\n  const onReady = event => {\n    event.target.playVideo();\n  };\n  const opts = {\n    height: height || '390',\n    width: width || '640',\n    playerVars: {\n      autoplay: 1,\n      mute: 1,\n      origin: config.settings.apiPath,\n      playsinline: 1,\n      modestbranding: 1,\n      controls: 0,\n      enablejsapi: 1,\n      rel: 0\n    }\n  };\n  return __jsx(YouTube, {\n    videoId: videoId,\n    opts: opts,\n    onReady: onReady,\n    ref: playerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  });\n};\n_s(VideoPlayer, \"acbxrIfK24+Wx044vlsAOaa8STc=\");\n_c = VideoPlayer;\nexport { VideoCardSchema } from './schema';\nconst Slider = loadable({\n  resolved: {},\n  chunkName() {\n    return \"react-slick\";\n  },\n  isReady(props) {\n    const key = this.resolve(props);\n    if (this.resolved[key] !== true) {\n      return false;\n    }\n    if (typeof __webpack_modules__ !== 'undefined') {\n      return !!__webpack_modules__[key];\n    }\n    return false;\n  },\n  importAsync: () => import( /* webpackChunkName: \"react-slick\" */'react-slick'),\n  requireAsync(props) {\n    const key = this.resolve(props);\n    this.resolved[key] = false;\n    return this.importAsync(props).then(resolved => {\n      this.resolved[key] = true;\n      return resolved;\n    });\n  },\n  requireSync(props) {\n    const id = this.resolve(props);\n    if (typeof __webpack_require__ !== 'undefined') {\n      return __webpack_require__(id);\n    }\n    return eval('module.require')(id);\n  },\n  resolve() {\n    if (require.resolveWeak) {\n      return require.resolveWeak(\"react-slick\");\n    }\n    return eval('require.resolve')(\"react-slick\");\n  }\n});\n\n// <iframe src=\"https://player.vimeo.com/video/706175904?h=1c4118bf74\" width=\"640\" height=\"360\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen></iframe>\n// <p><a href=\"https://vimeo.com/706175904\">The Kites</a> from <a href=\"https://vimeo.com/user85705276\">Seyed Payam Hosseini</a> on <a href=\"https://vimeo.com\">Vimeo</a>.</p>\n_c2 = Slider;\nconst getEmbedUrl = url => {\n  let videoId;\n  if (url.match('vimeo')) {\n    videoId = url.match(/^.*\\.com\\/(.*)/)[1];\n    return {\n      type: 'vimeo',\n      videoId,\n      url: [`//player.vimeo.com/video/${videoId}`, '?dnt=1', '&loop=1', '&background=1'\n      // '?api=false',\n      // `&dnt=1`,\n      // `&loop=1`,\n      // `&autopause=1`,\n      // `&muted=1`,\n      // `&background=1`,\n      // `&autoplay=1`,\n      // '&byline=false',\n      // '&portrait=false',\n      // '&title=false',\n      ].join('')\n    };\n  }\n  videoId = url.match(/.be\\//) ? url.match(/^.*\\.be\\/(.*)/)[1] : url.match(/^.*\\?v=(.*)$/)[1];\n  return {\n    type: 'youtube',\n    videoId,\n    url: `https://www.youtube.com/embed/${videoId}?start=0&autoplay=1`\n  };\n};\nconst VimeoPlayer = _ref2 => {\n  let {\n    width,\n    height,\n    embed\n  } = _ref2;\n  // we need to apply a correction factor of 16:9 (1.77) to the video, so that\n  // it appears to show full screen.\n  const ratio = 16 / 9; // assuming video ratio of 16/9;\n\n  let cHeight = width,\n    cWidth = height;\n  if (width > height * ratio) {\n    // landscape screen\n    cWidth = width;\n    cHeight = width / ratio;\n  } else {\n    // vertical screen\n    cHeight = height;\n    cWidth = height * ratio;\n  }\n  return __jsx(\"iframe\", {\n    width: `${cWidth}px`,\n    height: `${cHeight}px`,\n    src: embed.url,\n    frameBorder: \"0\",\n    allow: \"autoplay; fullscreen; picture-in-picture; encrypted-media; accelerometer; gyroscope; \",\n    allowFullScreen: true,\n    title: \"Embedded video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  });\n};\n_c3 = VimeoPlayer;\nconst VideoEmbed = _ref3 => {\n  _s2();\n  let {\n    url,\n    placeholder,\n    height,\n    width,\n    sliderRef\n  } = _ref3;\n  const autoplay = !placeholder; // if we don't have a placeholder, then we autoplay\n  const [play, setIsPlay] = React.useState(autoplay);\n  if (!url) return null;\n  const embed = getEmbedUrl(url);\n  return __jsx(\"div\", {\n    className: \"video-responsive\",\n    style: {\n      height: `${height}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, play ? embed.type === 'youtube' ? __jsx(VideoPlayer, {\n    videoId: embed.videoId,\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }) : __jsx(VimeoPlayer, {\n    embed: embed,\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }) : __jsx(\"div\", {\n    className: \"placeholder-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: placeholder,\n    className: \"placeholder\",\n    alt: \"Placeholder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    basic: true,\n    onClick: () => {\n      sliderRef.current.slickPause();\n      setIsPlay(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: playSVG,\n    size: `${height / 10}px`,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }))));\n};\n_s2(VideoEmbed, \"795044AoZkCuf9lOj36ST63ET0Y=\");\n_c4 = VideoEmbed;\nconst VideoSlide = _ref4 => {\n  var _card$linkHref, _card$linkHref2;\n  let {\n    card,\n    image_scale,\n    height,\n    width,\n    sliderRef,\n    slideIndex,\n    slideCount\n  } = _ref4;\n  const preview_image = getPath(card.attachedimage);\n  let placeholder = preview_image ? isInternalURL(preview_image) ? `${flattenToAppURL(preview_image)}/@@images/image` : preview_image : null;\n  const embedSettings = {\n    url: card.videoUrl,\n    placeholder,\n    height,\n    width: width || '100%'\n  };\n  return __jsx(\"div\", {\n    className: \"slider-slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"slider-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"video-slider-caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"slide-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, (_card$linkHref = card.linkHref) !== null && _card$linkHref !== void 0 && _card$linkHref[0] ? __jsx(UniversalLink, {\n    href: card.linkHref[0]['@id'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, __jsx(\"h2\", {\n    className: \"slide-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, card.title || '')) : __jsx(\"h2\", {\n    className: \"slide-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, card.title || '')), __jsx(\"div\", {\n    className: \"slide-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, !!((_card$linkHref2 = card.linkHref) !== null && _card$linkHref2 !== void 0 && _card$linkHref2[0]) && __jsx(UniversalLink, {\n    href: card.linkHref[0]['@id'],\n    className: \"ui button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, card.linkTitle || '...'))), slideCount > 1 ? __jsx(Dots, {\n    sliderRef: sliderRef,\n    slideIndex: slideIndex,\n    slideCount: slideCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }) : null), __jsx(VideoEmbed, _extends({}, embedSettings, {\n    sliderRef: sliderRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  })));\n};\n_c5 = VideoSlide;\nconst Dots = _ref5 => {\n  let {\n    sliderRef,\n    settings,\n    slideIndex,\n    slideCount\n  } = _ref5;\n  return __jsx(\"div\", {\n    className: \"video-carousel-dots\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }, new Array(slideCount).fill(null).map((_, k) => __jsx(\"button\", {\n    className: cx({\n      'slick-active': slideIndex === k\n    }),\n    key: k,\n    onClick: e => {\n      sliderRef.current && sliderRef.current.slickGoTo(k);\n      e.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, slideIndex))));\n};\n_c6 = Dots;\nconst VideoCarousel = _ref6 => {\n  _s3();\n  let {\n    data\n  } = _ref6;\n  const sliderRef = React.useRef();\n  const [dimension, setDimension] = React.useState();\n  const nodeRef = React.useRef();\n  const {\n    cards = [],\n    image_scale = 'large'\n  } = data;\n  var settings = React.useMemo(() => ({\n    // afterChange: (current) => setSlideIndex(current),\n    fade: true,\n    speed: 800,\n    infinite: true,\n    autoplay: true,\n    pauseOnHover: true,\n    autoplaySpeed: 5000,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    adaptiveHeight: false,\n    vertical: false,\n    lazyLoad: 'ondemand',\n    arrows: false,\n    dots: false\n  }), []);\n  React.useEffect(() => {\n    setDimension(nodeRef.current && {\n      height: nodeRef.current.clientHeight,\n      width: nodeRef.current.clientWidth\n    });\n  }, []);\n  return __jsx(\"div\", {\n    className: cx('block align imagecards-block imagecards-carousel imagecards-videocarousel', {\n      center: !Boolean(data.align)\n    }, data.align),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 5\n    }\n  }, __jsx(BodyClass, {\n    className: \"has-video-carousel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    ref: nodeRef,\n    className: cx({\n      'full-width': data.align === 'full'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"slider-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }\n  }, cards.length ? dimension !== null && dimension !== void 0 && dimension.height ? __jsx(React.Fragment, null, __jsx(Slider, _extends({}, settings, {\n    slideHeight: dimension.height,\n    ref: sliderRef,\n    listHeight: \"100vh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }\n  }), cards.map((card, i) => __jsx(VideoSlide, {\n    card: card,\n    key: i,\n    image_scale: image_scale,\n    height: dimension.height,\n    width: dimension.width,\n    sliderRef: sliderRef,\n    slideIndex: i,\n    slideCount: cards.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 21\n    }\n  })))) : cards.map((card, i) => __jsx(VideoSlide, {\n    card: card,\n    key: i,\n    image_scale: image_scale,\n    height: dimension === null || dimension === void 0 ? void 0 : dimension.height,\n    width: dimension === null || dimension === void 0 ? void 0 : dimension.width,\n    sliderRef: sliderRef,\n    slideIndex: i,\n    slideCount: cards.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  })) : __jsx(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }, \"No image cards\"))));\n};\n_s3(VideoCarousel, \"Py0Z2v+SgaRR03MYWeHpmrj2rT0=\");\n_c7 = VideoCarousel;\nexport default VideoCarousel;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"VideoPlayer\");\n$RefreshReg$(_c2, \"Slider\");\n$RefreshReg$(_c3, \"VimeoPlayer\");\n$RefreshReg$(_c4, \"VideoEmbed\");\n$RefreshReg$(_c5, \"VideoSlide\");\n$RefreshReg$(_c6, \"Dots\");\n$RefreshReg$(_c7, \"VideoCarousel\");","map":{"version":3,"names":["React","loadable","Message","Button","Icon","UniversalLink","isInternalURL","flattenToAppURL","YouTube","config","playSVG","cx","getPath","BodyClass","VideoPlayer","videoId","width","height","playerRef","useRef","useEffect","current","internalPlayer","playVideo","onReady","event","target","opts","playerVars","autoplay","mute","origin","settings","apiPath","playsinline","modestbranding","controls","enablejsapi","rel","VideoCardSchema","Slider","getEmbedUrl","url","match","type","join","VimeoPlayer","embed","ratio","cHeight","cWidth","VideoEmbed","placeholder","sliderRef","play","setIsPlay","useState","slickPause","VideoSlide","card","image_scale","slideIndex","slideCount","preview_image","attachedimage","embedSettings","videoUrl","linkHref","title","linkTitle","Dots","Array","fill","map","_","k","e","slickGoTo","preventDefault","VideoCarousel","data","dimension","setDimension","nodeRef","cards","useMemo","fade","speed","infinite","pauseOnHover","autoplaySpeed","slidesToShow","slidesToScroll","adaptiveHeight","vertical","lazyLoad","arrows","dots","clientHeight","clientWidth","center","Boolean","align","length","i"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/components/blocks/ImageCards/VideoCarousel.jsx"],"sourcesContent":["import React from 'react';\nimport loadable from '@loadable/component';\nimport { Message, Button } from 'semantic-ui-react';\nimport { Icon, UniversalLink } from '@plone/volto/components';\nimport { isInternalURL, flattenToAppURL } from '@plone/volto/helpers';\nimport YouTube from 'react-youtube';\nimport config from '@plone/volto/registry';\n\nimport playSVG from '@plone/volto/icons/play.svg';\n\nimport cx from 'classnames';\n\nimport 'slick-carousel/slick/slick.css';\nimport './less/video-carousel.less';\n\nimport { getPath } from './utils';\n\nimport { BodyClass } from '@plone/volto/helpers';\n\nconst VideoPlayer = ({ videoId, width, height }) => {\n  const playerRef = React.useRef(null);\n\n  React.useEffect(() => {\n    if (playerRef.current) {\n      playerRef.current.internalPlayer.playVideo();\n    }\n  }, [playerRef]);\n\n  const onReady = (event) => {\n    event.target.playVideo();\n  };\n\n  const opts = {\n    height: height || '390',\n    width: width || '640',\n    playerVars: {\n      autoplay: 1,\n      mute: 1,\n      origin: config.settings.apiPath,\n      playsinline: 1,\n      modestbranding: 1,\n      controls: 0,\n      enablejsapi: 1,\n      rel: 0,\n    },\n  };\n\n  return (\n    <YouTube videoId={videoId} opts={opts} onReady={onReady} ref={playerRef} />\n  );\n};\n\nexport { VideoCardSchema } from './schema';\n\nconst Slider = loadable(() => import('react-slick'));\n\n// <iframe src=\"https://player.vimeo.com/video/706175904?h=1c4118bf74\" width=\"640\" height=\"360\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen></iframe>\n// <p><a href=\"https://vimeo.com/706175904\">The Kites</a> from <a href=\"https://vimeo.com/user85705276\">Seyed Payam Hosseini</a> on <a href=\"https://vimeo.com\">Vimeo</a>.</p>\n\nconst getEmbedUrl = (url) => {\n  let videoId;\n\n  if (url.match('vimeo')) {\n    videoId = url.match(/^.*\\.com\\/(.*)/)[1];\n    return {\n      type: 'vimeo',\n      videoId,\n      url: [\n        `//player.vimeo.com/video/${videoId}`,\n        '?dnt=1',\n        '&loop=1',\n        '&background=1',\n        // '?api=false',\n        // `&dnt=1`,\n        // `&loop=1`,\n        // `&autopause=1`,\n        // `&muted=1`,\n        // `&background=1`,\n        // `&autoplay=1`,\n        // '&byline=false',\n        // '&portrait=false',\n        // '&title=false',\n      ].join(''),\n    };\n  }\n  videoId = url.match(/.be\\//)\n    ? url.match(/^.*\\.be\\/(.*)/)[1]\n    : url.match(/^.*\\?v=(.*)$/)[1];\n\n  return {\n    type: 'youtube',\n    videoId,\n    url: `https://www.youtube.com/embed/${videoId}?start=0&autoplay=1`,\n  };\n};\n\nconst VimeoPlayer = ({ width, height, embed }) => {\n  // we need to apply a correction factor of 16:9 (1.77) to the video, so that\n  // it appears to show full screen.\n  const ratio = 16 / 9; // assuming video ratio of 16/9;\n\n  let cHeight = width,\n    cWidth = height;\n\n  if (width > height * ratio) {\n    // landscape screen\n    cWidth = width;\n    cHeight = width / ratio;\n  } else {\n    // vertical screen\n    cHeight = height;\n    cWidth = height * ratio;\n  }\n  return (\n    <iframe\n      width={`${cWidth}px`}\n      height={`${cHeight}px`}\n      src={embed.url}\n      frameBorder=\"0\"\n      allow=\"autoplay; fullscreen; picture-in-picture; encrypted-media; accelerometer; gyroscope; \"\n      allowFullScreen\n      title=\"Embedded video\"\n    />\n  );\n};\n\nconst VideoEmbed = ({ url, placeholder, height, width, sliderRef }) => {\n  const autoplay = !placeholder; // if we don't have a placeholder, then we autoplay\n  const [play, setIsPlay] = React.useState(autoplay);\n\n  if (!url) return null;\n\n  const embed = getEmbedUrl(url);\n\n  return (\n    <div className=\"video-responsive\" style={{ height: `${height}px` }}>\n      {play ? (\n        embed.type === 'youtube' ? (\n          <VideoPlayer videoId={embed.videoId} width={width} height={height} />\n        ) : (\n          <VimeoPlayer embed={embed} width={width} height={height} />\n        )\n      ) : (\n        <div className=\"placeholder-image\">\n          <img src={placeholder} className=\"placeholder\" alt=\"Placeholder\" />\n          <Button\n            basic\n            onClick={() => {\n              sliderRef.current.slickPause();\n              setIsPlay(true);\n            }}\n          >\n            <Icon name={playSVG} size={`${height / 10}px`} color=\"white\" />\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst VideoSlide = ({\n  card,\n  image_scale,\n  height,\n  width,\n  sliderRef,\n  slideIndex,\n  slideCount,\n}) => {\n  const preview_image = getPath(card.attachedimage);\n  let placeholder = preview_image\n    ? isInternalURL(preview_image)\n      ? `${flattenToAppURL(preview_image)}/@@images/image`\n      : preview_image\n    : null;\n\n  const embedSettings = {\n    url: card.videoUrl,\n    placeholder,\n    height,\n    width: width || '100%',\n  };\n\n  return (\n    <div className=\"slider-slide\">\n      <div className=\"slider-footer\">\n        <div className=\"video-slider-caption\">\n          <div className=\"slide-body\">\n            {card.linkHref?.[0] ? (\n              <UniversalLink href={card.linkHref[0]['@id']}>\n                <h2 className=\"slide-title\">{card.title || ''}</h2>\n              </UniversalLink>\n            ) : (\n              <h2 className=\"slide-title\">{card.title || ''}</h2>\n            )}\n          </div>\n          <div className=\"slide-button\">\n            {!!card.linkHref?.[0] && (\n              <UniversalLink\n                href={card.linkHref[0]['@id']}\n                className=\"ui button\"\n              >\n                {card.linkTitle || '...'}\n              </UniversalLink>\n            )}\n          </div>\n        </div>\n\n        {slideCount > 1 ? (\n          <Dots\n            sliderRef={sliderRef}\n            slideIndex={slideIndex}\n            slideCount={slideCount}\n          />\n        ) : null}\n      </div>\n      <VideoEmbed {...embedSettings} sliderRef={sliderRef} />\n    </div>\n  );\n};\n\nconst Dots = ({ sliderRef, settings, slideIndex, slideCount }) => {\n  return (\n    <div className=\"video-carousel-dots\">\n      <div className=\"inner\">\n        {new Array(slideCount).fill(null).map((_, k) => (\n          <button\n            className={cx({ 'slick-active': slideIndex === k })}\n            key={k}\n            onClick={(e) => {\n              sliderRef.current && sliderRef.current.slickGoTo(k);\n              e.preventDefault();\n            }}\n          >\n            {slideIndex}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst VideoCarousel = ({ data }) => {\n  const sliderRef = React.useRef();\n  const [dimension, setDimension] = React.useState();\n  const nodeRef = React.useRef();\n\n  const { cards = [], image_scale = 'large' } = data;\n\n  var settings = React.useMemo(\n    () => ({\n      // afterChange: (current) => setSlideIndex(current),\n      fade: true,\n      speed: 800,\n      infinite: true,\n      autoplay: true,\n      pauseOnHover: true,\n      autoplaySpeed: 5000,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      adaptiveHeight: false,\n      vertical: false,\n      lazyLoad: 'ondemand',\n      arrows: false,\n      dots: false,\n    }),\n    [],\n  );\n\n  React.useEffect(() => {\n    setDimension(\n      nodeRef.current && {\n        height: nodeRef.current.clientHeight,\n        width: nodeRef.current.clientWidth,\n      },\n    );\n  }, []);\n\n  return (\n    <div\n      className={cx(\n        'block align imagecards-block imagecards-carousel imagecards-videocarousel',\n        {\n          center: !Boolean(data.align),\n        },\n        data.align,\n      )}\n    >\n      <BodyClass className=\"has-video-carousel\" />\n      <div\n        ref={nodeRef}\n        className={cx({\n          'full-width': data.align === 'full',\n        })}\n      >\n        <div className=\"slider-wrapper\">\n          {cards.length ? (\n            dimension?.height ? (\n              <>\n                <Slider\n                  {...settings}\n                  slideHeight={dimension.height}\n                  ref={sliderRef}\n                  listHeight=\"100vh\"\n                >\n                  {cards.map((card, i) => (\n                    <VideoSlide\n                      card={card}\n                      key={i}\n                      image_scale={image_scale}\n                      height={dimension.height}\n                      width={dimension.width}\n                      sliderRef={sliderRef}\n                      slideIndex={i}\n                      slideCount={cards.length}\n                    />\n                  ))}\n                </Slider>\n              </>\n            ) : (\n              cards.map((card, i) => (\n                <VideoSlide\n                  card={card}\n                  key={i}\n                  image_scale={image_scale}\n                  height={dimension?.height}\n                  width={dimension?.width}\n                  sliderRef={sliderRef}\n                  slideIndex={i}\n                  slideCount={cards.length}\n                />\n              ))\n            )\n          ) : (\n            <Message>No image cards</Message>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoCarousel;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}