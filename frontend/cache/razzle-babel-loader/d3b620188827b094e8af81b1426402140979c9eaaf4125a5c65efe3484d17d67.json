{"ast":null,"code":"var _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Blocks/Teaser/Body.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DefaultBody from './DefaultBody';\nimport config from '@plone/volto/registry';\nconst TeaserBody = props => {\n  var _data$href, _data$href$;\n  const {\n    variation,\n    data\n  } = props;\n  const hasType = (_data$href = data.href) === null || _data$href === void 0 ? void 0 : (_data$href$ = _data$href[0]) === null || _data$href$ === void 0 ? void 0 : _data$href$['@type'];\n\n  // Compatible with the previous version of the component registry\n  // and the Volto 16 one.\n  const BodyComponent = (config === null || config === void 0 ? void 0 : config.getComponent) && hasType && config.getComponent({\n    name: 'Teaser',\n    dependencies: [hasType]\n  }).component || (variation === null || variation === void 0 ? void 0 : variation.template) || DefaultBody;\n  return __jsx(BodyComponent, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  }));\n};\nTeaserBody.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  isEditMode: PropTypes.bool,\n  variation: PropTypes.string\n};\nexport default TeaserBody;","map":{"version":3,"names":["React","PropTypes","DefaultBody","config","TeaserBody","props","variation","data","hasType","href","BodyComponent","getComponent","name","dependencies","component","template","propTypes","objectOf","any","isRequired","isEditMode","bool","string"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Blocks/Teaser/Body.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport DefaultBody from './DefaultBody';\nimport config from '@plone/volto/registry';\n\nconst TeaserBody = (props) => {\n  const { variation, data } = props;\n\n  const hasType = data.href?.[0]?.['@type'];\n\n  // Compatible with the previous version of the component registry\n  // and the Volto 16 one.\n  const BodyComponent =\n    (config?.getComponent &&\n      hasType &&\n      config.getComponent({ name: 'Teaser', dependencies: [hasType] })\n        .component) ||\n    variation?.template ||\n    DefaultBody;\n\n  return <BodyComponent {...props} />;\n};\n\nTeaserBody.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  isEditMode: PropTypes.bool,\n  variation: PropTypes.string,\n};\n\nexport default TeaserBody;\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAA;EAC5B,MAAM;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGF,KAAK;EAEjC,MAAMG,OAAO,iBAAGD,IAAI,CAACE,IAAI,8DAAT,WAAY,CAAC,CAAC,gDAAd,YAAiB,OAAO,CAAC;;EAEzC;EACA;EACA,MAAMC,aAAa,GAChB,CAAAP,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEQ,YAAY,KACnBH,OAAO,IACPL,MAAM,CAACQ,YAAY,CAAC;IAAEC,IAAI,EAAE,QAAQ;IAAEC,YAAY,EAAE,CAACL,OAAO;EAAE,CAAC,CAAC,CAC7DM,SAAS,KACdR,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAES,QAAQ,KACnBb,WAAW;EAEb,OAAO,MAAC,aAAa,eAAKG,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI;AACrC,CAAC;AAEDD,UAAU,CAACY,SAAS,GAAG;EACrBT,IAAI,EAAEN,SAAS,CAACgB,QAAQ,CAAChB,SAAS,CAACiB,GAAG,CAAC,CAACC,UAAU;EAClDC,UAAU,EAAEnB,SAAS,CAACoB,IAAI;EAC1Bf,SAAS,EAAEL,SAAS,CAACqB;AACvB,CAAC;AAED,eAAelB,UAAU"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}