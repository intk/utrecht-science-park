{"ast":null,"code":"import _extends from \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/babel-preset-razzle/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Widgets/SchemaWidgetFieldset.jsx\";\nvar __jsx = React.createElement;\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/**\n * Schema widget fieldset.\n * @module components/manage/Widgets/SchemaWidgetFieldset\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\n/**\n * Schema widget fieldset component.\n * @function SchemaWidgetFieldset\n * @returns {string} Markup of the component.\n */\nexport const SchemaWidgetFieldsetComponent = _ref => {\n  let {\n    // isDragging,\n    title,\n    order,\n    active,\n    onShowEditFieldset,\n    onShowDeleteFieldset,\n    onClick,\n    getItemStyle,\n    isDraggable,\n    isDisabled,\n    reactBeautifulDnd\n  } = _ref;\n  return __jsx(reactBeautifulDnd.Draggable, {\n    draggableId: title,\n    index: order,\n    key: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, (provided, snapshot) => __jsx(\"div\", _extends({\n    className: `item${active ? ' active' : ''}`,\n    onClick: () => onClick(order),\n    ref: provided.innerRef\n  }, provided.draggableProps, {\n    style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), isDraggable && __jsx(\"i\", _extends({\n    \"aria-hidden\": \"true\",\n    className: \"grey bars icon drag handle\"\n  }, provided.dragHandleProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })), title, !isDisabled && __jsx(\"button\", {\n    className: \"item ui noborder button\",\n    onClick: event => {\n      event.stopPropagation();\n      event.preventDefault();\n      onShowEditFieldset(order);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: \"write square\",\n    size: \"large\",\n    color: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  })), !isDisabled && __jsx(\"button\", {\n    className: \"item ui noborder button\",\n    onClick: event => {\n      event.stopPropagation();\n      event.preventDefault();\n      onShowDeleteFieldset(order);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: \"close\",\n    size: \"large\",\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }))));\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_c = SchemaWidgetFieldsetComponent;\nSchemaWidgetFieldsetComponent.propTypes = {\n  order: PropTypes.number.isRequired,\n  active: PropTypes.bool.isRequired,\n  onOrderFieldset: PropTypes.func.isRequired,\n  onShowEditFieldset: PropTypes.func.isRequired,\n  onShowDeleteFieldset: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  getItemStyle: PropTypes.func.isRequired,\n  isDraggable: PropTypes.bool,\n  isDisabled: PropTypes.bool\n};\nexport default injectLazyLibs(['reactBeautifulDnd'])(SchemaWidgetFieldsetComponent);\nvar _c;\n$RefreshReg$(_c, \"SchemaWidgetFieldsetComponent\");","map":{"version":3,"names":["PropTypes","React","Icon","injectLazyLibs","SchemaWidgetFieldsetComponent","title","order","active","onShowEditFieldset","onShowDeleteFieldset","onClick","getItemStyle","isDraggable","isDisabled","reactBeautifulDnd","provided","snapshot","innerRef","draggableProps","isDragging","style","dragHandleProps","event","stopPropagation","preventDefault","propTypes","number","isRequired","bool","onOrderFieldset","func"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/Widgets/SchemaWidgetFieldset.jsx"],"sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/**\n * Schema widget fieldset.\n * @module components/manage/Widgets/SchemaWidgetFieldset\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\n/**\n * Schema widget fieldset component.\n * @function SchemaWidgetFieldset\n * @returns {string} Markup of the component.\n */\nexport const SchemaWidgetFieldsetComponent = ({\n  // isDragging,\n  title,\n  order,\n  active,\n  onShowEditFieldset,\n  onShowDeleteFieldset,\n  onClick,\n  getItemStyle,\n  isDraggable,\n  isDisabled,\n  reactBeautifulDnd,\n}) => (\n  <reactBeautifulDnd.Draggable draggableId={title} index={order} key={title}>\n    {(provided, snapshot) => (\n      <div\n        className={`item${active ? ' active' : ''}`}\n        onClick={() => onClick(order)}\n        ref={provided.innerRef}\n        {...provided.draggableProps}\n        style={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\n      >\n        {isDraggable && (\n          <i\n            aria-hidden=\"true\"\n            className=\"grey bars icon drag handle\"\n            {...provided.dragHandleProps}\n          />\n        )}\n        {title}\n        {!isDisabled && (\n          <button\n            className=\"item ui noborder button\"\n            onClick={(event) => {\n              event.stopPropagation();\n              event.preventDefault();\n              onShowEditFieldset(order);\n            }}\n          >\n            <Icon name=\"write square\" size=\"large\" color=\"blue\" />\n          </button>\n        )}\n\n        {!isDisabled && (\n          <button\n            className=\"item ui noborder button\"\n            onClick={(event) => {\n              event.stopPropagation();\n              event.preventDefault();\n              onShowDeleteFieldset(order);\n            }}\n          >\n            <Icon name=\"close\" size=\"large\" color=\"red\" />\n          </button>\n        )}\n      </div>\n    )}\n  </reactBeautifulDnd.Draggable>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nSchemaWidgetFieldsetComponent.propTypes = {\n  order: PropTypes.number.isRequired,\n  active: PropTypes.bool.isRequired,\n  onOrderFieldset: PropTypes.func.isRequired,\n  onShowEditFieldset: PropTypes.func.isRequired,\n  onShowDeleteFieldset: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  getItemStyle: PropTypes.func.isRequired,\n  isDraggable: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n};\n\nexport default injectLazyLibs(['reactBeautifulDnd'])(\n  SchemaWidgetFieldsetComponent,\n);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}