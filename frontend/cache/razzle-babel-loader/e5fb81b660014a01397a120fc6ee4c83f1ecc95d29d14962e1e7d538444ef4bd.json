{"ast":null,"code":"import config from '@plone/volto/registry';\nconst ImageCard = () => ({\n  title: 'Image Card',\n  fieldsets: [{\n    id: 'default',\n    title: 'Default',\n    fields: ['title', 'text', 'attachedimage', 'link', 'copyright']\n  }],\n  properties: {\n    title: {\n      type: 'string',\n      title: 'Title'\n    },\n    text: {\n      widget: 'slate_richtext',\n      title: 'Text'\n    },\n    link: {\n      widget: 'url',\n      title: 'Link'\n    },\n    attachedimage: {\n      widget: 'attachedimage',\n      title: 'Image'\n    },\n    copyright: {\n      widget: 'slate_richtext',\n      title: 'Copyright'\n    }\n  },\n  required: ['attachedimage']\n});\n_c = ImageCard;\nconst ImageCards = props => {\n  var _blockRenderers$selec;\n  const blockConfig = config.blocks.blocksConfig.imagecards;\n  const {\n    blockRenderers,\n    defaultRendererName\n  } = blockConfig;\n  const display_types = Object.keys(blockRenderers).map(template => [template, blockRenderers[template].title || template]);\n  const selected_renderer = props && props.data.display;\n  const schema = selected_renderer && ((_blockRenderers$selec = blockRenderers[selected_renderer]) === null || _blockRenderers$selec === void 0 ? void 0 : _blockRenderers$selec.schema) || ImageCard;\n  return {\n    title: 'Image Cards',\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['title', 'text', 'display', 'align', 'image_scale', 'cards']\n    }],\n    properties: {\n      title: {\n        type: 'string',\n        title: 'Title'\n      },\n      text: {\n        widget: 'slate_richtext',\n        title: 'Text'\n      },\n      display: {\n        title: 'Display',\n        choices: [...display_types],\n        default: defaultRendererName\n      },\n      cards: {\n        widget: 'object_list',\n        title: 'Images',\n        description: 'Add a list of Images as Carousel Items',\n        schema: schema()\n      },\n      image_scale: {\n        type: 'string',\n        title: 'Image scale',\n        default: 'large'\n      },\n      align: {\n        title: 'Alignment',\n        widget: 'align',\n        type: 'string'\n      }\n    },\n    required: ['display', 'cards']\n  };\n};\n_c2 = ImageCards;\nexport default ImageCards;\nvar _c, _c2;\n$RefreshReg$(_c, \"ImageCard\");\n$RefreshReg$(_c2, \"ImageCards\");","map":{"version":3,"names":["config","ImageCard","title","fieldsets","id","fields","properties","type","text","widget","link","attachedimage","copyright","required","ImageCards","props","blockConfig","blocks","blocksConfig","imagecards","blockRenderers","defaultRendererName","display_types","Object","keys","map","template","selected_renderer","data","display","schema","choices","default","cards","description","image_scale","align"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/src/addons/volto-block-image-cards/src/ImageCards/schema.jsx"],"sourcesContent":["import config from '@plone/volto/registry';\n\nconst ImageCard = () => ({\n  title: 'Image Card',\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: ['title', 'text', 'attachedimage', 'link', 'copyright'],\n    },\n  ],\n\n  properties: {\n    title: {\n      type: 'string',\n      title: 'Title',\n    },\n    text: {\n      widget: 'slate_richtext',\n      title: 'Text',\n    },\n    link: {\n      widget: 'url',\n      title: 'Link',\n    },\n    attachedimage: {\n      widget: 'attachedimage',\n      title: 'Image',\n    },\n    copyright: {\n      widget: 'slate_richtext',\n      title: 'Copyright',\n    },\n  },\n\n  required: ['attachedimage'],\n});\n\nconst ImageCards = (props) => {\n  const blockConfig = config.blocks.blocksConfig.imagecards;\n  const { blockRenderers, defaultRendererName } = blockConfig;\n  const display_types = Object.keys(blockRenderers).map((template) => [\n    template,\n    blockRenderers[template].title || template,\n  ]);\n  const selected_renderer = props && props.data.display;\n  const schema =\n    (selected_renderer && blockRenderers[selected_renderer]?.schema) ||\n    ImageCard;\n\n  return {\n    title: 'Image Cards',\n\n    fieldsets: [\n      {\n        id: 'default',\n        title: 'Default',\n        fields: ['title', 'text', 'display', 'align', 'image_scale', 'cards'],\n      },\n    ],\n\n    properties: {\n      title: {\n        type: 'string',\n        title: 'Title',\n      },\n      text: {\n        widget: 'slate_richtext',\n        title: 'Text',\n      },\n      display: {\n        title: 'Display',\n        choices: [...display_types],\n        default: defaultRendererName,\n      },\n      cards: {\n        widget: 'object_list',\n        title: 'Images',\n        description: 'Add a list of Images as Carousel Items',\n        schema: schema(),\n      },\n\n      image_scale: {\n        type: 'string',\n        title: 'Image scale',\n        default: 'large',\n      },\n      align: {\n        title: 'Alignment',\n        widget: 'align',\n        type: 'string',\n      },\n    },\n\n    required: ['display', 'cards'],\n  };\n};\n\nexport default ImageCards;\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,uBAAuB;AAE1C,MAAMC,SAAS,GAAG,OAAO;EACvBC,KAAK,EAAE,YAAY;EACnBC,SAAS,EAAE,CACT;IACEC,EAAE,EAAE,SAAS;IACbF,KAAK,EAAE,SAAS;IAChBG,MAAM,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,eAAe,EAAE,MAAM,EAAE,WAAW;EAChE,CAAC,CACF;EAEDC,UAAU,EAAE;IACVJ,KAAK,EAAE;MACLK,IAAI,EAAE,QAAQ;MACdL,KAAK,EAAE;IACT,CAAC;IACDM,IAAI,EAAE;MACJC,MAAM,EAAE,gBAAgB;MACxBP,KAAK,EAAE;IACT,CAAC;IACDQ,IAAI,EAAE;MACJD,MAAM,EAAE,KAAK;MACbP,KAAK,EAAE;IACT,CAAC;IACDS,aAAa,EAAE;MACbF,MAAM,EAAE,eAAe;MACvBP,KAAK,EAAE;IACT,CAAC;IACDU,SAAS,EAAE;MACTH,MAAM,EAAE,gBAAgB;MACxBP,KAAK,EAAE;IACT;EACF,CAAC;EAEDW,QAAQ,EAAE,CAAC,eAAe;AAC5B,CAAC,CAAC;AAAC,KAlCGZ,SAAS;AAoCf,MAAMa,UAAU,GAAIC,KAAK,IAAK;EAAA;EAC5B,MAAMC,WAAW,GAAGhB,MAAM,CAACiB,MAAM,CAACC,YAAY,CAACC,UAAU;EACzD,MAAM;IAAEC,cAAc;IAAEC;EAAoB,CAAC,GAAGL,WAAW;EAC3D,MAAMM,aAAa,GAAGC,MAAM,CAACC,IAAI,CAACJ,cAAc,CAAC,CAACK,GAAG,CAAEC,QAAQ,IAAK,CAClEA,QAAQ,EACRN,cAAc,CAACM,QAAQ,CAAC,CAACxB,KAAK,IAAIwB,QAAQ,CAC3C,CAAC;EACF,MAAMC,iBAAiB,GAAGZ,KAAK,IAAIA,KAAK,CAACa,IAAI,CAACC,OAAO;EACrD,MAAMC,MAAM,GACTH,iBAAiB,8BAAIP,cAAc,CAACO,iBAAiB,CAAC,0DAAjC,sBAAmCG,MAAM,KAC/D7B,SAAS;EAEX,OAAO;IACLC,KAAK,EAAE,aAAa;IAEpBC,SAAS,EAAE,CACT;MACEC,EAAE,EAAE,SAAS;MACbF,KAAK,EAAE,SAAS;MAChBG,MAAM,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,aAAa,EAAE,OAAO;IACtE,CAAC,CACF;IAEDC,UAAU,EAAE;MACVJ,KAAK,EAAE;QACLK,IAAI,EAAE,QAAQ;QACdL,KAAK,EAAE;MACT,CAAC;MACDM,IAAI,EAAE;QACJC,MAAM,EAAE,gBAAgB;QACxBP,KAAK,EAAE;MACT,CAAC;MACD2B,OAAO,EAAE;QACP3B,KAAK,EAAE,SAAS;QAChB6B,OAAO,EAAE,CAAC,GAAGT,aAAa,CAAC;QAC3BU,OAAO,EAAEX;MACX,CAAC;MACDY,KAAK,EAAE;QACLxB,MAAM,EAAE,aAAa;QACrBP,KAAK,EAAE,QAAQ;QACfgC,WAAW,EAAE,wCAAwC;QACrDJ,MAAM,EAAEA,MAAM;MAChB,CAAC;MAEDK,WAAW,EAAE;QACX5B,IAAI,EAAE,QAAQ;QACdL,KAAK,EAAE,aAAa;QACpB8B,OAAO,EAAE;MACX,CAAC;MACDI,KAAK,EAAE;QACLlC,KAAK,EAAE,WAAW;QAClBO,MAAM,EAAE,OAAO;QACfF,IAAI,EAAE;MACR;IACF,CAAC;IAEDM,QAAQ,EAAE,CAAC,SAAS,EAAE,OAAO;EAC/B,CAAC;AACH,CAAC;AAAC,MA1DIC,UAAU;AA4DhB,eAAeA,UAAU;AAAC;AAAA;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}