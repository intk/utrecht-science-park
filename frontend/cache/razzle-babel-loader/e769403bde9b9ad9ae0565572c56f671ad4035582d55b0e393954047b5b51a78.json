{"ast":null,"code":"import _find from \"lodash/find\";\nimport _reverse from \"lodash/reverse\";\nimport _map from \"lodash/map\";\nimport _concat from \"lodash/concat\";\nvar _jsxFileName = \"/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/History/History.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/**\n * History component.\n * @module components/manage/History/History\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Container, Dropdown, Icon, Segment, Table } from 'semantic-ui-react';\nimport { Portal } from 'react-portal';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { asyncConnect } from '@plone/volto/helpers';\nimport { FormattedDate, Icon as IconNext, Toolbar, Forbidden, Unauthorized } from '@plone/volto/components';\nimport { getHistory, revertHistory, listActions } from '@plone/volto/actions';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport backSVG from '@plone/volto/icons/back.svg';\nconst messages = defineMessages({\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  history: {\n    \"id\": \"History\",\n    \"defaultMessage\": \"History\"\n  }\n});\n\n/**\n * History class.\n * @class History\n * @extends Component\n */\nclass History extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Workflow\n   */\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"processHistoryEntries\", () => {\n      // Getting the history entries from the props\n      // No clue why the reverse(concat()) is necessary\n      const entries = _reverse(_concat(this.props.entries));\n      let title = entries.length > 0 ? entries[0].state_title : '';\n      for (let x = 1; x < entries.length; x += 1) {\n        entries[x].prev_state_title = title;\n        title = entries[x].state_title || title;\n      }\n      // We reverse them again\n      _reverse(entries);\n\n      // We identify the latest 'versioning' entry and mark it\n      const current_version = _find(entries, item => item.type === 'versioning');\n      if (current_version) {\n        current_version.is_current = true;\n      }\n      return entries;\n    });\n    this.onRevert = this.onRevert.bind(this);\n    this.state = {\n      isClient: false\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getHistory(getBaseUrl(this.props.pathname));\n    this.setState({\n      isClient: true\n    });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.revertRequest.loading && nextProps.revertRequest.loaded) {\n      this.props.getHistory(getBaseUrl(this.props.pathname));\n    }\n  }\n\n  /**\n   * On revert\n   * @method onRevert\n   * @param {object} event Event object\n   * @param {number} value Value\n   * @returns {undefined}\n   */\n  onRevert(event, {\n    value\n  }) {\n    this.props.revertHistory(getBaseUrl(this.props.pathname), value);\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const historyAction = _find(this.props.objectActions, {\n      id: 'history'\n    });\n    const entries = this.processHistoryEntries();\n    return !historyAction ? __jsx(React.Fragment, null, this.props.token ? __jsx(Forbidden, {\n      pathname: this.props.pathname,\n      staticContext: this.props.staticContext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }) : __jsx(Unauthorized, {\n      pathname: this.props.pathname,\n      staticContext: this.props.staticContext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    })) : __jsx(Container, {\n      id: \"page-history\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.history),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }), __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, __jsx(Segment, {\n      className: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"History of {title}\",\n      defaultMessage: \"History of {title}\",\n      values: {\n        title: __jsx(\"q\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 24\n          }\n        }, this.props.title)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    })), __jsx(Segment, {\n      secondary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"You can view the history of your item below.\",\n      defaultMessage: \"You can view the history of your item below.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    })), __jsx(Table, {\n      selectable: true,\n      compact: true,\n      singleLine: true,\n      attached: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }, __jsx(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, __jsx(Table.HeaderCell, {\n      width: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"History Version Number\",\n      defaultMessage: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }\n    })), __jsx(Table.HeaderCell, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"What\",\n      defaultMessage: \"What\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 19\n      }\n    })), __jsx(Table.HeaderCell, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Who\",\n      defaultMessage: \"Who\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    })), __jsx(Table.HeaderCell, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"When\",\n      defaultMessage: \"When\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    })), __jsx(Table.HeaderCell, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Change Note\",\n      defaultMessage: \"Change Note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 19\n      }\n    })), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }))), __jsx(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, _map(entries, entry => __jsx(Table.Row, {\n      key: entry.time,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 19\n      }\n    }, 'version' in entry && entry.version > 0 && __jsx(Link, {\n      className: \"item\",\n      to: `${getBaseUrl(this.props.pathname)}/diff?one=${entry.version - 1}&two=${entry.version}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 23\n      }\n    }, entry.version) || __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 27\n      }\n    }, entry.version)), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 19\n      }\n    }, 'version' in entry && entry.version > 0 && __jsx(Link, {\n      className: \"item\",\n      to: `${getBaseUrl(this.props.pathname)}/diff?one=${entry.version - 1}&two=${entry.version}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 23\n      }\n    }, entry.transition_title) || __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 23\n      }\n    }, entry.transition_title, entry.type === 'workflow' && ` (${entry.action ? `${entry.prev_state_title} → ` : ''}${entry.state_title})`)), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 19\n      }\n    }, entry.actor.fullname), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedDate, {\n      date: entry.time,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    })), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    }, entry.comments), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 19\n      }\n    }, entry.type === 'versioning' && __jsx(Dropdown, {\n      icon: \"ellipsis horizontal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 23\n      }\n    }, __jsx(Dropdown.Menu, {\n      className: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 25\n      }\n    }, 'version' in entry && entry.version > 0 && __jsx(Link, {\n      className: \"item\",\n      to: `${getBaseUrl(this.props.pathname)}/diff?one=${entry.version - 1}&two=${entry.version}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 29\n      }\n    }, __jsx(Icon, {\n      name: \"copy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 31\n      }\n    }), ' ', __jsx(FormattedMessage, {\n      id: \"View changes\",\n      defaultMessage: \"View changes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 31\n      }\n    })), 'version' in entry && __jsx(Link, {\n      className: \"item\",\n      to: `${getBaseUrl(this.props.pathname)}?version=${entry.version}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 29\n      }\n    }, __jsx(Icon, {\n      name: \"eye\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 31\n      }\n    }), ' ', __jsx(FormattedMessage, {\n      id: \"View this revision\",\n      defaultMessage: \"View this revision\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 31\n      }\n    })), 'version' in entry && entry.may_revert && !entry.is_current && __jsx(Dropdown.Item, {\n      value: entry.version,\n      onClick: this.onRevert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 31\n      }\n    }, __jsx(Icon, {\n      name: \"undo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 33\n      }\n    }), ' ', __jsx(FormattedMessage, {\n      id: \"Revert to this revision\",\n      defaultMessage: \"Revert to this revision\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 33\n      }\n    })))))))))), this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('toolbar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }\n    }, __jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(Link, {\n        to: `${getBaseUrl(this.props.pathname)}`,\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 17\n        }\n      }, __jsx(IconNext, {\n        name: backSVG,\n        className: \"contents circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }\n    })));\n  }\n}\n_defineProperty(History, \"propTypes\", {\n  getHistory: PropTypes.func.isRequired,\n  revertHistory: PropTypes.func.isRequired,\n  revertRequest: PropTypes.shape({\n    loaded: PropTypes.bool,\n    loading: PropTypes.bool\n  }).isRequired,\n  pathname: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.shape({\n    transition_title: PropTypes.string,\n    type: PropTypes.string,\n    action: PropTypes.string,\n    state_title: PropTypes.string,\n    time: PropTypes.string,\n    comments: PropTypes.string,\n    actor: PropTypes.shape({\n      fullname: PropTypes.string\n    })\n  })).isRequired,\n  title: PropTypes.string.isRequired\n});\nexport default compose(injectIntl, asyncConnect([{\n  key: 'actions',\n  // Dispatch async/await to make the operation syncronous, otherwise it returns\n  // before the promise is resolved\n  promise: async ({\n    location,\n    store: {\n      dispatch\n    }\n  }) => await dispatch(listActions(getBaseUrl(location.pathname)))\n}]), connect((state, props) => {\n  var _state$content$data;\n  return {\n    objectActions: state.actions.actions.object,\n    token: state.userSession.token,\n    entries: state.history.entries,\n    pathname: props.location.pathname,\n    title: (_state$content$data = state.content.data) === null || _state$content$data === void 0 ? void 0 : _state$content$data.title,\n    revertRequest: state.history.revert\n  };\n}, {\n  getHistory,\n  revertHistory\n}))(History);","map":{"version":3,"names":["React","Component","PropTypes","Helmet","Link","connect","compose","Container","Dropdown","Icon","Segment","Table","Portal","FormattedMessage","defineMessages","injectIntl","asyncConnect","FormattedDate","IconNext","Toolbar","Forbidden","Unauthorized","getHistory","revertHistory","listActions","getBaseUrl","backSVG","messages","back","history","History","constructor","props","entries","title","length","state_title","x","prev_state_title","current_version","item","type","is_current","onRevert","bind","state","isClient","componentDidMount","pathname","setState","UNSAFE_componentWillReceiveProps","nextProps","revertRequest","loading","loaded","event","value","render","historyAction","objectActions","id","processHistoryEntries","token","staticContext","intl","formatMessage","entry","time","version","transition_title","action","actor","fullname","comments","may_revert","document","getElementById","func","isRequired","shape","bool","string","arrayOf","key","promise","location","store","dispatch","actions","object","userSession","content","data","revert"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/components/manage/History/History.jsx"],"sourcesContent":["/**\n * History component.\n * @module components/manage/History/History\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Container, Dropdown, Icon, Segment, Table } from 'semantic-ui-react';\nimport { concat, map, reverse, find } from 'lodash';\nimport { Portal } from 'react-portal';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { asyncConnect } from '@plone/volto/helpers';\n\nimport {\n  FormattedDate,\n  Icon as IconNext,\n  Toolbar,\n  Forbidden,\n  Unauthorized,\n} from '@plone/volto/components';\nimport { getHistory, revertHistory, listActions } from '@plone/volto/actions';\nimport { getBaseUrl } from '@plone/volto/helpers';\n\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  history: {\n    id: 'History',\n    defaultMessage: 'History',\n  },\n});\n\n/**\n * History class.\n * @class History\n * @extends Component\n */\nclass History extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getHistory: PropTypes.func.isRequired,\n    revertHistory: PropTypes.func.isRequired,\n    revertRequest: PropTypes.shape({\n      loaded: PropTypes.bool,\n      loading: PropTypes.bool,\n    }).isRequired,\n    pathname: PropTypes.string.isRequired,\n    entries: PropTypes.arrayOf(\n      PropTypes.shape({\n        transition_title: PropTypes.string,\n        type: PropTypes.string,\n        action: PropTypes.string,\n        state_title: PropTypes.string,\n        time: PropTypes.string,\n        comments: PropTypes.string,\n        actor: PropTypes.shape({ fullname: PropTypes.string }),\n      }),\n    ).isRequired,\n    title: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Workflow\n   */\n  constructor(props) {\n    super(props);\n    this.onRevert = this.onRevert.bind(this);\n    this.state = { isClient: false };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getHistory(getBaseUrl(this.props.pathname));\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.revertRequest.loading && nextProps.revertRequest.loaded) {\n      this.props.getHistory(getBaseUrl(this.props.pathname));\n    }\n  }\n\n  /**\n   * On revert\n   * @method onRevert\n   * @param {object} event Event object\n   * @param {number} value Value\n   * @returns {undefined}\n   */\n  onRevert(event, { value }) {\n    this.props.revertHistory(getBaseUrl(this.props.pathname), value);\n  }\n\n  processHistoryEntries = () => {\n    // Getting the history entries from the props\n    // No clue why the reverse(concat()) is necessary\n    const entries = reverse(concat(this.props.entries));\n    let title = entries.length > 0 ? entries[0].state_title : '';\n    for (let x = 1; x < entries.length; x += 1) {\n      entries[x].prev_state_title = title;\n      title = entries[x].state_title || title;\n    }\n    // We reverse them again\n    reverse(entries);\n\n    // We identify the latest 'versioning' entry and mark it\n    const current_version = find(entries, (item) => item.type === 'versioning');\n    if (current_version) {\n      current_version.is_current = true;\n    }\n    return entries;\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const historyAction = find(this.props.objectActions, {\n      id: 'history',\n    });\n    const entries = this.processHistoryEntries();\n\n    return !historyAction ? (\n      <>\n        {this.props.token ? (\n          <Forbidden\n            pathname={this.props.pathname}\n            staticContext={this.props.staticContext}\n          />\n        ) : (\n          <Unauthorized\n            pathname={this.props.pathname}\n            staticContext={this.props.staticContext}\n          />\n        )}\n      </>\n    ) : (\n      <Container id=\"page-history\">\n        <Helmet title={this.props.intl.formatMessage(messages.history)} />\n        <Segment.Group raised>\n          <Segment className=\"primary\">\n            <FormattedMessage\n              id=\"History of {title}\"\n              defaultMessage=\"History of {title}\"\n              values={{\n                title: <q>{this.props.title}</q>,\n              }}\n            />\n          </Segment>\n          <Segment secondary>\n            <FormattedMessage\n              id=\"You can view the history of your item below.\"\n              defaultMessage=\"You can view the history of your item below.\"\n            />\n          </Segment>\n          <Table selectable compact singleLine attached>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell width={1}>\n                  <FormattedMessage\n                    id=\"History Version Number\"\n                    defaultMessage=\"#\"\n                  />\n                </Table.HeaderCell>\n                <Table.HeaderCell width={4}>\n                  <FormattedMessage id=\"What\" defaultMessage=\"What\" />\n                </Table.HeaderCell>\n                <Table.HeaderCell width={4}>\n                  <FormattedMessage id=\"Who\" defaultMessage=\"Who\" />\n                </Table.HeaderCell>\n                <Table.HeaderCell width={4}>\n                  <FormattedMessage id=\"When\" defaultMessage=\"When\" />\n                </Table.HeaderCell>\n                <Table.HeaderCell width={4}>\n                  <FormattedMessage\n                    id=\"Change Note\"\n                    defaultMessage=\"Change Note\"\n                  />\n                </Table.HeaderCell>\n                <Table.HeaderCell />\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {map(entries, (entry) => (\n                <Table.Row key={entry.time}>\n                  <Table.Cell>\n                    {('version' in entry && entry.version > 0 && (\n                      <Link\n                        className=\"item\"\n                        to={`${getBaseUrl(this.props.pathname)}/diff?one=${\n                          entry.version - 1\n                        }&two=${entry.version}`}\n                      >\n                        {entry.version}\n                      </Link>\n                    )) || <span>{entry.version}</span>}\n                  </Table.Cell>\n                  <Table.Cell>\n                    {('version' in entry && entry.version > 0 && (\n                      <Link\n                        className=\"item\"\n                        to={`${getBaseUrl(this.props.pathname)}/diff?one=${\n                          entry.version - 1\n                        }&two=${entry.version}`}\n                      >\n                        {entry.transition_title}\n                      </Link>\n                    )) || (\n                      <span>\n                        {entry.transition_title}\n                        {entry.type === 'workflow' &&\n                          ` (${\n                            entry.action ? `${entry.prev_state_title} → ` : ''\n                          }${entry.state_title})`}\n                      </span>\n                    )}\n                  </Table.Cell>\n                  <Table.Cell>{entry.actor.fullname}</Table.Cell>\n                  <Table.Cell>\n                    <FormattedDate date={entry.time} />\n                  </Table.Cell>\n                  <Table.Cell>{entry.comments}</Table.Cell>\n                  <Table.Cell>\n                    {entry.type === 'versioning' && (\n                      <Dropdown icon=\"ellipsis horizontal\">\n                        <Dropdown.Menu className=\"left\">\n                          {'version' in entry && entry.version > 0 && (\n                            <Link\n                              className=\"item\"\n                              to={`${getBaseUrl(\n                                this.props.pathname,\n                              )}/diff?one=${entry.version - 1}&two=${\n                                entry.version\n                              }`}\n                            >\n                              <Icon name=\"copy\" />{' '}\n                              <FormattedMessage\n                                id=\"View changes\"\n                                defaultMessage=\"View changes\"\n                              />\n                            </Link>\n                          )}\n                          {'version' in entry && (\n                            <Link\n                              className=\"item\"\n                              to={`${getBaseUrl(this.props.pathname)}?version=${\n                                entry.version\n                              }`}\n                            >\n                              <Icon name=\"eye\" />{' '}\n                              <FormattedMessage\n                                id=\"View this revision\"\n                                defaultMessage=\"View this revision\"\n                              />\n                            </Link>\n                          )}\n                          {'version' in entry &&\n                            entry.may_revert &&\n                            !entry.is_current && (\n                              <Dropdown.Item\n                                value={entry.version}\n                                onClick={this.onRevert}\n                              >\n                                <Icon name=\"undo\" />{' '}\n                                <FormattedMessage\n                                  id=\"Revert to this revision\"\n                                  defaultMessage=\"Revert to this revision\"\n                                />\n                              </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                      </Dropdown>\n                    )}\n                  </Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n        </Segment.Group>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link\n                  to={`${getBaseUrl(this.props.pathname)}`}\n                  className=\"item\"\n                >\n                  <IconNext\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  asyncConnect([\n    {\n      key: 'actions',\n      // Dispatch async/await to make the operation syncronous, otherwise it returns\n      // before the promise is resolved\n      promise: async ({ location, store: { dispatch } }) =>\n        await dispatch(listActions(getBaseUrl(location.pathname))),\n    },\n  ]),\n  connect(\n    (state, props) => ({\n      objectActions: state.actions.actions.object,\n      token: state.userSession.token,\n      entries: state.history.entries,\n      pathname: props.location.pathname,\n      title: state.content.data?.title,\n      revertRequest: state.history.revert,\n    }),\n    { getHistory, revertHistory },\n  ),\n)(History);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Back","defaultMessage":"Back"},{"id":"History","defaultMessage":"History"},{"id":"History of {title}","defaultMessage":"History of {title}"},{"id":"You can view the history of your item below.","defaultMessage":"You can view the history of your item below."},{"id":"History Version Number","defaultMessage":"#"},{"id":"What","defaultMessage":"What"},{"id":"Who","defaultMessage":"Who"},{"id":"When","defaultMessage":"When"},{"id":"Change Note","defaultMessage":"Change Note"},{"id":"View changes","defaultMessage":"View changes"},{"id":"View this revision","defaultMessage":"View this revision"},{"id":"Revert to this revision","defaultMessage":"Revert to this revision"}]}},"sourceType":"module","externalDependencies":[]}