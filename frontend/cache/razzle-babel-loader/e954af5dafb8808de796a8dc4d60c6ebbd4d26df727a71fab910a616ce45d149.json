{"ast":null,"code":"import _isArray from \"lodash/isArray\";\nclass Config {\n  constructor() {\n    if (!Config.instance) {\n      this._data = {};\n      Config.instance = this;\n    }\n    return Config.instance;\n  }\n  set(registry, item) {\n    this._data[registry] = item;\n  }\n  get(registry) {\n    return this._data[registry];\n  }\n  get settings() {\n    return this._data.settings;\n  }\n  set settings(settings) {\n    this._data.settings = settings;\n  }\n  get experimental() {\n    return this._data.experimental;\n  }\n  set experimental(experimental) {\n    this._data.experimental = experimental;\n  }\n  get blocks() {\n    return this._data.blocks;\n  }\n  set blocks(blocks) {\n    this._data.blocks = blocks;\n  }\n  get views() {\n    return this._data.views;\n  }\n  set views(views) {\n    this._data.views = views;\n  }\n  get widgets() {\n    return this._data.widgets;\n  }\n  set widgets(widgets) {\n    this._data.widgets = widgets;\n  }\n  get addonReducers() {\n    return this._data.addonReducers;\n  }\n  set addonReducers(addonReducers) {\n    this._data.addonReducers = addonReducers;\n  }\n  get addonRoutes() {\n    return this._data.addonRoutes;\n  }\n  set addonRoutes(addonRoutes) {\n    this._data.addonRoutes = addonRoutes;\n  }\n  get slots() {\n    return this._data.slots;\n  }\n  set slots(slots) {\n    this._data.slots = slots;\n  }\n  get components() {\n    return this._data.components;\n  }\n  set components(components) {\n    this._data.components = components;\n  }\n  getComponent(_ref) {\n    let {\n      name,\n      dependencies = ''\n    } = _ref;\n    if (typeof arguments[0] === 'object') {\n      let depsString;\n      if (dependencies && _isArray(dependencies)) {\n        depsString = dependencies.join('+');\n      } else {\n        depsString = dependencies;\n      }\n      const componentName = `${name}${depsString ? `|${depsString}` : ''}`;\n      return this._data.components[componentName] || {};\n    } else {\n      // Shortcut notation, accepting a lonely string as argument\n      return this._data.components[arguments[0]] || {};\n    }\n  }\n  registerComponent(_ref2) {\n    let {\n      name,\n      component,\n      dependencies = ''\n    } = _ref2;\n    let depsString;\n    if (!component) {\n      throw new Error('No component provided');\n    } else {\n      if (dependencies && _isArray(dependencies)) {\n        depsString = dependencies.join('+');\n      } else {\n        depsString = dependencies;\n      }\n      const componentName = `${name}${depsString ? `|${depsString}` : ''}`;\n      this._data.components[componentName] = {\n        component\n      };\n      // Try to set a displayName (useful for React dev tools) for the registered component\n      // Only if it's a function and it's not set previously\n      try {\n        const displayName = this._data.components[componentName].component.displayName;\n        if (!displayName && typeof this._data.components[componentName].component === 'function') {\n          this._data.components[componentName].component.displayName = name;\n        }\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.warning(`Not setting the component displayName because ${error}`);\n      }\n    }\n  }\n}\nconst instance = new Config();\nObject.freeze(instance);\nexport default instance;","map":{"version":3,"names":["Config","constructor","instance","_data","set","registry","item","get","settings","experimental","blocks","views","widgets","addonReducers","addonRoutes","slots","components","getComponent","name","dependencies","arguments","depsString","join","componentName","registerComponent","component","Error","displayName","error","console","warning","Object","freeze"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/registry.js"],"sourcesContent":["import { isArray } from 'lodash';\n\nclass Config {\n  constructor() {\n    if (!Config.instance) {\n      this._data = {};\n      Config.instance = this;\n    }\n\n    return Config.instance;\n  }\n\n  set(registry, item) {\n    this._data[registry] = item;\n  }\n\n  get(registry) {\n    return this._data[registry];\n  }\n\n  get settings() {\n    return this._data.settings;\n  }\n\n  set settings(settings) {\n    this._data.settings = settings;\n  }\n\n  get experimental() {\n    return this._data.experimental;\n  }\n\n  set experimental(experimental) {\n    this._data.experimental = experimental;\n  }\n\n  get blocks() {\n    return this._data.blocks;\n  }\n\n  set blocks(blocks) {\n    this._data.blocks = blocks;\n  }\n\n  get views() {\n    return this._data.views;\n  }\n\n  set views(views) {\n    this._data.views = views;\n  }\n\n  get widgets() {\n    return this._data.widgets;\n  }\n\n  set widgets(widgets) {\n    this._data.widgets = widgets;\n  }\n\n  get addonReducers() {\n    return this._data.addonReducers;\n  }\n\n  set addonReducers(addonReducers) {\n    this._data.addonReducers = addonReducers;\n  }\n\n  get addonRoutes() {\n    return this._data.addonRoutes;\n  }\n\n  set addonRoutes(addonRoutes) {\n    this._data.addonRoutes = addonRoutes;\n  }\n\n  get slots() {\n    return this._data.slots;\n  }\n\n  set slots(slots) {\n    this._data.slots = slots;\n  }\n\n  get components() {\n    return this._data.components;\n  }\n\n  set components(components) {\n    this._data.components = components;\n  }\n\n  getComponent({ name, dependencies = '' }) {\n    if (typeof arguments[0] === 'object') {\n      let depsString;\n      if (dependencies && isArray(dependencies)) {\n        depsString = dependencies.join('+');\n      } else {\n        depsString = dependencies;\n      }\n      const componentName = `${name}${depsString ? `|${depsString}` : ''}`;\n\n      return this._data.components[componentName] || {};\n    } else {\n      // Shortcut notation, accepting a lonely string as argument\n      return this._data.components[arguments[0]] || {};\n    }\n  }\n\n  registerComponent({ name, component, dependencies = '' }) {\n    let depsString;\n    if (!component) {\n      throw new Error('No component provided');\n    } else {\n      if (dependencies && isArray(dependencies)) {\n        depsString = dependencies.join('+');\n      } else {\n        depsString = dependencies;\n      }\n      const componentName = `${name}${depsString ? `|${depsString}` : ''}`;\n\n      this._data.components[componentName] = { component };\n      // Try to set a displayName (useful for React dev tools) for the registered component\n      // Only if it's a function and it's not set previously\n      try {\n        const displayName = this._data.components[componentName].component\n          .displayName;\n\n        if (\n          !displayName &&\n          typeof this._data.components[componentName].component === 'function'\n        ) {\n          this._data.components[componentName].component.displayName = name;\n        }\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.warning(\n          `Not setting the component displayName because ${error}`,\n        );\n      }\n    }\n  }\n}\n\nconst instance = new Config();\nObject.freeze(instance);\n\nexport default instance;\n"],"mappings":";AAEA,MAAMA,MAAM,CAAC;EACXC,WAAW,GAAG;IACZ,IAAI,CAACD,MAAM,CAACE,QAAQ,EAAE;MACpB,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;MACfH,MAAM,CAACE,QAAQ,GAAG,IAAI;IACxB;IAEA,OAAOF,MAAM,CAACE,QAAQ;EACxB;EAEAE,GAAG,CAACC,QAAQ,EAAEC,IAAI,EAAE;IAClB,IAAI,CAACH,KAAK,CAACE,QAAQ,CAAC,GAAGC,IAAI;EAC7B;EAEAC,GAAG,CAACF,QAAQ,EAAE;IACZ,OAAO,IAAI,CAACF,KAAK,CAACE,QAAQ,CAAC;EAC7B;EAEA,IAAIG,QAAQ,GAAG;IACb,OAAO,IAAI,CAACL,KAAK,CAACK,QAAQ;EAC5B;EAEA,IAAIA,QAAQ,CAACA,QAAQ,EAAE;IACrB,IAAI,CAACL,KAAK,CAACK,QAAQ,GAAGA,QAAQ;EAChC;EAEA,IAAIC,YAAY,GAAG;IACjB,OAAO,IAAI,CAACN,KAAK,CAACM,YAAY;EAChC;EAEA,IAAIA,YAAY,CAACA,YAAY,EAAE;IAC7B,IAAI,CAACN,KAAK,CAACM,YAAY,GAAGA,YAAY;EACxC;EAEA,IAAIC,MAAM,GAAG;IACX,OAAO,IAAI,CAACP,KAAK,CAACO,MAAM;EAC1B;EAEA,IAAIA,MAAM,CAACA,MAAM,EAAE;IACjB,IAAI,CAACP,KAAK,CAACO,MAAM,GAAGA,MAAM;EAC5B;EAEA,IAAIC,KAAK,GAAG;IACV,OAAO,IAAI,CAACR,KAAK,CAACQ,KAAK;EACzB;EAEA,IAAIA,KAAK,CAACA,KAAK,EAAE;IACf,IAAI,CAACR,KAAK,CAACQ,KAAK,GAAGA,KAAK;EAC1B;EAEA,IAAIC,OAAO,GAAG;IACZ,OAAO,IAAI,CAACT,KAAK,CAACS,OAAO;EAC3B;EAEA,IAAIA,OAAO,CAACA,OAAO,EAAE;IACnB,IAAI,CAACT,KAAK,CAACS,OAAO,GAAGA,OAAO;EAC9B;EAEA,IAAIC,aAAa,GAAG;IAClB,OAAO,IAAI,CAACV,KAAK,CAACU,aAAa;EACjC;EAEA,IAAIA,aAAa,CAACA,aAAa,EAAE;IAC/B,IAAI,CAACV,KAAK,CAACU,aAAa,GAAGA,aAAa;EAC1C;EAEA,IAAIC,WAAW,GAAG;IAChB,OAAO,IAAI,CAACX,KAAK,CAACW,WAAW;EAC/B;EAEA,IAAIA,WAAW,CAACA,WAAW,EAAE;IAC3B,IAAI,CAACX,KAAK,CAACW,WAAW,GAAGA,WAAW;EACtC;EAEA,IAAIC,KAAK,GAAG;IACV,OAAO,IAAI,CAACZ,KAAK,CAACY,KAAK;EACzB;EAEA,IAAIA,KAAK,CAACA,KAAK,EAAE;IACf,IAAI,CAACZ,KAAK,CAACY,KAAK,GAAGA,KAAK;EAC1B;EAEA,IAAIC,UAAU,GAAG;IACf,OAAO,IAAI,CAACb,KAAK,CAACa,UAAU;EAC9B;EAEA,IAAIA,UAAU,CAACA,UAAU,EAAE;IACzB,IAAI,CAACb,KAAK,CAACa,UAAU,GAAGA,UAAU;EACpC;EAEAC,YAAY,OAA8B;IAAA,IAA7B;MAAEC,IAAI;MAAEC,YAAY,GAAG;IAAG,CAAC;IACtC,IAAI,OAAOC,SAAS,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;MACpC,IAAIC,UAAU;MACd,IAAIF,YAAY,IAAI,SAAQA,YAAY,CAAC,EAAE;QACzCE,UAAU,GAAGF,YAAY,CAACG,IAAI,CAAC,GAAG,CAAC;MACrC,CAAC,MAAM;QACLD,UAAU,GAAGF,YAAY;MAC3B;MACA,MAAMI,aAAa,GAAI,GAAEL,IAAK,GAAEG,UAAU,GAAI,IAAGA,UAAW,EAAC,GAAG,EAAG,EAAC;MAEpE,OAAO,IAAI,CAAClB,KAAK,CAACa,UAAU,CAACO,aAAa,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC,MAAM;MACL;MACA,OAAO,IAAI,CAACpB,KAAK,CAACa,UAAU,CAACI,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAClD;EACF;EAEAI,iBAAiB,QAAyC;IAAA,IAAxC;MAAEN,IAAI;MAAEO,SAAS;MAAEN,YAAY,GAAG;IAAG,CAAC;IACtD,IAAIE,UAAU;IACd,IAAI,CAACI,SAAS,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C,CAAC,MAAM;MACL,IAAIP,YAAY,IAAI,SAAQA,YAAY,CAAC,EAAE;QACzCE,UAAU,GAAGF,YAAY,CAACG,IAAI,CAAC,GAAG,CAAC;MACrC,CAAC,MAAM;QACLD,UAAU,GAAGF,YAAY;MAC3B;MACA,MAAMI,aAAa,GAAI,GAAEL,IAAK,GAAEG,UAAU,GAAI,IAAGA,UAAW,EAAC,GAAG,EAAG,EAAC;MAEpE,IAAI,CAAClB,KAAK,CAACa,UAAU,CAACO,aAAa,CAAC,GAAG;QAAEE;MAAU,CAAC;MACpD;MACA;MACA,IAAI;QACF,MAAME,WAAW,GAAG,IAAI,CAACxB,KAAK,CAACa,UAAU,CAACO,aAAa,CAAC,CAACE,SAAS,CAC/DE,WAAW;QAEd,IACE,CAACA,WAAW,IACZ,OAAO,IAAI,CAACxB,KAAK,CAACa,UAAU,CAACO,aAAa,CAAC,CAACE,SAAS,KAAK,UAAU,EACpE;UACA,IAAI,CAACtB,KAAK,CAACa,UAAU,CAACO,aAAa,CAAC,CAACE,SAAS,CAACE,WAAW,GAAGT,IAAI;QACnE;MACF,CAAC,CAAC,OAAOU,KAAK,EAAE;QACd;QACAC,OAAO,CAACC,OAAO,CACZ,iDAAgDF,KAAM,EAAC,CACzD;MACH;IACF;EACF;AACF;AAEA,MAAM1B,QAAQ,GAAG,IAAIF,MAAM,EAAE;AAC7B+B,MAAM,CAACC,MAAM,CAAC9B,QAAQ,CAAC;AAEvB,eAAeA,QAAQ"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}