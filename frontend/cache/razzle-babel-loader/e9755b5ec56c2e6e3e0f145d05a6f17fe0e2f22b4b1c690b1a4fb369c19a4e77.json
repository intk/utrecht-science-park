{"ast":null,"code":"import config from '@plone/volto/registry';\nimport { matchPath } from 'react-router';\nconst blacklistRoutes = _ref => {\n  let {\n    dispatch,\n    getState\n  } = _ref;\n  return next => action => {\n    if (typeof action === 'function') {\n      return next(action);\n    }\n    switch (action.type) {\n      case '@@router/LOCATION_CHANGE':\n        const {\n          pathname\n        } = action.payload.location;\n        const {\n          externalRoutes = []\n        } = config.settings;\n        const route = externalRoutes.find(route => matchPath(pathname, route.match));\n        if (!route) {\n          return next(action);\n        } else {\n          window.location.replace(route.url ? route.url(action.payload) : pathname);\n        }\n        break;\n      default:\n        return next(action);\n    }\n  };\n};\nexport default blacklistRoutes;","map":{"version":3,"names":["config","matchPath","blacklistRoutes","dispatch","getState","next","action","type","pathname","payload","location","externalRoutes","settings","route","find","match","window","replace","url"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/@plone/volto/src/middleware/blacklistRoutes.js"],"sourcesContent":["import config from '@plone/volto/registry';\nimport { matchPath } from 'react-router';\n\nconst blacklistRoutes = ({ dispatch, getState }) => (next) => (action) => {\n  if (typeof action === 'function') {\n    return next(action);\n  }\n\n  switch (action.type) {\n    case '@@router/LOCATION_CHANGE':\n      const { pathname } = action.payload.location;\n      const { externalRoutes = [] } = config.settings;\n\n      const route = externalRoutes.find((route) =>\n        matchPath(pathname, route.match),\n      );\n\n      if (!route) {\n        return next(action);\n      } else {\n        window.location.replace(\n          route.url ? route.url(action.payload) : pathname,\n        );\n      }\n      break;\n    default:\n      return next(action);\n  }\n};\n\nexport default blacklistRoutes;\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,uBAAuB;AAC1C,SAASC,SAAS,QAAQ,cAAc;AAExC,MAAMC,eAAe,GAAG;EAAA,IAAC;IAAEC,QAAQ;IAAEC;EAAS,CAAC;EAAA,OAAMC,IAAI,IAAMC,MAAM,IAAK;IACxE,IAAI,OAAOA,MAAM,KAAK,UAAU,EAAE;MAChC,OAAOD,IAAI,CAACC,MAAM,CAAC;IACrB;IAEA,QAAQA,MAAM,CAACC,IAAI;MACjB,KAAK,0BAA0B;QAC7B,MAAM;UAAEC;QAAS,CAAC,GAAGF,MAAM,CAACG,OAAO,CAACC,QAAQ;QAC5C,MAAM;UAAEC,cAAc,GAAG;QAAG,CAAC,GAAGX,MAAM,CAACY,QAAQ;QAE/C,MAAMC,KAAK,GAAGF,cAAc,CAACG,IAAI,CAAED,KAAK,IACtCZ,SAAS,CAACO,QAAQ,EAAEK,KAAK,CAACE,KAAK,CAAC,CACjC;QAED,IAAI,CAACF,KAAK,EAAE;UACV,OAAOR,IAAI,CAACC,MAAM,CAAC;QACrB,CAAC,MAAM;UACLU,MAAM,CAACN,QAAQ,CAACO,OAAO,CACrBJ,KAAK,CAACK,GAAG,GAAGL,KAAK,CAACK,GAAG,CAACZ,MAAM,CAACG,OAAO,CAAC,GAAGD,QAAQ,CACjD;QACH;QACA;MACF;QACE,OAAOH,IAAI,CAACC,MAAM,CAAC;IAAC;EAE1B,CAAC;AAAA;AAED,eAAeJ,eAAe"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}