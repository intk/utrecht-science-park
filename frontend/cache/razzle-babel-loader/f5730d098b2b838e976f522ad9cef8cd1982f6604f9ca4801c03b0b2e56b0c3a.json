{"ast":null,"code":"import { defineMessages } from 'react-intl';\nconst messages = defineMessages({\n  select_noOptionsMessage: {\n    \"id\": \"select_noOptionsMessage\",\n    \"defaultMessage\": \"No options\"\n  },\n  risultato: {\n    \"id\": \"select_risultato\",\n    \"defaultMessage\": \"result\"\n  },\n  risultati: {\n    \"id\": \"select_risultati\",\n    \"defaultMessage\": \"results\"\n  },\n  ay11_up_down: {\n    \"id\": \"ay11_Use Up and Down to choose options\",\n    \"defaultMessage\": \"Use Up and Down to choose options\"\n  },\n  ay11_select_option: {\n    \"id\": \"ay11_select_press Enter to select the currently focused option\",\n    \"defaultMessage\": \"press Enter to select the currently focused option\"\n  },\n  ay11_exit_menu: {\n    \"id\": \"ay11_select_press Escape to exit the menu\",\n    \"defaultMessage\": \"press Escape to exit the menu\"\n  },\n  ay11_tab_select_and_exit: {\n    \"id\": \"ay11_select__press Tab to select the option and exit the menu\",\n    \"defaultMessage\": \"press Tab to select the option and exit the menu\"\n  },\n  ay11_is_focused: {\n    \"id\": \"ay11_select_is_focused\",\n    \"defaultMessage\": \"is_focused\"\n  },\n  ay11_type_to_refine_list: {\n    \"id\": \"ay11_select__type to refine list\",\n    \"defaultMessage\": \"type to refine list\"\n  },\n  ay11_open_menu: {\n    \"id\": \"ay11_select_press Down to open the menu\",\n    \"defaultMessage\": \"press Down to open the menu\"\n  },\n  ay11_multi_select_focus_values: {\n    \"id\": \"ay11_select_press left to focus selected values\",\n    \"defaultMessage\": \"press left to focus selected values\"\n  },\n  ay11_toggle_values: {\n    \"id\": \"ay11_select_Use left and right to toggle between focused values, press Backspace to remove the currently focused value\",\n    \"defaultMessage\": \"Use left and right to toggle between focused values, press Backspace to remove the currently focused value\"\n  },\n  ay11_option: {\n    \"id\": \"ay11_select option\",\n    \"defaultMessage\": \"option\"\n  },\n  ay11_option_deselected: {\n    \"id\": \"ay11_select deselected\",\n    \"defaultMessage\": \"deselected\"\n  },\n  ay11_option_disabled: {\n    \"id\": \"ay11_select is disabled. Select another option.\",\n    \"defaultMessage\": \"is disabled. Select another option.\"\n  },\n  ay11_option_selected: {\n    \"id\": \"ay11_select selected\",\n    \"defaultMessage\": \"selected\"\n  },\n  ay11_value: {\n    \"id\": \"ay11_select value\",\n    \"defaultMessage\": \"value\"\n  },\n  ay11_focused: {\n    \"id\": \"ay11_select focused\",\n    \"defaultMessage\": \"focused\"\n  },\n  ay11_disabled: {\n    \"id\": \"ay11_select disabled\",\n    \"defaultMessage\": \"disabled\"\n  },\n  ay11_for_search_term: {\n    \"id\": \"ay11_select for search term\",\n    \"defaultMessage\": \"for search term\"\n  },\n  results: {\n    \"id\": \"ay11_select results\",\n    \"defaultMessage\": \"results\"\n  },\n  result: {\n    \"id\": \"ay11_select result\",\n    \"defaultMessage\": \"result\"\n  },\n  availables: {\n    \"id\": \"ay11_select availables\",\n    \"defaultMessage\": \"availables\"\n  },\n  available: {\n    \"id\": \"ay11_select available\",\n    \"defaultMessage\": \"available\"\n  }\n});\nexport const getReactSelectAriaLiveMessages = intl => {\n  return {\n    guidance: props => {\n      const {\n        isSearchable,\n        isMulti,\n        isDisabled,\n        tabSelectsValue,\n        context\n      } = props;\n      switch (context) {\n        case 'menu':\n          return `${intl.formatMessage(messages.ay11_up_down)}${isDisabled ? '' : `, ${intl.formatMessage(messages.ay11_select_option)}`}, ${intl.formatMessage(messages.ay11_exit_menu)}${tabSelectsValue ? `, ${intl.formatMessage(messages.ay11_tab_select_and_exit)}` : ''}.`;\n        case 'input':\n          return `${props['aria-label'] || 'Select'} ${intl.formatMessage(messages.ay11_is_focused)} ${isSearchable ? `,${intl.formatMessage(messages.ay11_type_to_refine_list)}` : ''}, ${intl.formatMessage(messages.ay11_open_menu)}, ${isMulti ? ` ${intl.formatMessage(messages.ay11_multi_select_focus_values)}` : ''}`;\n        case 'value':\n          return intl.formatMessage(messages.ay11_toggle_values);\n        default:\n          return '';\n      }\n    },\n    onChange: props => {\n      const {\n        action,\n        label = '',\n        isDisabled\n      } = props;\n      switch (action) {\n        case 'deselect-option':\n        case 'pop-value':\n        case 'remove-value':\n          return `${intl.formatMessage(messages.ay11_option)} ${label}, ${intl.formatMessage(messages.ay11_option_deselected)}.`;\n        case 'select-option':\n          return isDisabled ? `${intl.formatMessage(messages.ay11_option)} ${label} ${intl.formatMessage(messages.ay11_option_disabled)}.` : `${intl.formatMessage(messages.ay11_option)} ${label}, ${intl.formatMessage(messages.ay11_option_selected)}.`;\n        default:\n          return '';\n      }\n    },\n    onFocus: props => {\n      const {\n        context,\n        focused = {},\n        options,\n        label = '',\n        selectValue,\n        isDisabled,\n        isSelected\n      } = props;\n      const getArrayIndex = (arr, item) => arr && arr.length ? `${arr.indexOf(item) + 1} di ${arr.length}` : '';\n      if (context === 'value' && selectValue) {\n        return `${intl.formatMessage(messages.ay11_value)} ${label} ${intl.formatMessage(messages.ay11_focused)}, ${getArrayIndex(selectValue, focused)}.`;\n      }\n      if (context === 'menu') {\n        const disabled = isDisabled ? ` ${intl.formatMessage(messages.ay11_disabled)}` : '';\n        const status = `${isSelected ? intl.formatMessage(messages.ay11_option_selected) : intl.formatMessage(messages.ay11_focused)}${disabled}`;\n        return `${intl.formatMessage(messages.ay11_option)} ${label} ${status}, ${getArrayIndex(options, focused)}.`;\n      }\n      return '';\n    },\n    onFilter: props => {\n      const {\n        inputValue,\n        resultsMessage\n      } = props;\n      return `${resultsMessage}${inputValue ? ` ${intl.formatMessage(messages.ay11_for_search_term)} ` + inputValue : ''}.`;\n    }\n  };\n};\nexport const getReactSelectScreenReaderStatus = intl => _ref => {\n  let {\n    count\n  } = _ref;\n  const results = count !== 1 ? intl.formatMessage(messages.results) : intl.formatMessage(messages.result);\n  const available = count !== 1 ? intl.formatMessage(messages.availables) : intl.formatMessage(messages.available);\n  return `${count} ${results} ${available}`;\n};","map":{"version":3,"names":["defineMessages","messages","select_noOptionsMessage","risultato","risultati","ay11_up_down","ay11_select_option","ay11_exit_menu","ay11_tab_select_and_exit","ay11_is_focused","ay11_type_to_refine_list","ay11_open_menu","ay11_multi_select_focus_values","ay11_toggle_values","ay11_option","ay11_option_deselected","ay11_option_disabled","ay11_option_selected","ay11_value","ay11_focused","ay11_disabled","ay11_for_search_term","results","result","availables","available","getReactSelectAriaLiveMessages","intl","guidance","props","isSearchable","isMulti","isDisabled","tabSelectsValue","context","formatMessage","onChange","action","label","onFocus","focused","options","selectValue","isSelected","getArrayIndex","arr","item","length","indexOf","disabled","status","onFilter","inputValue","resultsMessage","getReactSelectScreenReaderStatus","count"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-form-block/src/helpers/react-select.js"],"sourcesContent":["import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  select_noOptionsMessage: {\n    id: 'select_noOptionsMessage',\n    defaultMessage: 'No options',\n  },\n  risultato: { id: 'select_risultato', defaultMessage: 'result' },\n  risultati: { id: 'select_risultati', defaultMessage: 'results' },\n  ay11_up_down: {\n    id: 'ay11_Use Up and Down to choose options',\n    defaultMessage: 'Use Up and Down to choose options',\n  },\n  ay11_select_option: {\n    id: 'ay11_select_press Enter to select the currently focused option',\n    defaultMessage: 'press Enter to select the currently focused option',\n  },\n  ay11_exit_menu: {\n    id: 'ay11_select_press Escape to exit the menu',\n    defaultMessage: 'press Escape to exit the menu',\n  },\n  ay11_tab_select_and_exit: {\n    id: 'ay11_select__press Tab to select the option and exit the menu',\n    defaultMessage: 'press Tab to select the option and exit the menu',\n  },\n  ay11_is_focused: {\n    id: 'ay11_select_is_focused',\n    defaultMessage: 'is_focused',\n  },\n  ay11_type_to_refine_list: {\n    id: 'ay11_select__type to refine list',\n    defaultMessage: 'type to refine list',\n  },\n  ay11_open_menu: {\n    id: 'ay11_select_press Down to open the menu',\n    defaultMessage: 'press Down to open the menu',\n  },\n  ay11_multi_select_focus_values: {\n    id: 'ay11_select_press left to focus selected values',\n    defaultMessage: 'press left to focus selected values',\n  },\n  ay11_toggle_values: {\n    id:\n      'ay11_select_Use left and right to toggle between focused values, press Backspace to remove the currently focused value',\n    defaultMessage:\n      'Use left and right to toggle between focused values, press Backspace to remove the currently focused value',\n  },\n  ay11_option: {\n    id: 'ay11_select option',\n    defaultMessage: 'option',\n  },\n  ay11_option_deselected: {\n    id: 'ay11_select deselected',\n    defaultMessage: 'deselected',\n  },\n  ay11_option_disabled: {\n    id: 'ay11_select is disabled. Select another option.',\n    defaultMessage: 'is disabled. Select another option.',\n  },\n  ay11_option_selected: {\n    id: 'ay11_select selected',\n    defaultMessage: 'selected',\n  },\n  ay11_value: {\n    id: 'ay11_select value',\n    defaultMessage: 'value',\n  },\n  ay11_focused: {\n    id: 'ay11_select focused',\n    defaultMessage: 'focused',\n  },\n\n  ay11_disabled: {\n    id: 'ay11_select disabled',\n    defaultMessage: 'disabled',\n  },\n  ay11_for_search_term: {\n    id: 'ay11_select for search term',\n    defaultMessage: 'for search term',\n  },\n  results: {\n    id: 'ay11_select results',\n    defaultMessage: 'results',\n  },\n  result: {\n    id: 'ay11_select result',\n    defaultMessage: 'result',\n  },\n  availables: {\n    id: 'ay11_select availables',\n    defaultMessage: 'availables',\n  },\n  available: {\n    id: 'ay11_select available',\n    defaultMessage: 'available',\n  },\n});\n\nexport const getReactSelectAriaLiveMessages = (intl) => {\n  return {\n    guidance: (props) => {\n      const {\n        isSearchable,\n        isMulti,\n        isDisabled,\n        tabSelectsValue,\n        context,\n      } = props;\n      switch (context) {\n        case 'menu':\n          return `${intl.formatMessage(messages.ay11_up_down)}${\n            isDisabled\n              ? ''\n              : `, ${intl.formatMessage(messages.ay11_select_option)}`\n          }, ${intl.formatMessage(messages.ay11_exit_menu)}${\n            tabSelectsValue\n              ? `, ${intl.formatMessage(messages.ay11_tab_select_and_exit)}`\n              : ''\n          }.`;\n        case 'input':\n          return `${props['aria-label'] || 'Select'} ${intl.formatMessage(\n            messages.ay11_is_focused,\n          )} ${\n            isSearchable\n              ? `,${intl.formatMessage(messages.ay11_type_to_refine_list)}`\n              : ''\n          }, ${intl.formatMessage(messages.ay11_open_menu)}, ${\n            isMulti\n              ? ` ${intl.formatMessage(\n                  messages.ay11_multi_select_focus_values,\n                )}`\n              : ''\n          }`;\n        case 'value':\n          return intl.formatMessage(messages.ay11_toggle_values);\n        default:\n          return '';\n      }\n    },\n\n    onChange: (props) => {\n      const { action, label = '', isDisabled } = props;\n      switch (action) {\n        case 'deselect-option':\n        case 'pop-value':\n        case 'remove-value':\n          return `${intl.formatMessage(\n            messages.ay11_option,\n          )} ${label}, ${intl.formatMessage(messages.ay11_option_deselected)}.`;\n        case 'select-option':\n          return isDisabled\n            ? `${intl.formatMessage(\n                messages.ay11_option,\n              )} ${label} ${intl.formatMessage(messages.ay11_option_disabled)}.`\n            : `${intl.formatMessage(\n                messages.ay11_option,\n              )} ${label}, ${intl.formatMessage(\n                messages.ay11_option_selected,\n              )}.`;\n        default:\n          return '';\n      }\n    },\n\n    onFocus: (props) => {\n      const {\n        context,\n        focused = {},\n        options,\n        label = '',\n        selectValue,\n        isDisabled,\n        isSelected,\n      } = props;\n\n      const getArrayIndex = (arr, item) =>\n        arr && arr.length ? `${arr.indexOf(item) + 1} di ${arr.length}` : '';\n\n      if (context === 'value' && selectValue) {\n        return `${intl.formatMessage(\n          messages.ay11_value,\n        )} ${label} ${intl.formatMessage(\n          messages.ay11_focused,\n        )}, ${getArrayIndex(selectValue, focused)}.`;\n      }\n\n      if (context === 'menu') {\n        const disabled = isDisabled\n          ? ` ${intl.formatMessage(messages.ay11_disabled)}`\n          : '';\n        const status = `${\n          isSelected\n            ? intl.formatMessage(messages.ay11_option_selected)\n            : intl.formatMessage(messages.ay11_focused)\n        }${disabled}`;\n        return `${intl.formatMessage(\n          messages.ay11_option,\n        )} ${label} ${status}, ${getArrayIndex(options, focused)}.`;\n      }\n      return '';\n    },\n\n    onFilter: (props) => {\n      const { inputValue, resultsMessage } = props;\n      return `${resultsMessage}${\n        inputValue\n          ? ` ${intl.formatMessage(messages.ay11_for_search_term)} ` +\n            inputValue\n          : ''\n      }.`;\n    },\n  };\n};\n\nexport const getReactSelectScreenReaderStatus = (intl) => ({ count }) => {\n  const results =\n    count !== 1\n      ? intl.formatMessage(messages.results)\n      : intl.formatMessage(messages.result);\n  const available =\n    count !== 1\n      ? intl.formatMessage(messages.availables)\n      : intl.formatMessage(messages.available);\n  return `${count} ${results} ${available}`;\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"select_noOptionsMessage","defaultMessage":"No options"},{"id":"select_risultato","defaultMessage":"result"},{"id":"select_risultati","defaultMessage":"results"},{"id":"ay11_Use Up and Down to choose options","defaultMessage":"Use Up and Down to choose options"},{"id":"ay11_select_press Enter to select the currently focused option","defaultMessage":"press Enter to select the currently focused option"},{"id":"ay11_select_press Escape to exit the menu","defaultMessage":"press Escape to exit the menu"},{"id":"ay11_select__press Tab to select the option and exit the menu","defaultMessage":"press Tab to select the option and exit the menu"},{"id":"ay11_select_is_focused","defaultMessage":"is_focused"},{"id":"ay11_select__type to refine list","defaultMessage":"type to refine list"},{"id":"ay11_select_press Down to open the menu","defaultMessage":"press Down to open the menu"},{"id":"ay11_select_press left to focus selected values","defaultMessage":"press left to focus selected values"},{"id":"ay11_select_Use left and right to toggle between focused values, press Backspace to remove the currently focused value","defaultMessage":"Use left and right to toggle between focused values, press Backspace to remove the currently focused value"},{"id":"ay11_select option","defaultMessage":"option"},{"id":"ay11_select deselected","defaultMessage":"deselected"},{"id":"ay11_select is disabled. Select another option.","defaultMessage":"is disabled. Select another option."},{"id":"ay11_select selected","defaultMessage":"selected"},{"id":"ay11_select value","defaultMessage":"value"},{"id":"ay11_select focused","defaultMessage":"focused"},{"id":"ay11_select disabled","defaultMessage":"disabled"},{"id":"ay11_select for search term","defaultMessage":"for search term"},{"id":"ay11_select results","defaultMessage":"results"},{"id":"ay11_select result","defaultMessage":"result"},{"id":"ay11_select availables","defaultMessage":"availables"},{"id":"ay11_select available","defaultMessage":"available"}]}},"sourceType":"module","externalDependencies":[]}