{"ast":null,"code":"import { saveAs } from 'file-saver';\nexport const getFieldName = (label, id) => {\n  return (label === null || label === void 0 ? void 0 : label.length) > 0 ? (label === null || label === void 0 ? void 0 : label.toLowerCase().replace(/[^a-zA-Z0-9]/g, '_')) + '_' + id : id;\n};\n\n/**\n * Download a file using `filename` specified in `content-disposition` header\n * @param {string} url             - URL to request\n * @param {Object} [fetchProps]    - Optional addtional props to pass to `fetch`\n * @example\n *     await downloadFile('https://example.com/myfile', { credentials: 'include' })\n */\nexport async function downloadFile(url, fetchProps) {\n  try {\n    const response = await fetch(url, fetchProps);\n    if (!response.ok) {\n      throw new Error(response);\n    }\n\n    // Extract filename from header\n    const filename = response.headers.get('content-disposition').split(';').find(n => n.includes('filename=')).replace('filename=', '').trim();\n    const blob = await response.blob();\n\n    // Download the file\n    saveAs(blob, filename);\n  } catch (error) {\n    throw new Error(error);\n  }\n}","map":{"version":3,"names":["saveAs","getFieldName","label","id","length","toLowerCase","replace","downloadFile","url","fetchProps","response","fetch","ok","Error","filename","headers","get","split","find","n","includes","trim","blob","error"],"sources":["/Users/cihanandac/Documents/code-files/utrechtsciencepark/utrecht-science-park/frontend/node_modules/volto-form-block/src/components/utils.js"],"sourcesContent":["import { saveAs } from 'file-saver';\n\nexport const getFieldName = (label, id) => {\n  return label?.length > 0\n    ? label?.toLowerCase().replace(/[^a-zA-Z0-9]/g, '_') + '_' + id\n    : id;\n};\n\n/**\n * Download a file using `filename` specified in `content-disposition` header\n * @param {string} url             - URL to request\n * @param {Object} [fetchProps]    - Optional addtional props to pass to `fetch`\n * @example\n *     await downloadFile('https://example.com/myfile', { credentials: 'include' })\n */\nexport async function downloadFile(url, fetchProps) {\n  try {\n    const response = await fetch(url, fetchProps);\n\n    if (!response.ok) {\n      throw new Error(response);\n    }\n\n    // Extract filename from header\n    const filename = response.headers\n      .get('content-disposition')\n      .split(';')\n      .find((n) => n.includes('filename='))\n      .replace('filename=', '')\n      .trim();\n    const blob = await response.blob();\n\n    // Download the file\n    saveAs(blob, filename);\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,YAAY;AAEnC,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,EAAEC,EAAE,KAAK;EACzC,OAAO,CAAAD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE,MAAM,IAAG,CAAC,GACpB,CAAAF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEG,WAAW,EAAE,CAACC,OAAO,CAAC,eAAe,EAAE,GAAG,CAAC,IAAG,GAAG,GAAGH,EAAE,GAC7DA,EAAE;AACR,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeI,YAAY,CAACC,GAAG,EAAEC,UAAU,EAAE;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAEC,UAAU,CAAC;IAE7C,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACH,QAAQ,CAAC;IAC3B;;IAEA;IACA,MAAMI,QAAQ,GAAGJ,QAAQ,CAACK,OAAO,CAC9BC,GAAG,CAAC,qBAAqB,CAAC,CAC1BC,KAAK,CAAC,GAAG,CAAC,CACVC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,QAAQ,CAAC,WAAW,CAAC,CAAC,CACpCd,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CACxBe,IAAI,EAAE;IACT,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACY,IAAI,EAAE;;IAElC;IACAtB,MAAM,CAACsB,IAAI,EAAER,QAAQ,CAAC;EACxB,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,MAAM,IAAIV,KAAK,CAACU,KAAK,CAAC;EACxB;AACF"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}